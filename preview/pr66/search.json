[{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to serocalculator","title":"Contributing to serocalculator","text":"outlines propose change serocalculator. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to serocalculator","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to serocalculator","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to serocalculator","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serocalculator\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to serocalculator","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to serocalculator","text":"Please note serocalculator project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9022, https://ucd-serg.github.io/serodynamics/, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9022, https://ucd-serg.github.io/serodynamics/},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/index.html","id":"serodynamics","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/as_case_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/as_case_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/as_case_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/as_case_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/as_case_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/autoplot.case_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/autoplot.case_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/autoplot.case_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/autoplot.case_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/autoplot.case_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/initsfunction.html","id":null,"dir":"Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/initsfunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/initsfunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/initsfunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/initsfunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/nepal_sees.html","id":null,"dir":"Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/nepal_sees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/nepal_sees.html","id":"nepal-sees","dir":"Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/nepal_sees.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/nepal_sees_jags_post.html","id":null,"dir":"Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid).","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/nepal_sees_jags_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"","code":"nepal_sees_jags_post"},{"path":[]},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/nepal_sees_jags_post.html","id":"nepal-sees-jags-post","dir":"Reference","previous_headings":"","what":"nepal_sees_jags_post","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"list consisting following named elements: curve_params data.frame titled curve_params contains posterior distribution attributes list attributes summarize jags inputs","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/nepal_sees_jags_post.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_dens.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_dens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_dens.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_dens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   library(ggmcmc)   library(dplyr)    data <- serodynamics::nepal_sees_jags_post  plot_jags_dens(     data = data, #A [serodynamics::run_mod()] [list] output.     iso = \"HlyE_IgA\", #A [character] string specifying     #nantigen/antibody of interest.     param = \"alpha\",  #A [character] string specifying parameter of     # interest.     strat = \"typhi\")  #A [character] string specifying     # stratification of interest.     } #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Loading required package: tidyr #>  #> Attaching package: ‘tidyr’ #> The following object is masked from ‘package:runjags’: #>  #>     extract #> Loading required package: ggplot2 #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_effect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/plot_jags_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {    data <- serodynamics::nepal_sees_jags_post    plot_jags_effect(data = data,                    iso = \"HlyE_IgA\",                    param = \"alpha\",                    strat = \"typhi\") }"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/postprocess_jags_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/postprocess_jags_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/postprocess_jags_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Mar 11 09:10:47 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_data.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Prepare priors","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens)"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer: many antigen-isotypes modeled","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"list elements: \"n_params\": many parameters?? \"mu.hyp\": ?? \"prec.hyp\": ?? \"omega\" : ?? \"wishdf\": Wishart distribution degrees freedom \"prec.logy.hyp\": array hyper-parameters precision (inverse variance) biomarkers, log-scale","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/prep_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/run_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable mcmc inputs runjags::run.jags() mcmc bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/run_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod,   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA )"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/run_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number mcmc chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/run_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"jags.post list() object multiple jags.post list() stratified. Returned list() class runjags::runjags base::data.frame() titled curve_params contains posterior distribution exported following attributes: iteration = number sampling iterations. chain = number mcmc chains run; 1 4. indexid = \"newperson\", indicating posterior distribution. antigen_iso = antibody/antigen type combination evaluated alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration stratified variable = variable jags stratified list attributes summarize jags inputs, including: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc)","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/run_mod.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/run_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Mar 11 09:10:54 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Mar 11 09:11:39 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/serodynamics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/serodynamics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee [contributor]","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/serodynamics_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/serodynamics_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/serodynamics_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/serodynamics_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/serodynamics_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/serodynamics_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_case_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_case_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_case_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_case_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_case_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_n_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_n_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_n_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_n_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/reference/sim_n_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 1 5 4 3 2 2 2 2 3 2"},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/news/index.html","id":"serodynamics-development-version","dir":"Changelog","previous_headings":"","what":"serodynamics (development version)","title":"serodynamics (development version)","text":"Initial CRAN submission.","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"serodynamics (development version)","text":"Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"serodynamics (development version)","text":"None yet","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/news/index.html","id":"developer-facing-changes-development-version","dir":"Changelog","previous_headings":"","what":"Developer-facing changes","title":"serodynamics (development version)","text":"Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https:/ucd-serg.github.io/serodynamics/preview/pr66/news/index.html","id":"serodynamics-000","dir":"Changelog","previous_headings":"","what":"serodynamics 0.0.0","title":"serodynamics 0.0.0","text":"Started development.","code":""}]
