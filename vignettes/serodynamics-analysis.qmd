---
title: "Serodynamics Analysis for Multiple Subjects"
author: "Kwan Ho Lee"
date: "`r Sys.Date()`"
format: pdf
jupyter: false
---

# Introduction

This document demonstrates the full workflow using the **serodynamics** package. In this analysis, we run JAGS models for three different subjects:

- **sees_npl_128 (HlyE_IgA)**
- **sees_npl_131 (HlyE_IgA)**
- **sees_npl_133 (HlyE_IgG)**

For each subject, we process the JAGS output to extract median parameter estimates and generate predicted antibody response curve plots.

# Load Required Libraries

```{r,echo=FALSE, message=FALSE, warning=FALSE}
library(serodynamics)
library(dplyr)
library(fs)
```

# Run Models for Each Subject

```{r,echo=FALSE, message=FALSE, warning=FALSE}
dataset <- nepal_sees |>
  as_case_data(id_var = "person_id",
               biomarker_var = "antigen_iso",
               value_var = "result",
               time_in_days = "dayssincefeveronset")

# Optionally filter the dataset for visit 5
filtered_dataset <- dataset %>% 
  filter(visit_num == 5)%>%
  select(Country,id,antigen_iso,visit_num)

print(filtered_dataset)
```

## Subject: sees_npl_128 (HlyE_IgA)

```{r,echo=FALSE, message=FALSE, warning=FALSE,results='hide'}
# Run JAGS model for subject sees_npl_128
jags_results <- prepare_and_run_jags(
  id = "sees_npl_128",
  antigen_iso = "HlyE_IgA"
)

# Extract results
dat <- jags_results$dat
dataset <- jags_results$dataset
nepal_sees_jags_post <- jags_results$nepal_sees_jags_post
nepal_sees_jags_post2 <- jags_results$nepal_sees_jags_post2

# Process JAGS output (partial and full processing)
param_medians_partial <- process_jags_output(
  jags_post = nepal_sees_jags_post,
  dataset = dataset,
  run_until = 7,
  id = "sees_npl_128",
  antigen_iso = "HlyE_IgA"
)

param_medians_full <- process_jags_output(
  jags_post = nepal_sees_jags_post2,
  dataset = dataset,
  run_until = 9,
  id = "sees_npl_128",
  antigen_iso = "HlyE_IgA"
)

# Generate predicted curve plot (using full processing)
plot <- plot_predicted_curve(
  param_medians_wide = param_medians_full, 
  param_medians_wide2 = param_medians_partial, 
  dat = dat,
  legend_obs = "Observed Data",
  legend_mod1 = "Model Full Predictions",
  legend_mod2 = "Model Partial Predictions"
)

```

```{r,echo=FALSE, message=FALSE}
plot
```

```{r,echo=FALSE, message=FALSE, warning=FALSE,results='hide'}
param_medians_wide_resid <- process_antibody_predictions(
  dat2 = dataset, 
  param_medians_wide = param_medians_full,
  file_mod = fs::path_package("serodynamics", "extdata/model.jags"),
  strat = "bldculres",
  id = "sees_npl_128",
  antigen_iso = "HlyE_IgA"
)

# Generate predicted antibody response curve based on the residual-based model,
# with a legend indicating observed data and the residual-based model predictions.
plot_resid <- plot_predicted_curve(
  param_medians_wide = param_medians_wide_resid, 
  dat = dat,
  legend_obs = "Observed Data",
  legend_mod1 = "Residual-based Model Predictions"
)
```

```{r,echo=FALSE, message=FALSE}
plot_resid
```

\newpage

## Subject: sees_npl_131 (HlyE_IgA)
```{r,echo=FALSE, message=FALSE, warning=FALSE,results='hide'}
# Run JAGS model for subject sees_npl_131
jags_results <- prepare_and_run_jags(
  id = "sees_npl_131",
  antigen_iso = "HlyE_IgA"
)

# Extract results
dat <- jags_results$dat
dataset <- jags_results$dataset
nepal_sees_jags_post <- jags_results$nepal_sees_jags_post
nepal_sees_jags_post2 <- jags_results$nepal_sees_jags_post2

# Process JAGS output (partial and full processing)
param_medians_partial <- process_jags_output(
  jags_post = nepal_sees_jags_post,
  dataset = dataset,
  run_until = 7,
  id = "sees_npl_131",
  antigen_iso = "HlyE_IgA"
)

param_medians_full <- process_jags_output(
  jags_post = nepal_sees_jags_post2,
  dataset = dataset,
  run_until = 9,
  id = "sees_npl_131",
  antigen_iso = "HlyE_IgA"
)

# Generate predicted curve plot (using full processing)
plot <- plot_predicted_curve(
  param_medians_wide = param_medians_full, 
  param_medians_wide2 = param_medians_partial, 
  dat = dat,
  legend_obs = "Observed Data",
  legend_mod1 = "Model Full Predictions",
  legend_mod2 = "Model Partial Predictions"
)

```

```{r,echo=FALSE, message=FALSE}
plot
```

```{r,echo=FALSE, message=FALSE, warning=FALSE,results='hide'}
param_medians_wide_resid <- process_antibody_predictions(
  dat2 = dataset, 
  param_medians_wide = param_medians_full,
  file_mod = fs::path_package("serodynamics", "extdata/model.jags"),
  strat = "bldculres",
  id = "sees_npl_131",
  antigen_iso = "HlyE_IgA"
)

# Generate predicted antibody response curve based on the residual-based model,
# with a legend indicating observed data and the residual-based model predictions.
plot_resid <- plot_predicted_curve(
  param_medians_wide = param_medians_wide_resid, 
  dat = dat,
  legend_obs = "Observed Data",
  legend_mod1 = "Residual-based Model Predictions"
)
```

```{r,echo=FALSE, message=FALSE}
plot_resid
```
\newpage

## Subject: sees_npl_133 (HlyE_IgG)
```{r,echo=FALSE, message=FALSE, warning=FALSE,results='hide'}
# Run JAGS model for subject sees_npl_133
jags_results <- prepare_and_run_jags(
  id = "sees_npl_133",
  antigen_iso = "HlyE_IgG"
)

# Extract results
dat <- jags_results$dat
dataset <- jags_results$dataset
nepal_sees_jags_post <- jags_results$nepal_sees_jags_post
nepal_sees_jags_post2 <- jags_results$nepal_sees_jags_post2

# Process JAGS output (partial and full processing)
param_medians_partial <- process_jags_output(
  jags_post = nepal_sees_jags_post,
  dataset = dataset,
  run_until = 7,
  id = "sees_npl_133",
  antigen_iso = "HlyE_IgG"
)

param_medians_full <- process_jags_output(
  jags_post = nepal_sees_jags_post2,
  dataset = dataset,
  run_until = 9,
  id = "sees_npl_133",
  antigen_iso = "HlyE_IgG"
)

# Generate predicted curve plot (using full processing)
plot <- plot_predicted_curve(
  param_medians_wide = param_medians_full, 
  param_medians_wide2 = param_medians_partial, 
  dat = dat,
  legend_obs = "Observed Data",
  legend_mod1 = "Model Full Predictions",
  legend_mod2 = "Model Partial Predictions"
)

```

```{r,echo=FALSE, message=FALSE}
plot
```

```{r,echo=FALSE, message=FALSE, warning=FALSE,results='hide'}
param_medians_wide_resid <- process_antibody_predictions(
  dat2 = dataset, 
  param_medians_wide = param_medians_full,
  file_mod = fs::path_package("serodynamics", "extdata/model.jags"),
  strat = "bldculres",
  id = "sees_npl_133",
  antigen_iso = "HlyE_IgG"
)

# Generate predicted antibody response curve based on the residual-based model,
# with a legend indicating observed data and the residual-based model predictions.
plot_resid <- plot_predicted_curve(
  param_medians_wide = param_medians_wide_resid, 
  dat = dat,
  legend_obs = "Observed Data",
  legend_mod1 = "Residual-based Model Predictions"
)
```

```{r,echo=FALSE, message=FALSE}
plot_resid
```

# Conclusion

This document generated JAGS models and corresponding predicted antibody response curves for three subjects:

- sees_npl_128 (HlyE_IgA)
- sees_npl_131 (HlyE_IgA)
- sees_npl_133 (HlyE_IgG)