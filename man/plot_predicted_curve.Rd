% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_predicted_curve.R
\name{plot_predicted_curve}
\alias{plot_predicted_curve}
\title{Generate Predicted Antibody Response Curves (Median + 95\% CI)}
\usage{
plot_predicted_curve(
  jags_post,
  id,
  antigen_iso,
  dataset = NULL,
  legend_obs = "Observed data",
  legend_median = "Median prediction",
  show_quantiles = TRUE,
  log_scale = FALSE,
  log_x = FALSE,
  show_all_curves = FALSE,
  alpha_samples = 0.3,
  xlim = NULL,
  ylab = NULL
)
}
\arguments{
\item{jags_post}{An \code{sr_model} object (returned by \code{\link[=run_mod]{run_mod()}}) containing
samples from the posterior distribution of the model parameters.}

\item{id}{The participant ID to plot; for example, "sees_npl_128".}

\item{antigen_iso}{The antigen isotype to plot; for example, "HlyE_IgA" or
"HlyE_IgG".}

\item{dataset}{(Optional) A \link[dplyr:tbl_df]{dplyr::tbl_df} with observed antibody response
data.
Must contain:
\itemize{
\item \code{timeindays}
\item \code{value}
\item \code{id}
\item \code{antigen_iso}
}}

\item{legend_obs}{Label for observed data in the legend.}

\item{legend_median}{Label for the median prediction line.}

\item{show_quantiles}{\link{logical}; if \link{TRUE} (default), plots the 2.5\%, 50\%,
and 97.5\% quantiles.}

\item{log_scale}{\link{logical}; if \link{TRUE}, applies a \link{log10} transformation to
the y-axis.}

\item{log_x}{\link{logical}; if \link{TRUE}, applies a \link{log10} transformation to the
x-axis.}

\item{show_all_curves}{\link{logical}; if \link{TRUE}, overlays all
individual sampled curves.}

\item{alpha_samples}{Numeric; transparency level for individual
curves (default = 0.3).}

\item{xlim}{(Optional) A numeric vector of length 2 providing custom x-axis
limits.}

\item{ylab}{(Optional) A string for the y-axis label. If \code{NULL} (default),
the label is automatically set to "ELISA units" or "ELISA units (log scale)"
based on the \code{log_scale} argument.}
}
\value{
A \link[ggplot2:ggplot]{ggplot2::ggplot} object displaying predicted antibody response
curves with a median curve and a 95\% credible interval band as default.
}
\description{
Plots a median antibody response curve with a 95\% credible interval
ribbon, using MCMC samples from the posterior distribution.
Optionally overlays observed data,
applies logarithmic spacing on the y- and x-axes,
and shows all individual
sampled curves.
}
\examples{
# 1) Prepare the on-the-fly dataset
dataset <- serodynamics::nepal_sees |>
  as_case_data(
    id_var        = "id",
    biomarker_var = "antigen_iso",
    value_var     = "value",
    time_in_days  = "timeindays"
  ) |>
  dplyr::rename(
    strat      = bldculres,
    timeindays = dayssincefeveronset,
    value      = result
  )

# 2) Extract just the one subject/antigen for overlay later
dat <- dataset |>
  dplyr::filter(id == "sees_npl_128", antigen_iso == "HlyE_IgA")

# 3) Load the pre-computed model output included with the package.
# This is much faster than running the model live.
model <- serodynamics::nepal_sees_jags_output


# 4a) Plot (linear axes) with all individual curves + median ribbon
p1 <- plot_predicted_curve(
  jags_post          = model,
  id                 = "sees_npl_128",
  antigen_iso        = "HlyE_IgA",
  dataset            = dat,
  legend_obs         = "Observed data",
  legend_median        = "Median prediction",
  show_quantiles     = TRUE,
  log_scale          = FALSE,
  log_x              = FALSE,
  show_all_curves    = TRUE
)
print(p1)

# 4b) Plot (log10 y-axis) with all individual curves + median ribbon
p2 <- plot_predicted_curve(
  jags_post          = model,
  id                 = "sees_npl_128",
  antigen_iso        = "HlyE_IgA",
  dataset            = dat,
  legend_obs         = "Observed data",
  legend_median        = "Median prediction",
  show_quantiles     = TRUE,
  log_scale          = TRUE,
  log_x              = FALSE,
  show_all_curves    = TRUE
)
print(p2)

# 4c) Plot with custom x-axis limits (0-600 days)
p3 <- plot_predicted_curve(
  jags_post          = model,
  id                 = "sees_npl_128",
  antigen_iso        = "HlyE_IgA",
  dataset            = dat,
  legend_obs         = "Observed data",
  legend_median        = "Median prediction",
  show_quantiles     = TRUE,
  log_scale          = FALSE,
  log_x              = FALSE,
  show_all_curves    = TRUE,
  xlim               = c(0, 600)
)
print(p3)
}
