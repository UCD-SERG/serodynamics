% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Run_Mod.R
\name{run_mod}
\alias{run_mod}
\title{Run Jags Model}
\usage{
run_mod(
  data,
  file_mod = serodynamics_example("model.jags"),
  nchain = 4,
  nadapt = 0,
  nburn = 0,
  nmc = 100,
  niter = 100,
  strat = NA,
  with_post = FALSE,
  ...
)
}
\arguments{
\item{data}{A \code{\link[base:data.frame]{base::data.frame()}} with the following columns.}

\item{file_mod}{The name of the file that contains model structure.}

\item{nchain}{An \link{integer} between 1 and 4 that specifies
the number of MCMC chains to be run per jags model.}

\item{nadapt}{An \link{integer} specifying the number of adaptations per chain.}

\item{nburn}{An \link{integer} specifying the number of burn ins before sampling.}

\item{nmc}{An \link{integer} specifying the number of samples in posterior chains.}

\item{niter}{An \link{integer} specifying the number of iterations.}

\item{strat}{A \link{character} string specifying the stratification variable,
entered in quotes.}

\item{with_post}{A \link{logical} value specifying whether a raw \code{jags.post}
component
should be included as an element of the \link{list} object returned by \code{run_mod()}
(see \code{Value} section below for details).
Note: These objects can be large.}

\item{...}{
  Arguments passed on to \code{\link[=prep_priors]{prep_priors}}
  \describe{
    \item{\code{max_antigens}}{An \link{integer} specifying how many
antigen-isotypes (biomarkers) will be modeled.}
    \item{\code{mu_hyp_param}}{A \link{numeric} \link{vector} of 5 values representing the prior
mean for the population level parameters
parameters (y0, y1, t1, r, alpha) for each biomarker.
If specified, must be 5 values long, representing the following parameters:
\itemize{
\item y0 = baseline antibody concentration (default = 1.0)
\item y1 = peak antibody concentration (default = 7.0)
\item t1 = time to peak (default = 1.0)
\item r = shape parameter (default = -4.0)
\item alpha = decay rate (default = -1.0)
}}
    \item{\code{prec_hyp_param}}{A \link{numeric} \link{vector} of 5 values corresponding to
hyperprior diagonal entries for the precision matrix (i.e. inverse variance)
representing prior covariance of uncertainty around \code{mu_hyp_param}.
If specified, must be 5 values long:
\itemize{
\item defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0
}}
    \item{\code{omega_param}}{A \link{numeric} \link{vector} of 5 values corresponding to the
diagonal entries representing the Wishart hyperprior
distributions of \code{prec_hyp_param}, describing how much we expect parameters
to vary between individuals.
If specified, must be 5 values long:
\itemize{
\item defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0
}}
    \item{\code{wishdf_param}}{An \link{integer} \link{vector} of 1 value specifying the degrees
of freedom for the Wishart hyperprior distribution of \code{prec_hyp_param}.
If specified, must be 1 value long.
\itemize{
\item default = 20.0
\item The value of \code{wishdf_param} controls how informative the Wishart prior
is. Higher values lead to tighter priors on individual variation.
Lower values (e.g., 5â€“10) make the prior more weakly informative,
which can help improve convergence if the model is over-regularized.
}}
    \item{\code{prec_logy_hyp_param}}{A \link{numeric} \link{vector} of 2 values corresponding to
hyperprior diagonal entries on the log-scale for the precision matrix
(i.e. inverse variance) representing prior beliefs of individual variation.
If specified, must be 2 values long:
\itemize{
\item defaults = 4.0, 1.0
}}
  }}
}
\value{
An \code{sr_model} class object: a subclass of \link[dplyr:tbl_df]{dplyr::tbl_df} that
contains MCMC samples from the joint posterior distribution of the model
parameters, conditional on the provided input \code{data},
including the following:
\itemize{
\item \code{iteration} = Number of sampling iterations
\item \code{chain} = Number of MCMC chains run; between 1 and 4
\item \code{Parameter} = Parameter being estimated. Includes the following:
\itemize{
\item \code{y0} = Posterior estimate of baseline antibody concentration
\item \code{y1} = Posterior estimate of peak antibody concentration
\item \code{t1} = Posterior estimate of time to peak
\item \code{shape} = Posterior estimate of shape parameter
\item \code{alpha} = Posterior estimate of decay rate
}
\item \code{Iso_type} = Antibody/antigen type combination being evaluated
\item \code{Stratification} = The variable used to stratify jags model
\item \code{Subject} = ID of subject being evaluated
\item \code{value} = Estimated value of the parameter
\item The following \link{attributes} are included in the output:
\itemize{
\item \code{class}: Class of the output object.
\item \code{nChain}: Number of chains run.
\item \code{nParameters}: The amount of parameters estimated in the model.
\item \code{nIterations}: Number of iteration specified.
\item \code{nBurnin}: Number of burn ins.
\item \code{nThin}: Thinning number (niter/nmc).
\item \code{priors}: A \link{list} that summarizes the input priors, including:
\itemize{
\item \code{mu_hyp_param}
\item \code{prec_hyp_param}
\item \code{omega_param}
\item \code{wishdf}
\item \code{prec_logy_hyp_param}
}
\item \code{fitted_residuals}: A \link{data.frame} containing fitted and residual values
for all observations.
\item An optional \code{"jags.post"} attribute, included when argument
\code{with_post} = TRUE.
}
}
}
\description{
\code{run_mod()} takes a data frame and adjustable MCMC inputs to
\code{\link[runjags:run.jags]{runjags::run.jags()}} as an MCMC
Bayesian model to estimate antibody dynamic curve parameters.
The \code{\link[rjags:jags.model]{rjags::jags.model()}} models seroresponse dynamics to an
infection. The antibody dynamic curve includes the following parameters:
\itemize{
\item y0 = baseline antibody concentration
\item y1 = peak antibody concentration
\item t1 = time to peak
\item shape = shape parameter
\item alpha = decay rate
}
}
\examples{
if (!is.element(runjags::findjags(), c("", NULL))) {
  library(runjags)
  set.seed(1)
  library(dplyr)
  strat1 <- serocalculator::typhoid_curves_nostrat_100 |>
    sim_case_data(n = 100) |>
    mutate(strat = "stratum 2")
  strat2 <- serocalculator::typhoid_curves_nostrat_100 |>
    sim_case_data(n = 100) |>
    mutate(strat = "stratum 1")

  dataset <- bind_rows(strat1, strat2)

  fitted_model <- run_mod(
    data = dataset, # The data set input
    file_mod = serodynamics_example("model.jags"),
    nchain = 4, # Number of mcmc chains to run
    nadapt = 100, # Number of adaptations to run
    nburn = 100, # Number of unrecorded samples before sampling begins
    nmc = 1000,
    niter = 2000, # Number of iterations
    strat = "strat"
  ) # Variable to be stratified
}
}
\author{
Sam Schildhauer
}
