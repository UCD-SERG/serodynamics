[{"path":"https://ucd-serg.github.io/serodynamics/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/CONTRIBUTING.html","id":"sec-code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9042, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9042},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/index.html","id":"serodynamics","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/CONTRIBUTING.html","id":null,"dir":"Preview > Pr105","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr105","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr105","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr105","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr105","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr105","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/LICENSE.html","id":null,"dir":"Preview > Pr105","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/articles/index.html","id":null,"dir":"Preview > Pr105 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"dobson  test-snippets","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/authors.html","id":null,"dir":"Preview > Pr105","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/authors.html","id":"citation","dir":"Preview > Pr105","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9035, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9035},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/index.html","id":"serodynamics","dir":"Preview > Pr105","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/index.html","id":"installation","dir":"Preview > Pr105","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr105 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/news/index.html","id":"new-features-development-version","dir":"Preview > Pr105 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Updating run_mod description specifying data input values (#105) Replacing old data object new run_mod output (#102) Adding class assignment run_mod output (#76) Making prep_priors modifiable (#78) Taking include_subs input option, default include individuals Making single tbl output pieces attributes. jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr105 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr105 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/news/index.html","id":"serodynamics-000","dir":"Preview > Pr105 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/as_case_data.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/as_case_data.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/index.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/index.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/index.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/index.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/index.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/index.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/index.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/index.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/index.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/initsfunction.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/initsfunction.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/load_data.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/load_data.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/load_data.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/nepal_sees.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/nepal_sees.html","id":"source","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/nepal_sees_jags_output.html","id":"format","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Format","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"S3 object class sr_model: dplyr::tbl_df contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\"). Contains 40,000 rows, 7 columns, model attributes. Iteration Number sampling iterations: 500 iterations Chain Number MCMC chains run: 2 chains run Parameter Parameter estimated Iso_type Antibody/antigen type combination evaluated: HlyE_IgA HlyE_IgG Stratification variable used stratify jags model: typhi paratyphi Subject ID subject evaluated: newperson, sees_npl_1, sees_npl_2 value Estimated value parameter attributes list attributes summarize jags inputs, priors, optional jags_post mcmc object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/post_summ.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/post_summ.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/post_summ.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/post_summ.html","id":"author","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter Stratification       Mean       SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>     <chr>               <dbl>    <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha     paratyphi         0.00229  3.75e-3 1.27e-3 1.11e-4 5.79e-4 #>  2 HlyE_IgA alpha     typhi             0.00378  6.16e-3 2.17e-3 3.08e-4 1.12e-3 #>  3 HlyE_IgA shape     paratyphi         1.66     2.74e-1 1.61e+0 1.29e+0 1.47e+0 #>  4 HlyE_IgA shape     typhi             1.65     3.68e-1 1.57e+0 1.23e+0 1.42e+0 #>  5 HlyE_IgA t1        paratyphi         3.85     1.34e+0 3.70e+0 1.86e+0 2.92e+0 #>  6 HlyE_IgA t1        typhi             7.62     4.83e+0 6.67e+0 2.26e+0 4.61e+0 #>  7 HlyE_IgA y0        paratyphi         2.55     9.07e-1 2.41e+0 1.23e+0 1.87e+0 #>  8 HlyE_IgA y0        typhi             2.90     2.92e+0 2.25e+0 5.76e-1 1.52e+0 #>  9 HlyE_IgA y1        paratyphi      1024.       6.84e+3 1.54e+2 8.85e+0 5.45e+1 #> 10 HlyE_IgA y1        typhi          1726.       7.50e+3 2.69e+2 8.41e+0 9.10e+1 #> 11 HlyE_IgG alpha     paratyphi         0.00257  2.60e-3 1.74e-3 2.29e-4 8.76e-4 #> 12 HlyE_IgG alpha     typhi             0.00175  1.69e-3 1.22e-3 2.38e-4 7.06e-4 #> 13 HlyE_IgG shape     paratyphi         1.36     2.03e-1 1.32e+0 1.10e+0 1.19e+0 #> 14 HlyE_IgG shape     typhi             1.52     3.88e-1 1.42e+0 1.11e+0 1.27e+0 #> 15 HlyE_IgG t1        paratyphi         4.78     2.09e+0 4.37e+0 1.93e+0 3.30e+0 #> 16 HlyE_IgG t1        typhi             9.76     8.02e+0 7.67e+0 1.87e+0 4.59e+0 #> 17 HlyE_IgG y0        paratyphi         1.72     7.66e-1 1.54e+0 7.09e-1 1.19e+0 #> 18 HlyE_IgG y0        typhi             2.29     1.94e+0 1.82e+0 3.80e-1 1.09e+0 #> 19 HlyE_IgG y1        paratyphi       833.       2.13e+3 2.88e+2 1.82e+1 1.09e+2 #> 20 HlyE_IgG y1        typhi           402.       6.91e+2 2.21e+2 3.02e+1 1.07e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Sat Jul  5 03:35:43 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_data.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_data.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_data.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_priors.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Takes multiple vector inputs allow modifiable priors. Priors can specified option run_mod.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(   max_antigens,   mu_hyp_param = c(1, 7, 1, -4, -1),   prec_hyp_param = c(1, 1e-05, 1, 0.001, 1),   omega_param = c(1, 50, 1, 10, 1),   wishdf_param = 20,   prec_logy_hyp_param = c(4, 1) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_priors.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"\"curve_params_priors\" object (subclass list inputs prep_priors() attached attributes entry named \"used_priors\"), containing following elements: \"n_params\": Corresponds 5 parameters estimated. \"mu.hyp\": matrix hyperpriors dimensions max_antigens x 5 (# parameters), representing mean hyperprior distribution five seroresponse parameters: y0, y1, t1, r, alpha). \"prec.hyp\": three-dimensional numeric array dimensions max_antigens x 5 (# parameters), containing precision matrices hyperprior distributions mu.hyp, biomarker. \"omega\" : three-dimensional numeric array 5 matrix,dimensions max_antigens x 5 (# parameters), representing precision matrix Wishart hyper-priors prec.hyp. \"wishdf\": vector 2 values specifying degrees freedom Wishart distribution used subject-level precision prior. \"prec.logy.hyp\": matrix hyper-parameters precision (inverse variance) individual variation measuring max_antigens x 2, log-scale. used_priors = inputs prep_priors() attached attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2,             mu_hyp_param = c(1.0, 7.0, 1.0, -4.0, -1.0),             prec_hyp_param = c(1.0, 0.00001, 1.0, 0.001, 1.0),             omega_param = c(1.0, 50.0, 1.0, 10.0, 1.0),             wishdf_param = 20,             prec_logy_hyp_param = c(4.0, 1.0)) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>   prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/reexports.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/run_mod.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable MCMC inputs runjags::run.jags() MCMC Bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak shape = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod = serodynamics_example(\"model.jags\"),   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/run_mod.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. values can clarified inputs using as_case_data() explicitly labeled . id_var = ID individuals included biomarker_var = different antigen isotype combinations measured timeindays = amount time days since symptom onset value_var = measured assay value file_mod name file contains model structure. nchain integer 1 4 specifies number MCMC chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. ... Arguments passed prep_priors max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/run_mod.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"sr_model class object: subclass dplyr::tbl_df contains MCMC samples joint posterior distribution model parameters, conditional provided input data, including following: iteration = Number sampling iterations chain = Number MCMC chains run; 1 4 Parameter = Parameter estimated. Includes following: y0 = Posterior estimate baseline antibody concentration y1 = Posterior estimate peak antibody concentration t1 = Posterior estimate time peak shape = Posterior estimate shape parameter alpha = Posterior estimate decay rate Iso_type = Antibody/antigen type combination evaluated Stratification = variable used stratify jags model Subject = ID subject evaluated value = Estimated value parameter following attributes included output: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc) priors: list summarizes input priors, including: mu_hyp_param prec_hyp_param omega_param wishdf prec_logy_hyp_param optional \"jags.post\" attribute, included argument with_post = TRUE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/run_mod.html","id":"author","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Sat Jul  5 03:35:50 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Sat Jul  5 03:36:38 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee ksjlee@ucdavis.edu [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_case_data.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_case_data.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr105/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr105 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 4 3 2 2 2 2 3 2 4 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/CONTRIBUTING.html","id":null,"dir":"Preview > Pr114","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr114","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr114","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr114","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr114","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr114","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/LICENSE.html","id":null,"dir":"Preview > Pr114","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/articles/index.html","id":null,"dir":"Preview > Pr114 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"dobson  test-snippets","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/authors.html","id":null,"dir":"Preview > Pr114","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/authors.html","id":"citation","dir":"Preview > Pr114","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9041, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9041},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/index.html","id":"serodynamics","dir":"Preview > Pr114","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/index.html","id":"installation","dir":"Preview > Pr114","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr114 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/news/index.html","id":"new-features-development-version","dir":"Preview > Pr114 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"<<<<<<< HEAD * Creating default print.sr_model function sr_model class (#114) * Including fitted residual values data frame run_mod output. (#101) * Added plot_predicted_curve() support faceting multiple IDs (#68) * Replacing old data object new run_mod output (#102) * Adding class assignment run_mod output (#76) * Making prep_priors modifiable (#78) * Changes run_mod() output: - Taking include_subs input option, default include individuals - Making single tbl output - pieces attributes. * Changes run_mod() (#79): - jags.post now optionally included output, specified argument with_post - subjects now optionally included curve_params output component, specified argument include_subs * Diagnostic function produce R-hat dotplots stratification (#67) * Added function summarizing estimates table (#74) * Diagnostic trace plot function strat (#64) * Diagnostic function produce effective sample size plots stratification (#66) * Diagnostic function produce density plots stratification (#27) * Added SEES data set data folder documentation (#41) * Fixing SEES data added jags_post SEES (#63) * as_case_data() now creates column visit_num (#47, #50) * Added postprocess_jags_output() API (#33) * Added initsfunction() API (#37) * Added participant IDs names nsmpl element prep_data() output (#34) * Added initsfunction() API (#37) * Added as_case_data() API (#31) * Added prep_priors() API (#30) * Added autoplot() method case_data objects (#28) * Added examples sim_pop_data(), autoplot.case_data() (#18) * Added attributes return run_mod function (#24) * exported run_mod() function (#22) * Function runs jags option stratification included. (#14) * Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr114 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr114 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"vectorized ab() function (#116) Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/news/index.html","id":"serodynamics-000","dir":"Preview > Pr114 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/as_case_data.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/as_case_data.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/calc_fit_mod.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"calc_fit_mod() takes antibody kinetic parameter estimates calculates fitted residual values. Fitted values correspond estimated assay value (ex. ELISA units etc.) time since infection (TSI). Residual values calculated difference fitted observed values.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/calc_fit_mod.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"","code":"calc_fit_mod(modeled_dat, original_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/calc_fit_mod.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"modeled_dat data.frame modeled antibody kinetic parameter values. original_data data.frame original input dataset.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/calc_fit_mod.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"data.frame attached attributes following values: Subject = ID number specifying individual Iso_type = modeled antigen_isotype t = Time since infection fitted = fitted value calculated using model output parameters given t residual = residual value calculated difference observed fitted values given t","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/index.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/index.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/index.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/index.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/index.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/index.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics plot_predicted_curve() Generate Predicted Antibody Response Curves (Median + 95% CI)","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/index.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/index.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates print(<sr_model>) Default print run_mod() output object class sr_model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/index.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/initsfunction.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/initsfunction.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/load_data.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/load_data.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/load_data.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/nepal_sees.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/nepal_sees.html","id":"source","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/nepal_sees_jags_output.html","id":"format","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Format","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"S3 object class sr_model: dplyr::tbl_df contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\"). Contains 40,000 rows, 7 columns, model attributes. Iteration Number sampling iterations: 500 iterations Chain Number MCMC chains run: 2 chains run Parameter Parameter estimated Iso_type Antibody/antigen type combination evaluated: HlyE_IgA HlyE_IgG Stratification variable used stratify jags model: typhi paratyphi Subject ID subject evaluated: newperson, sees_npl_1, sees_npl_2 value Estimated value parameter attributes list attributes summarize jags inputs, priors, optional jags_post mcmc object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_predicted_curve.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"Plots median antibody response curve 95% credible interval ribbon, using MCMC samples posterior distribution. Optionally overlays observed data, applies logarithmic spacing y- x-axes, shows individual sampled curves.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_predicted_curve.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"plot_predicted_curve(   model,   ids,   antigen_iso,   dataset = NULL,   legend_obs = \"Observed data\",   legend_median = \"Median prediction\",   show_quantiles = TRUE,   log_y = FALSE,   log_x = FALSE,   show_all_curves = FALSE,   alpha_samples = 0.3,   xlim = NULL,   ylab = NULL,   facet_by_id = length(ids) > 1,   ncol = NULL )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_predicted_curve.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"model sr_model object (returned run_mod()) containing samples posterior distribution model parameters. ids participant IDs plot; example, \"sees_npl_128\". antigen_iso antigen isotype plot; example, \"HlyE_IgA\" \"HlyE_IgG\". dataset (Optional) dplyr::tbl_df observed antibody response data. Must contain: timeindays value id antigen_iso legend_obs Label observed data legend. legend_median Label median prediction line. show_quantiles logical; TRUE (default), plots 2.5%, 50%, 97.5% quantiles. log_y logical; TRUE, applies log10 transformation y-axis. log_x logical; TRUE, applies log10 transformation x-axis. show_all_curves logical; TRUE, overlays individual sampled curves. alpha_samples Numeric; transparency level individual curves (default = 0.3). xlim (Optional) numeric vector length 2 providing custom x-axis limits. ylab (Optional) string y-axis label. NULL (default), label automatically set \"ELISA units\" \"ELISA units (log scale)\" based log_y argument. facet_by_id logical; TRUE, facets plot 'id'. Defaults TRUE multiple IDs provided. ncol integer; number columns faceting.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_predicted_curve.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"ggplot2::ggplot object displaying predicted antibody response curves median curve 95% credible interval band default.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_predicted_curve.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"sees_model <- serodynamics::nepal_sees_jags_output sees_data <- serodynamics::nepal_sees  # Plot (linear axes) with all individual curves + median ribbon p1 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p1)   # Plot (log10 y-axis) with all individual curves + median ribbon p2 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = TRUE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p2)   # Plot with custom x-axis limits (0-600 days) p3 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE,   xlim               = c(0, 600) ) print(p3)   # Multi-ID, faceted plot (single antigen): p4 <- plot_predicted_curve(   model           = sees_model,   dataset         = sees_data,   id              = c(\"sees_npl_128\", \"sees_npl_131\"),   antigen_iso     = \"HlyE_IgA\",   show_all_curves = TRUE,   facet_by_id     = TRUE ) print(p4)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/post_summ.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/post_summ.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/post_summ.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/post_summ.html","id":"author","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter Stratification       Mean       SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>     <chr>               <dbl>    <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha     paratyphi         0.00266  3.92e-3 1.56e-3 1.99e-4 7.47e-4 #>  2 HlyE_IgA alpha     typhi             0.00293  4.18e-3 1.51e-3 1.48e-4 6.88e-4 #>  3 HlyE_IgA shape     paratyphi         1.63     2.82e-1 1.56e+0 1.27e+0 1.44e+0 #>  4 HlyE_IgA shape     typhi             1.77     4.41e-1 1.67e+0 1.26e+0 1.49e+0 #>  5 HlyE_IgA t1        paratyphi         4.28     2.11e+0 3.90e+0 1.56e+0 2.73e+0 #>  6 HlyE_IgA t1        typhi             7.91     5.98e+0 6.36e+0 1.95e+0 4.39e+0 #>  7 HlyE_IgA y0        paratyphi         3.83     2.65e+0 2.85e+0 1.07e+0 1.88e+0 #>  8 HlyE_IgA y0        typhi             2.90     2.23e+0 2.34e+0 7.70e-1 1.69e+0 #>  9 HlyE_IgA y1        paratyphi      2781.       4.19e+4 1.92e+2 7.45e+0 5.61e+1 #> 10 HlyE_IgA y1        typhi          1275.       6.42e+3 2.58e+2 9.11e+0 8.44e+1 #> 11 HlyE_IgG alpha     paratyphi         0.00202  2.11e-3 1.43e-3 2.25e-4 7.07e-4 #> 12 HlyE_IgG alpha     typhi             0.00196  1.88e-3 1.39e-3 2.69e-4 7.57e-4 #> 13 HlyE_IgG shape     paratyphi         1.41     1.56e-1 1.39e+0 1.17e+0 1.29e+0 #> 14 HlyE_IgG shape     typhi             1.49     3.78e-1 1.39e+0 1.08e+0 1.23e+0 #> 15 HlyE_IgG t1        paratyphi         5.02     1.87e+0 4.73e+0 2.18e+0 3.75e+0 #> 16 HlyE_IgG t1        typhi             7.67     6.84e+0 6.02e+0 1.59e+0 3.82e+0 #> 17 HlyE_IgG y0        paratyphi         2.46     9.14e-1 2.33e+0 1.23e+0 1.87e+0 #> 18 HlyE_IgG y0        typhi             2.11     1.40e+0 1.79e+0 4.79e-1 1.22e+0 #> 19 HlyE_IgG y1        paratyphi       929.       4.52e+3 2.73e+2 2.09e+1 1.08e+2 #> 20 HlyE_IgG y1        typhi           512.       9.65e+2 2.44e+2 2.77e+1 1.11e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 12 21:45:52 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_data.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_data.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_data.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_priors.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Takes multiple vector inputs allow modifiable priors. Priors can specified option run_mod.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(   max_antigens,   mu_hyp_param = c(1, 7, 1, -4, -1),   prec_hyp_param = c(1, 1e-05, 1, 0.001, 1),   omega_param = c(1, 50, 1, 10, 1),   wishdf_param = 20,   prec_logy_hyp_param = c(4, 1) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_priors.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"\"curve_params_priors\" object (subclass list inputs prep_priors() attached attributes entry named \"used_priors\"), containing following elements: \"n_params\": Corresponds 5 parameters estimated. \"mu.hyp\": matrix hyperpriors dimensions max_antigens x 5 (# parameters), representing mean hyperprior distribution five seroresponse parameters: y0, y1, t1, r, alpha). \"prec.hyp\": three-dimensional numeric array dimensions max_antigens x 5 (# parameters), containing precision matrices hyperprior distributions mu.hyp, biomarker. \"omega\" : three-dimensional numeric array 5 matrix,dimensions max_antigens x 5 (# parameters), representing precision matrix Wishart hyper-priors prec.hyp. \"wishdf\": vector 2 values specifying degrees freedom Wishart distribution used subject-level precision prior. \"prec.logy.hyp\": matrix hyper-parameters precision (inverse variance) individual variation measuring max_antigens x 2, log-scale. used_priors = inputs prep_priors() attached attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2,             mu_hyp_param = c(1.0, 7.0, 1.0, -4.0, -1.0),             prec_hyp_param = c(1.0, 0.00001, 1.0, 0.001, 1.0),             omega_param = c(1.0, 50.0, 1.0, 10.0, 1.0),             wishdf_param = 20,             prec_logy_hyp_param = c(4.0, 1.0)) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>   prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/print.sr_model.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Default print for run_mod() output object of class sr_model — print.sr_model","title":"Default print for run_mod() output object of class sr_model — print.sr_model","text":"default print method class sr_model includes median posterior distribution antibody kinetic curve parameters Iso_type Stratification (specified).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/print.sr_model.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Default print for run_mod() output object of class sr_model — print.sr_model","text":"","code":"# S3 method for class 'sr_model' print(x, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/print.sr_model.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Default print for run_mod() output object of class sr_model — print.sr_model","text":"x sr_model output object run_mod(). ... Additional arguments affecting summary produced. run_mod() function.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/print.sr_model.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Default print for run_mod() output object of class sr_model — print.sr_model","text":"data summary contains mean posterior distribution antibody kinetic curve parameters Iso_type Stratification (specified).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/print.sr_model.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Default print for run_mod() output object of class sr_model — print.sr_model","text":"","code":"print(nepal_sees_jags_output) #> An sr_model with the following median values: #>  #>   Stratification Iso_type       alpha    shape      t1       y0       y1 #> 1          typhi HlyE_IgA 0.000869201 1.587970 6.41418 2.486935 317.1110 #> 2      paratyphi HlyE_IgA 0.001556295 1.561960 3.90369 2.852925 191.8805 #> 3          typhi HlyE_IgG 0.001337480 1.304980 5.88293 1.805900 297.7720 #> 4      paratyphi HlyE_IgG 0.001432405 1.386685 4.72698 2.330555 272.8455"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/reexports.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/run_mod.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable MCMC inputs runjags::run.jags() MCMC Bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak shape = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod = serodynamics_example(\"model.jags\"),   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/run_mod.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number MCMC chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. ... Arguments passed prep_priors max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/run_mod.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"sr_model class object: subclass dplyr::tbl_df contains MCMC samples joint posterior distribution model parameters, conditional provided input data, including following: iteration = Number sampling iterations chain = Number MCMC chains run; 1 4 Parameter = Parameter estimated. Includes following: y0 = Posterior estimate baseline antibody concentration y1 = Posterior estimate peak antibody concentration t1 = Posterior estimate time peak shape = Posterior estimate shape parameter alpha = Posterior estimate decay rate Iso_type = Antibody/antigen type combination evaluated Stratification = variable used stratify jags model Subject = ID subject evaluated value = Estimated value parameter following attributes included output: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc). priors: list summarizes input priors, including: mu_hyp_param prec_hyp_param omega_param wishdf prec_logy_hyp_param fitted_residuals: data.frame containing fitted residual values observations. optional \"jags.post\" attribute, included argument with_post = TRUE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/run_mod.html","id":"author","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 12 21:45:59 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 12 21:46:47 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee ksjlee@ucdavis.edu [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_case_data.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_case_data.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 4 3 2 2 2 2 3 2 4 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/use_att_names.html","id":null,"dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"use_att_names takes prepared longitudinal data antibody kinetic modeling names columns using attribute values allow merging modeled run_mod() output dplyr::tbl_df. column names include Subject, Iso_type, t, result.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/use_att_names.html","id":"ref-usage","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Usage","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"","code":"use_att_names(data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/use_att_names.html","id":"arguments","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Arguments","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"data data.frame raw longitudinal data prepared antibody kinetic modeling using as_case_data().","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr114/reference/use_att_names.html","id":"value","dir":"Preview > Pr114 > Reference","previous_headings":"","what":"Value","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"input data.frame columns named attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/CONTRIBUTING.html","id":null,"dir":"Preview > Pr119","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr119","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr119","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr119","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr119","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr119","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/LICENSE.html","id":null,"dir":"Preview > Pr119","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/articles/index.html","id":null,"dir":"Preview > Pr119 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"dobson  test-snippets","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/authors.html","id":null,"dir":"Preview > Pr119","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Author. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/authors.html","id":"citation","dir":"Preview > Pr119","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Lee K, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9036, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kwan Ho Lee and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9036},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/index.html","id":"serodynamics","dir":"Preview > Pr119","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/index.html","id":"installation","dir":"Preview > Pr119","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr119 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/news/index.html","id":"new-features-development-version","dir":"Preview > Pr119 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Added plot_predicted_curve() (#68) Replacing old data object new run_mod output (#102) Adding class assignment run_mod output (#76) Making prep_priors modifiable (#78) Taking include_subs input option, default include individuals Making single tbl output pieces attributes. jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr119 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr119 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/news/index.html","id":"serodynamics-000","dir":"Preview > Pr119 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/as_case_data.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/as_case_data.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/index.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/index.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/index.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/index.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/index.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/index.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics plot_predicted_curve() Generate Predicted Antibody Response Curves (Median + 95% CI)","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/index.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/index.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/index.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/initsfunction.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/initsfunction.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/load_data.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/load_data.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/load_data.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/nepal_sees.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/nepal_sees.html","id":"source","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/nepal_sees_jags_output.html","id":"format","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Format","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"S3 object class sr_model: dplyr::tbl_df contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\"). Contains 40,000 rows, 7 columns, model attributes. Iteration Number sampling iterations: 500 iterations Chain Number MCMC chains run: 2 chains run Parameter Parameter estimated Iso_type Antibody/antigen type combination evaluated: HlyE_IgA HlyE_IgG Stratification variable used stratify jags model: typhi paratyphi Subject ID subject evaluated: newperson, sees_npl_1, sees_npl_2 value Estimated value parameter attributes list attributes summarize jags inputs, priors, optional jags_post mcmc object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_predicted_curve.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"Plots median antibody response curve 95% credible interval ribbon, using MCMC samples posterior distribution. Optionally overlays observed data, applies logarithmic spacing y- x-axes, shows individual sampled curves.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_predicted_curve.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"plot_predicted_curve(   sr_model,   id,   antigen_iso,   dataset = NULL,   legend_obs = \"Observed data\",   legend_median = \"Median prediction\",   show_quantiles = TRUE,   log_y = FALSE,   log_x = FALSE,   show_all_curves = FALSE,   alpha_samples = 0.3,   xlim = NULL,   ylab = NULL )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_predicted_curve.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"sr_model sr_model object (returned run_mod()) containing samples posterior distribution model parameters. id participant ID plot; example, \"sees_npl_128\". antigen_iso antigen isotype plot; example, \"HlyE_IgA\" \"HlyE_IgG\". dataset (Optional) dplyr::tbl_df observed antibody response data. Must contain: timeindays value id antigen_iso legend_obs Label observed data legend. legend_median Label median prediction line. show_quantiles logical; TRUE (default), plots 2.5%, 50%, 97.5% quantiles. log_y logical; TRUE, applies log10 transformation y-axis. log_x logical; TRUE, applies log10 transformation x-axis. show_all_curves logical; TRUE, overlays individual sampled curves. alpha_samples Numeric; transparency level individual curves (default = 0.3). xlim (Optional) numeric vector length 2 providing custom x-axis limits. ylab (Optional) string y-axis label. NULL (default), label automatically set \"ELISA units\" \"ELISA units (log scale)\" based log_y argument.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_predicted_curve.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"ggplot2::ggplot object displaying predicted antibody response curves median curve 95% credible interval band default.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_predicted_curve.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"# 1) Prepare the on-the-fly dataset dataset <- serodynamics::nepal_sees |>   as_case_data(     id_var        = \"id\",     biomarker_var = \"antigen_iso\",     value_var     = \"value\",     time_in_days  = \"timeindays\"   ) |>   dplyr::rename(     strat      = bldculres,     timeindays = dayssincefeveronset,     value      = result   )  # 2) Extract just the one subject/antigen for overlay later dat <- dataset |>   dplyr::filter(id == \"sees_npl_128\", antigen_iso == \"HlyE_IgA\")  # 3) Load the pre-computed model output included with the package. # This is much faster than running the model live. model <- serodynamics::nepal_sees_jags_output   # 4a) Plot (linear axes) with all individual curves + median ribbon p1 <- plot_predicted_curve(   sr_model           = model,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   dataset            = dat,   legend_obs         = \"Observed data\",   legend_median        = \"Median prediction\",   show_quantiles     = TRUE,   log_y          = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p1)   # 4b) Plot (log10 y-axis) with all individual curves + median ribbon p2 <- plot_predicted_curve(   sr_model           = model,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   dataset            = dat,   legend_obs         = \"Observed data\",   legend_median        = \"Median prediction\",   show_quantiles     = TRUE,   log_y          = TRUE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p2)   # 4c) Plot with custom x-axis limits (0-600 days) p3 <- plot_predicted_curve(   sr_model           = model,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   dataset            = dat,   legend_obs         = \"Observed data\",   legend_median        = \"Median prediction\",   show_quantiles     = TRUE,   log_y          = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE,   xlim               = c(0, 600) ) print(p3)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/post_summ.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/post_summ.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/post_summ.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/post_summ.html","id":"author","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter Stratification       Mean       SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>     <chr>               <dbl>    <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha     paratyphi         0.00266  3.92e-3 1.56e-3 1.99e-4 7.47e-4 #>  2 HlyE_IgA alpha     typhi             0.00293  4.18e-3 1.51e-3 1.48e-4 6.88e-4 #>  3 HlyE_IgA shape     paratyphi         1.63     2.82e-1 1.56e+0 1.27e+0 1.44e+0 #>  4 HlyE_IgA shape     typhi             1.77     4.41e-1 1.67e+0 1.26e+0 1.49e+0 #>  5 HlyE_IgA t1        paratyphi         4.28     2.11e+0 3.90e+0 1.56e+0 2.73e+0 #>  6 HlyE_IgA t1        typhi             7.91     5.98e+0 6.36e+0 1.95e+0 4.39e+0 #>  7 HlyE_IgA y0        paratyphi         3.83     2.65e+0 2.85e+0 1.07e+0 1.88e+0 #>  8 HlyE_IgA y0        typhi             2.90     2.23e+0 2.34e+0 7.70e-1 1.69e+0 #>  9 HlyE_IgA y1        paratyphi      2781.       4.19e+4 1.92e+2 7.45e+0 5.61e+1 #> 10 HlyE_IgA y1        typhi          1275.       6.42e+3 2.58e+2 9.11e+0 8.44e+1 #> 11 HlyE_IgG alpha     paratyphi         0.00202  2.11e-3 1.43e-3 2.25e-4 7.07e-4 #> 12 HlyE_IgG alpha     typhi             0.00196  1.88e-3 1.39e-3 2.69e-4 7.57e-4 #> 13 HlyE_IgG shape     paratyphi         1.41     1.56e-1 1.39e+0 1.17e+0 1.29e+0 #> 14 HlyE_IgG shape     typhi             1.49     3.78e-1 1.39e+0 1.08e+0 1.23e+0 #> 15 HlyE_IgG t1        paratyphi         5.02     1.87e+0 4.73e+0 2.18e+0 3.75e+0 #> 16 HlyE_IgG t1        typhi             7.67     6.84e+0 6.02e+0 1.59e+0 3.82e+0 #> 17 HlyE_IgG y0        paratyphi         2.46     9.14e-1 2.33e+0 1.23e+0 1.87e+0 #> 18 HlyE_IgG y0        typhi             2.11     1.40e+0 1.79e+0 4.79e-1 1.22e+0 #> 19 HlyE_IgG y1        paratyphi       929.       4.52e+3 2.73e+2 2.09e+1 1.08e+2 #> 20 HlyE_IgG y1        typhi           512.       9.65e+2 2.44e+2 2.77e+1 1.11e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Wed Jul 16 20:02:34 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_data.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_data.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_data.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_priors.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Takes multiple vector inputs allow modifiable priors. Priors can specified option run_mod.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(   max_antigens,   mu_hyp_param = c(1, 7, 1, -4, -1),   prec_hyp_param = c(1, 1e-05, 1, 0.001, 1),   omega_param = c(1, 50, 1, 10, 1),   wishdf_param = 20,   prec_logy_hyp_param = c(4, 1) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_priors.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"\"curve_params_priors\" object (subclass list inputs prep_priors() attached attributes entry named \"used_priors\"), containing following elements: \"n_params\": Corresponds 5 parameters estimated. \"mu.hyp\": matrix hyperpriors dimensions max_antigens x 5 (# parameters), representing mean hyperprior distribution five seroresponse parameters: y0, y1, t1, r, alpha). \"prec.hyp\": three-dimensional numeric array dimensions max_antigens x 5 (# parameters), containing precision matrices hyperprior distributions mu.hyp, biomarker. \"omega\" : three-dimensional numeric array 5 matrix,dimensions max_antigens x 5 (# parameters), representing precision matrix Wishart hyper-priors prec.hyp. \"wishdf\": vector 2 values specifying degrees freedom Wishart distribution used subject-level precision prior. \"prec.logy.hyp\": matrix hyper-parameters precision (inverse variance) individual variation measuring max_antigens x 2, log-scale. used_priors = inputs prep_priors() attached attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2,             mu_hyp_param = c(1.0, 7.0, 1.0, -4.0, -1.0),             prec_hyp_param = c(1.0, 0.00001, 1.0, 0.001, 1.0),             omega_param = c(1.0, 50.0, 1.0, 10.0, 1.0),             wishdf_param = 20,             prec_logy_hyp_param = c(4.0, 1.0)) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>   prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/reexports.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/run_mod.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable MCMC inputs runjags::run.jags() MCMC Bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak shape = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod = serodynamics_example(\"model.jags\"),   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/run_mod.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number MCMC chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. ... Arguments passed prep_priors max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/run_mod.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"sr_model class object: subclass dplyr::tbl_df contains MCMC samples joint posterior distribution model parameters, conditional provided input data, including following: iteration = Number sampling iterations chain = Number MCMC chains run; 1 4 Parameter = Parameter estimated. Includes following: y0 = Posterior estimate baseline antibody concentration y1 = Posterior estimate peak antibody concentration t1 = Posterior estimate time peak shape = Posterior estimate shape parameter alpha = Posterior estimate decay rate Iso_type = Antibody/antigen type combination evaluated Stratification = variable used stratify jags model Subject = ID subject evaluated value = Estimated value parameter following attributes included output: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc) priors: list summarizes input priors, including: mu_hyp_param prec_hyp_param omega_param wishdf prec_logy_hyp_param optional \"jags.post\" attribute, included argument with_post = TRUE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/run_mod.html","id":"author","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Wed Jul 16 20:02:41 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Wed Jul 16 20:03:32 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kwan Ho Lee ksjlee@ucdavis.edu Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_case_data.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_case_data.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr119/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr119 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 4 3 2 2 2 2 3 2 4 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/CONTRIBUTING.html","id":null,"dir":"Preview > Pr121","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr121","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr121","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr121","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr121","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr121","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/LICENSE.html","id":null,"dir":"Preview > Pr121","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/articles/index.html","id":null,"dir":"Preview > Pr121 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"dobson  test-snippets","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/authors.html","id":null,"dir":"Preview > Pr121","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/authors.html","id":"citation","dir":"Preview > Pr121","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9042, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9042},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/index.html","id":"serodynamics","dir":"Preview > Pr121","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/index.html","id":"installation","dir":"Preview > Pr121","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr121 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/news/index.html","id":"new-features-development-version","dir":"Preview > Pr121 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Adding id parameter diagnostic functions (#121) Including fitted residual values data frame run_mod output. (#101) Added plot_predicted_curve() support faceting multiple IDs (#68) Replacing old data object new run_mod output (#102) Adding class assignment run_mod output (#76) Making prep_priors modifiable (#78) Taking include_subs input option, default include individuals Making single tbl output pieces attributes. jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr121 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr121 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"vectorized ab() function (#116) Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/news/index.html","id":"serodynamics-000","dir":"Preview > Pr121 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/as_case_data.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/as_case_data.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/calc_fit_mod.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"calc_fit_mod() takes antibody kinetic parameter estimates calculates fitted residual values. Fitted values correspond estimated assay value (ex. ELISA units etc.) time since infection (TSI). Residual values calculated difference fitted observed values.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/calc_fit_mod.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"","code":"calc_fit_mod(modeled_dat, original_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/calc_fit_mod.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"modeled_dat data.frame modeled antibody kinetic parameter values. original_data data.frame original input dataset.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/calc_fit_mod.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"data.frame attached attributes following values: Subject = ID number specifying individual Iso_type = modeled antigen_isotype t = Time since infection fitted = fitted value calculated using model output parameters given t residual = residual value calculated difference observed fitted values given t","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/index.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/index.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/index.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/index.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/index.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/index.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics plot_predicted_curve() Generate Predicted Antibody Response Curves (Median + 95% CI)","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/index.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/index.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/index.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/initsfunction.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/initsfunction.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/load_data.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/load_data.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/load_data.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/nepal_sees.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/nepal_sees.html","id":"source","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/nepal_sees_jags_output.html","id":"format","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Format","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"S3 object class sr_model: dplyr::tbl_df contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\"). Contains 40,000 rows, 7 columns, model attributes. Iteration Number sampling iterations: 500 iterations Chain Number MCMC chains run: 2 chains run Parameter Parameter estimated Iso_type Antibody/antigen type combination evaluated: HlyE_IgA HlyE_IgG Stratification variable used stratify jags model: typhi paratyphi Subject ID subject evaluated: newperson, sees_npl_1, sees_npl_2 value Estimated value parameter attributes list attributes summarize jags inputs, priors, optional jags_post mcmc object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification),   id = c(\"newperson\") )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes. id Specify character id vector format produce plots specific individuals. Default newperson referring predictive distribution.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $newperson  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification),   id = c(\"newperson\") )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes. id Specify character id vector format produce plots specific individuals. Default newperson referring predictive distribution.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $newperson #> $newperson$typhi #> $newperson$typhi$HlyE_IgA  #>  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification),   id = c(\"newperson\") )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes. id Specify character id vector format produce plots specific individuals. Default newperson referring predictive distribution.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\") #> $newperson  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification),   id = c(\"newperson\") )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes. id Specify character id vector format produce plots specific individuals. Default newperson referring predictive distribution.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\") #> $newperson  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_predicted_curve.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"Plots median antibody response curve 95% credible interval ribbon, using MCMC samples posterior distribution. Optionally overlays observed data, applies logarithmic spacing y- x-axes, shows individual sampled curves.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_predicted_curve.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"plot_predicted_curve(   model,   ids,   antigen_iso,   dataset = NULL,   legend_obs = \"Observed data\",   legend_median = \"Median prediction\",   show_quantiles = TRUE,   log_y = FALSE,   log_x = FALSE,   show_all_curves = FALSE,   alpha_samples = 0.3,   xlim = NULL,   ylab = NULL,   facet_by_id = length(ids) > 1,   ncol = NULL )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_predicted_curve.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"model sr_model object (returned run_mod()) containing samples posterior distribution model parameters. ids participant IDs plot; example, \"sees_npl_128\". antigen_iso antigen isotype plot; example, \"HlyE_IgA\" \"HlyE_IgG\". dataset (Optional) dplyr::tbl_df observed antibody response data. Must contain: timeindays value id antigen_iso legend_obs Label observed data legend. legend_median Label median prediction line. show_quantiles logical; TRUE (default), plots 2.5%, 50%, 97.5% quantiles. log_y logical; TRUE, applies log10 transformation y-axis. log_x logical; TRUE, applies log10 transformation x-axis. show_all_curves logical; TRUE, overlays individual sampled curves. alpha_samples Numeric; transparency level individual curves (default = 0.3). xlim (Optional) numeric vector length 2 providing custom x-axis limits. ylab (Optional) string y-axis label. NULL (default), label automatically set \"ELISA units\" \"ELISA units (log scale)\" based log_y argument. facet_by_id logical; TRUE, facets plot 'id'. Defaults TRUE multiple IDs provided. ncol integer; number columns faceting.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_predicted_curve.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"ggplot2::ggplot object displaying predicted antibody response curves median curve 95% credible interval band default.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_predicted_curve.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"sees_model <- serodynamics::nepal_sees_jags_output sees_data <- serodynamics::nepal_sees  # Plot (linear axes) with all individual curves + median ribbon p1 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p1)   # Plot (log10 y-axis) with all individual curves + median ribbon p2 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = TRUE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p2)   # Plot with custom x-axis limits (0-600 days) p3 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE,   xlim               = c(0, 600) ) print(p3)   # Multi-ID, faceted plot (single antigen): p4 <- plot_predicted_curve(   model           = sees_model,   dataset         = sees_data,   id              = c(\"sees_npl_128\", \"sees_npl_131\"),   antigen_iso     = \"HlyE_IgA\",   show_all_curves = TRUE,   facet_by_id     = TRUE ) print(p4)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/post_summ.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/post_summ.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/post_summ.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/post_summ.html","id":"author","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter Stratification       Mean       SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>     <chr>               <dbl>    <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha     paratyphi         0.00266  3.92e-3 1.56e-3 1.99e-4 7.47e-4 #>  2 HlyE_IgA alpha     typhi             0.00293  4.18e-3 1.51e-3 1.48e-4 6.88e-4 #>  3 HlyE_IgA shape     paratyphi         1.63     2.82e-1 1.56e+0 1.27e+0 1.44e+0 #>  4 HlyE_IgA shape     typhi             1.77     4.41e-1 1.67e+0 1.26e+0 1.49e+0 #>  5 HlyE_IgA t1        paratyphi         4.28     2.11e+0 3.90e+0 1.56e+0 2.73e+0 #>  6 HlyE_IgA t1        typhi             7.91     5.98e+0 6.36e+0 1.95e+0 4.39e+0 #>  7 HlyE_IgA y0        paratyphi         3.83     2.65e+0 2.85e+0 1.07e+0 1.88e+0 #>  8 HlyE_IgA y0        typhi             2.90     2.23e+0 2.34e+0 7.70e-1 1.69e+0 #>  9 HlyE_IgA y1        paratyphi      2781.       4.19e+4 1.92e+2 7.45e+0 5.61e+1 #> 10 HlyE_IgA y1        typhi          1275.       6.42e+3 2.58e+2 9.11e+0 8.44e+1 #> 11 HlyE_IgG alpha     paratyphi         0.00202  2.11e-3 1.43e-3 2.25e-4 7.07e-4 #> 12 HlyE_IgG alpha     typhi             0.00196  1.88e-3 1.39e-3 2.69e-4 7.57e-4 #> 13 HlyE_IgG shape     paratyphi         1.41     1.56e-1 1.39e+0 1.17e+0 1.29e+0 #> 14 HlyE_IgG shape     typhi             1.49     3.78e-1 1.39e+0 1.08e+0 1.23e+0 #> 15 HlyE_IgG t1        paratyphi         5.02     1.87e+0 4.73e+0 2.18e+0 3.75e+0 #> 16 HlyE_IgG t1        typhi             7.67     6.84e+0 6.02e+0 1.59e+0 3.82e+0 #> 17 HlyE_IgG y0        paratyphi         2.46     9.14e-1 2.33e+0 1.23e+0 1.87e+0 #> 18 HlyE_IgG y0        typhi             2.11     1.40e+0 1.79e+0 4.79e-1 1.22e+0 #> 19 HlyE_IgG y1        paratyphi       929.       4.52e+3 2.73e+2 2.09e+1 1.08e+2 #> 20 HlyE_IgG y1        typhi           512.       9.65e+2 2.44e+2 2.77e+1 1.11e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 12 21:37:58 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_data.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_data.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_data.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_priors.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Takes multiple vector inputs allow modifiable priors. Priors can specified option run_mod.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(   max_antigens,   mu_hyp_param = c(1, 7, 1, -4, -1),   prec_hyp_param = c(1, 1e-05, 1, 0.001, 1),   omega_param = c(1, 50, 1, 10, 1),   wishdf_param = 20,   prec_logy_hyp_param = c(4, 1) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_priors.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"\"curve_params_priors\" object (subclass list inputs prep_priors() attached attributes entry named \"used_priors\"), containing following elements: \"n_params\": Corresponds 5 parameters estimated. \"mu.hyp\": matrix hyperpriors dimensions max_antigens x 5 (# parameters), representing mean hyperprior distribution five seroresponse parameters: y0, y1, t1, r, alpha). \"prec.hyp\": three-dimensional numeric array dimensions max_antigens x 5 (# parameters), containing precision matrices hyperprior distributions mu.hyp, biomarker. \"omega\" : three-dimensional numeric array 5 matrix,dimensions max_antigens x 5 (# parameters), representing precision matrix Wishart hyper-priors prec.hyp. \"wishdf\": vector 2 values specifying degrees freedom Wishart distribution used subject-level precision prior. \"prec.logy.hyp\": matrix hyper-parameters precision (inverse variance) individual variation measuring max_antigens x 2, log-scale. used_priors = inputs prep_priors() attached attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2,             mu_hyp_param = c(1.0, 7.0, 1.0, -4.0, -1.0),             prec_hyp_param = c(1.0, 0.00001, 1.0, 0.001, 1.0),             omega_param = c(1.0, 50.0, 1.0, 10.0, 1.0),             wishdf_param = 20,             prec_logy_hyp_param = c(4.0, 1.0)) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>   prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/reexports.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/run_mod.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable MCMC inputs runjags::run.jags() MCMC Bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak shape = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod = serodynamics_example(\"model.jags\"),   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/run_mod.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number MCMC chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. ... Arguments passed prep_priors max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/run_mod.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"sr_model class object: subclass dplyr::tbl_df contains MCMC samples joint posterior distribution model parameters, conditional provided input data, including following: iteration = Number sampling iterations chain = Number MCMC chains run; 1 4 Parameter = Parameter estimated. Includes following: y0 = Posterior estimate baseline antibody concentration y1 = Posterior estimate peak antibody concentration t1 = Posterior estimate time peak shape = Posterior estimate shape parameter alpha = Posterior estimate decay rate Iso_type = Antibody/antigen type combination evaluated Stratification = variable used stratify jags model Subject = ID subject evaluated value = Estimated value parameter following attributes included output: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc). priors: list summarizes input priors, including: mu_hyp_param prec_hyp_param omega_param wishdf prec_logy_hyp_param fitted_residuals: data.frame containing fitted residual values observations. optional \"jags.post\" attribute, included argument with_post = TRUE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/run_mod.html","id":"author","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 12 21:38:04 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 12 21:38:52 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee ksjlee@ucdavis.edu [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_case_data.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_case_data.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 4 3 2 2 2 2 3 2 4 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/use_att_names.html","id":null,"dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"use_att_names takes prepared longitudinal data antibody kinetic modeling names columns using attribute values allow merging modeled run_mod() output dplyr::tbl_df. column names include Subject, Iso_type, t, result.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/use_att_names.html","id":"ref-usage","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Usage","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"","code":"use_att_names(data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/use_att_names.html","id":"arguments","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Arguments","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"data data.frame raw longitudinal data prepared antibody kinetic modeling using as_case_data().","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr121/reference/use_att_names.html","id":"value","dir":"Preview > Pr121 > Reference","previous_headings":"","what":"Value","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"input data.frame columns named attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/CONTRIBUTING.html","id":null,"dir":"Preview > Pr122","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr122","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr122","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr122","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr122","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr122","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/LICENSE.html","id":null,"dir":"Preview > Pr122","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/articles/index.html","id":null,"dir":"Preview > Pr122 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"dobson  test-snippets","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/authors.html","id":null,"dir":"Preview > Pr122","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/authors.html","id":"citation","dir":"Preview > Pr122","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9037, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9037},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/index.html","id":"serodynamics","dir":"Preview > Pr122","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/index.html","id":"installation","dir":"Preview > Pr122","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr122 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"New facet_by_id argument allows faceted plots participant ID. Added plot_predicted_curve() (#68) Replacing old data object new run_mod output (#102) Adding class assignment run_mod output (#76) Making prep_priors modifiable (#78) Taking include_subs input option, default include individuals Making single tbl output pieces attributes. jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr122 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr122 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"vectorized ab() function (#116) Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/news/index.html","id":"serodynamics-000","dir":"Preview > Pr122 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/as_case_data.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/as_case_data.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/index.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/index.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/index.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/index.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/index.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/index.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics plot_predicted_curve() Generate Predicted Antibody Response Curves (Median + 95% CI)","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/index.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/index.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/index.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/initsfunction.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/initsfunction.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/load_data.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/load_data.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/load_data.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/nepal_sees.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/nepal_sees.html","id":"source","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/nepal_sees_jags_output.html","id":"format","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Format","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"S3 object class sr_model: dplyr::tbl_df contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\"). Contains 40,000 rows, 7 columns, model attributes. Iteration Number sampling iterations: 500 iterations Chain Number MCMC chains run: 2 chains run Parameter Parameter estimated Iso_type Antibody/antigen type combination evaluated: HlyE_IgA HlyE_IgG Stratification variable used stratify jags model: typhi paratyphi Subject ID subject evaluated: newperson, sees_npl_1, sees_npl_2 value Estimated value parameter attributes list attributes summarize jags inputs, priors, optional jags_post mcmc object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_predicted_curve.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"Plots median antibody response curve 95% credible interval ribbon, using MCMC samples posterior distribution. Optionally overlays observed data, applies logarithmic spacing y- x-axes, shows individual sampled curves.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_predicted_curve.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"plot_predicted_curve(   sr_model,   ids,   antigen_iso,   dataset = NULL,   legend_obs = \"Observed data\",   legend_median = \"Median prediction\",   show_quantiles = TRUE,   log_y = FALSE,   log_x = FALSE,   show_all_curves = FALSE,   alpha_samples = 0.3,   xlim = NULL,   ylab = NULL,   facet_by_id = NULL,   ncol = NULL )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_predicted_curve.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"sr_model sr_model object (returned run_mod()) containing samples posterior distribution model parameters. ids participant IDs plot; example, \"sees_npl_128\". antigen_iso antigen isotype plot; example, \"HlyE_IgA\" \"HlyE_IgG\". dataset (Optional) dplyr::tbl_df observed antibody response data. Must contain: timeindays value id antigen_iso legend_obs Label observed data legend. legend_median Label median prediction line. show_quantiles logical; TRUE (default), plots 2.5%, 50%, 97.5% quantiles. log_y logical; TRUE, applies log10 transformation y-axis. log_x logical; TRUE, applies log10 transformation x-axis. show_all_curves logical; TRUE, overlays individual sampled curves. alpha_samples Numeric; transparency level individual curves (default = 0.3). xlim (Optional) numeric vector length 2 providing custom x-axis limits. ylab (Optional) string y-axis label. NULL (default), label automatically set \"ELISA units\" \"ELISA units (log scale)\" based log_y argument. facet_by_id logical; TRUE, facets plot 'id'. Defaults TRUE multiple IDs provided. ncol integer; number columns faceting.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_predicted_curve.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"ggplot2::ggplot object displaying predicted antibody response curves median curve 95% credible interval band default.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_predicted_curve.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"# 1) Prepare the on-the-fly dataset dataset <- serodynamics::nepal_sees |>   as_case_data(     id_var        = \"id\",     biomarker_var = \"antigen_iso\",     value_var     = \"value\",     time_in_days  = \"timeindays\"   ) |>   dplyr::rename(     strat      = bldculres,     timeindays = dayssincefeveronset,     value      = result   )  # 2) Extract just the one subject/antigen for overlay later dat <- dataset |>   dplyr::filter(id == \"sees_npl_128\", antigen_iso == \"HlyE_IgA\")  # 3) Load the pre-computed model output included with the package. # This is much faster than running the model live. model <- serodynamics::nepal_sees_jags_output   # 4a) Plot (linear axes) with all individual curves + median ribbon p1 <- plot_predicted_curve(   sr_model           = model,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   dataset            = dat,   legend_obs         = \"Observed data\",   legend_median        = \"Median prediction\",   show_quantiles     = TRUE,   log_y          = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p1)   # 4b) Plot (log10 y-axis) with all individual curves + median ribbon p2 <- plot_predicted_curve(   sr_model           = model,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   dataset            = dat,   legend_obs         = \"Observed data\",   legend_median        = \"Median prediction\",   show_quantiles     = TRUE,   log_y          = TRUE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p2)   # 4c) Plot with custom x-axis limits (0-600 days) p3 <- plot_predicted_curve(   sr_model           = model,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   dataset            = dat,   legend_obs         = \"Observed data\",   legend_median        = \"Median prediction\",   show_quantiles     = TRUE,   log_y          = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE,   xlim               = c(0, 600) ) print(p3)   # 5) Multi-ID, faceted plot (single antigen) ids <- c(\"sees_npl_128\", \"sees_npl_131\") antigen <- \"HlyE_IgA\"  dat_multi <- dataset |>   dplyr::filter(id %in% ids, antigen_iso == antigen)  p4 <- plot_predicted_curve(   sr_model        = model,   id              = ids,   antigen_iso     = antigen,   dataset         = dat_multi,   show_all_curves = TRUE,   facet_by_id     = TRUE ) print(p4)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/post_summ.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/post_summ.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/post_summ.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/post_summ.html","id":"author","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter Stratification       Mean       SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>     <chr>               <dbl>    <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha     paratyphi         0.00266  3.92e-3 1.56e-3 1.99e-4 7.47e-4 #>  2 HlyE_IgA alpha     typhi             0.00293  4.18e-3 1.51e-3 1.48e-4 6.88e-4 #>  3 HlyE_IgA shape     paratyphi         1.63     2.82e-1 1.56e+0 1.27e+0 1.44e+0 #>  4 HlyE_IgA shape     typhi             1.77     4.41e-1 1.67e+0 1.26e+0 1.49e+0 #>  5 HlyE_IgA t1        paratyphi         4.28     2.11e+0 3.90e+0 1.56e+0 2.73e+0 #>  6 HlyE_IgA t1        typhi             7.91     5.98e+0 6.36e+0 1.95e+0 4.39e+0 #>  7 HlyE_IgA y0        paratyphi         3.83     2.65e+0 2.85e+0 1.07e+0 1.88e+0 #>  8 HlyE_IgA y0        typhi             2.90     2.23e+0 2.34e+0 7.70e-1 1.69e+0 #>  9 HlyE_IgA y1        paratyphi      2781.       4.19e+4 1.92e+2 7.45e+0 5.61e+1 #> 10 HlyE_IgA y1        typhi          1275.       6.42e+3 2.58e+2 9.11e+0 8.44e+1 #> 11 HlyE_IgG alpha     paratyphi         0.00202  2.11e-3 1.43e-3 2.25e-4 7.07e-4 #> 12 HlyE_IgG alpha     typhi             0.00196  1.88e-3 1.39e-3 2.69e-4 7.57e-4 #> 13 HlyE_IgG shape     paratyphi         1.41     1.56e-1 1.39e+0 1.17e+0 1.29e+0 #> 14 HlyE_IgG shape     typhi             1.49     3.78e-1 1.39e+0 1.08e+0 1.23e+0 #> 15 HlyE_IgG t1        paratyphi         5.02     1.87e+0 4.73e+0 2.18e+0 3.75e+0 #> 16 HlyE_IgG t1        typhi             7.67     6.84e+0 6.02e+0 1.59e+0 3.82e+0 #> 17 HlyE_IgG y0        paratyphi         2.46     9.14e-1 2.33e+0 1.23e+0 1.87e+0 #> 18 HlyE_IgG y0        typhi             2.11     1.40e+0 1.79e+0 4.79e-1 1.22e+0 #> 19 HlyE_IgG y1        paratyphi       929.       4.52e+3 2.73e+2 2.09e+1 1.08e+2 #> 20 HlyE_IgG y1        typhi           512.       9.65e+2 2.44e+2 2.77e+1 1.11e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Thu Jul 31 00:33:47 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_data.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_data.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_data.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_priors.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Takes multiple vector inputs allow modifiable priors. Priors can specified option run_mod.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(   max_antigens,   mu_hyp_param = c(1, 7, 1, -4, -1),   prec_hyp_param = c(1, 1e-05, 1, 0.001, 1),   omega_param = c(1, 50, 1, 10, 1),   wishdf_param = 20,   prec_logy_hyp_param = c(4, 1) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_priors.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"\"curve_params_priors\" object (subclass list inputs prep_priors() attached attributes entry named \"used_priors\"), containing following elements: \"n_params\": Corresponds 5 parameters estimated. \"mu.hyp\": matrix hyperpriors dimensions max_antigens x 5 (# parameters), representing mean hyperprior distribution five seroresponse parameters: y0, y1, t1, r, alpha). \"prec.hyp\": three-dimensional numeric array dimensions max_antigens x 5 (# parameters), containing precision matrices hyperprior distributions mu.hyp, biomarker. \"omega\" : three-dimensional numeric array 5 matrix,dimensions max_antigens x 5 (# parameters), representing precision matrix Wishart hyper-priors prec.hyp. \"wishdf\": vector 2 values specifying degrees freedom Wishart distribution used subject-level precision prior. \"prec.logy.hyp\": matrix hyper-parameters precision (inverse variance) individual variation measuring max_antigens x 2, log-scale. used_priors = inputs prep_priors() attached attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2,             mu_hyp_param = c(1.0, 7.0, 1.0, -4.0, -1.0),             prec_hyp_param = c(1.0, 0.00001, 1.0, 0.001, 1.0),             omega_param = c(1.0, 50.0, 1.0, 10.0, 1.0),             wishdf_param = 20,             prec_logy_hyp_param = c(4.0, 1.0)) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>   prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/reexports.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/run_mod.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable MCMC inputs runjags::run.jags() MCMC Bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak shape = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod = serodynamics_example(\"model.jags\"),   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/run_mod.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number MCMC chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. ... Arguments passed prep_priors max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/run_mod.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"sr_model class object: subclass dplyr::tbl_df contains MCMC samples joint posterior distribution model parameters, conditional provided input data, including following: iteration = Number sampling iterations chain = Number MCMC chains run; 1 4 Parameter = Parameter estimated. Includes following: y0 = Posterior estimate baseline antibody concentration y1 = Posterior estimate peak antibody concentration t1 = Posterior estimate time peak shape = Posterior estimate shape parameter alpha = Posterior estimate decay rate Iso_type = Antibody/antigen type combination evaluated Stratification = variable used stratify jags model Subject = ID subject evaluated value = Estimated value parameter following attributes included output: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc) priors: list summarizes input priors, including: mu_hyp_param prec_hyp_param omega_param wishdf prec_logy_hyp_param optional \"jags.post\" attribute, included argument with_post = TRUE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/run_mod.html","id":"author","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Thu Jul 31 00:33:54 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Thu Jul 31 00:34:43 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee ksjlee@ucdavis.edu [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_case_data.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_case_data.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr122/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr122 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 4 3 2 2 2 2 3 2 4 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/CONTRIBUTING.html","id":null,"dir":"Preview > Pr129","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr129","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr129","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr129","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr129","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr129","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/LICENSE.html","id":null,"dir":"Preview > Pr129","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"overview","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Overview","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Incorporates feedback Dr. Morrison Dr. Aiemjoy Builds (Teunis Eijkeren 2016) framework antibody kinetics Focus covariance structure: parameter covariance within biomarker (ΣP,j\\Sigma_{P,j}, 5×5 per biomarker) biomarker covariance across jj (ΣB\\Sigma_B, across biomarkers) Uses updated parameterization: log(y0)\\log(y_0), log(y1−y0)\\log(y_1 - y_0), log(t1)\\log(t_1), log(α)\\log(\\alpha), log(ρ−1)\\log(\\rho-1) Current stage: block-diagonal covariance (independent biomarkers) Planned extension: full ΣB\\Sigma_B capture correlation biomarkers","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"observation-model-data-level","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Observation Model (Data Level)","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Observed (log-transformed) antibody levels: log(yobs,ij)∼𝒩(μlogy,ij,τj−1)(1) \\log(y_{\\text{obs},ij}) \\sim \\mathcal{N}(\\mu_{\\log y,ij}, \\tau_j^{-1})  \\qquad(1) : yobs,ijy_{\\text{obs},ij}: Observed antibody level subject ii biomarker jj μlogy,ij\\mu_{\\log y,ij} expected log antibody level, computed two-phase model using subject-level parameters θij\\theta_{ij}. θij\\theta_{ij}: Subject-level latent parameters (e.g., y0,α,ρy_0, \\alpha, \\rho) used define predicted antibody curve τj\\tau_j: Measurement precision (inverse variance) specific biomarker jj Measurement precision prior: τj∼Gamma(aj,bj)(2) \\tau_j \\sim \\text{Gamma}(a_j, b_j)  \\qquad(2) : τj\\tau_j: Precision (inverse variance) measurement noise biomarker jj (aj,bj)(a_j, b_j): Shape rate hyperparameters Gamma prior precision, control expected value variability","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"parameter-summary","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Parameter Summary","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Table 1: Parameter summary antibody kinetics model. Note: first 6 typically estimated. y1y_1 derived ODE solution t1t_1.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"within-host-ode-system-teunis2016","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Within-Host ODE System (Teunis and Eijkeren 2016)","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Two-phase within-host antibody kinetics: dydt={μyy(t),t≤t1−αy(t)ρ,t>t1with dbdt=μbb(t)−γy(t)(3) \\frac{dy}{dt} = \\begin{cases} \\mu_y y(t), & t \\le t_1 \\\\ - \\alpha y(t)^\\rho, & t > t_1 \\end{cases} \\quad \\text{} \\frac{db}{dt} = \\mu_b b(t) - \\gamma y(t)  \\qquad(3) Initial conditions: y(0)=y0y(0) = y_0, b(0)=b0b(0) = b_0Key transition: t1t_1 time b(t1)=0b(t_1) = 0Derived quantity: y1=y(t1)y_1 = y(t_1)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"closed-form-solutions","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Closed-Form Solutions","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Antibody concentration y(t)y(t) t≤t1t \\le t_1:y(t)=y0eμyt y(t) = y_0 e^{\\mu_y t} t>t1t > t_1:y(t)=y1(1+(ρ−1)αy1ρ−1(t−t1))−1ρ−1 y(t) = y_1 \\left(1 + (\\rho - 1)\\alpha y_1^{\\rho - 1}(t - t_1)\\right)^{- \\frac{1}{\\rho - 1}} Pathogen load b(t)b(t) t≤t1t \\le t_1:b(t)=b0eμbt−γy0μy−μb(eμyt−eμbt) b(t) = b_0 e^{\\mu_b t} - \\frac{\\gamma y_0}{\\mu_y - \\mu_b} \\left(e^{\\mu_y t} - e^{\\mu_b t} \\right) t>t1t > t_1:b(t)=0 b(t) = 0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"time-of-peak-response","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Time of Peak Response","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Peak Time t1t_1 t1=1μy−μblog(1+(μy−μb)b0γy0)(4) t_1 = \\frac{1}{\\mu_y - \\mu_b} \\log \\left( 1 + \\frac{(\\mu_y - \\mu_b) b_0}{\\gamma y_0} \\right)  \\qquad(4) Peak Antibody Level y1y_1 y1=y0eμyt1(5) y_1 = y_0 e^{\\mu_y t_1}  \\qquad(5)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"model-comparison-teunis2016-vs-serodynamics","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Model Comparison: (Teunis and Eijkeren 2016) vs serodynamics","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Table 2: Comparison Teunis (2016) model serodynamic’s model assumptions. Note: (Teunis Eijkeren 2016) uses linear clearance: cy(t)c y(t), bilinear Antibody production driven pathogen b(t)b(t) model simplifies assuming self-expanding antibody dynamics","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"full-parameter-model-7-parameters","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Full Parameter Model (7 Parameters)","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Subject-level parameters: θij∼𝒩(μj,ΣP,j),θij=[y0,ijb0,ijμb,ijμy,ijγijαijρij] \\theta_{ij} \\sim \\mathcal{N}(\\mu_j,\\, \\Sigma_{P,j}), \\quad \\theta_{ij} = \\begin{bmatrix} y_{0,ij} \\\\ b_{0,ij} \\\\ \\mu_{b,ij} \\\\ \\mu_{y,ij} \\\\ \\gamma_{ij} \\\\ \\alpha_{ij} \\\\ \\rho_{ij} \\end{bmatrix} : θij\\theta_{ij}: parameter vector subject ii, biomarker jj μj\\mu_j: population-level mean vector biomarker jj Subscript PP: denotes covariance P parameters Subscript jj: indicates biomarker index Hyperparameters – Means: μj∼𝒩(μhyp,j,Ωhyp,j) \\mu_j \\sim \\mathcal{N}(\\mu_{\\text{hyp},j},\\, \\Omega_{\\text{hyp},j})","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"from-full-7-parameters-to-5-latent-parameters","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"From Full 7 Parameters to 5 Latent Parameters","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Although model estimates 7 parameters, modeling antibody kinetics y(t)y(t), focus 5-parameter subset: y0,t1(derived),y1(derived),α,ρy_0,\\ \\ t_1 (\\text{derived}),\\ \\  y_1 (\\text{derived}),\\ \\  \\alpha,\\ \\  \\rho 5 parameters log-transformed latent parameters θ_ij\\theta\\_{ij} used modeling.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"core-parameters-used-for-curve-drawing","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"5 Core Parameters Used for Curve Drawing","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"presentation, focus 5 key parameters required draw antibody curves: y0y_0: initial antibody level t1t_1: time peak antibody response y1y_1: peak antibody level α\\alpha: decay rate ρ\\rho: shape decay Note: t1t_1 y1y_1 derived full model - 5 sufficient prediction plotting","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"classifying-model-parameters-teunis2016-structure","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Classifying Model Parameters ((Teunis and Eijkeren 2016) Structure)","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Estimated Parameters (7 total): Core model parameters (5): μb\\mu_b, μy\\mu_y, γ\\gamma, α\\alpha, ρ\\rho Initial conditions (2): y0y_0, b0b_0 Derived Quantity (estimated): y1y_1: peak antibody level computed y(t1)y(t_1)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"subject-level-parameters-latent-version-serodynamics","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Subject-Level Parameters (Latent Version = serodynamics)","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"subject ii biomarker jj latent parameters: θij=[log(y0,ij)log(y1,ij−y0,ij)log(t1,ij)log(αij)log(ρij−1)]∈ℝ5(6) \\theta_{ij} = \\begin{bmatrix} \\log(y_{0,ij}) \\\\ \\log(y_{1,ij} - y_{0,ij}) \\\\ \\log(t_{1,ij}) \\\\ \\log(\\alpha_{ij}) \\\\ \\log(\\rho_{ij} - 1) \\end{bmatrix} \\\\mathbb{R}^5  \\qquad(6) Distribution: θij∼𝒩(μj,ΣP,j) \\theta_{ij} \\sim \\mathcal{N}(\\mu_j, \\Sigma_{P,j}) : μj\\mu_j: population-level mean vector biomarker jj ΣP,j∈ℝ5×5\\Sigma_{P,j} \\\\mathbb{R}^{5 \\times 5}: covariance matrix across P=5P=5 parameters biomarker jj","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"why-y_1-is-not-fit-directly","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Why y1y_1 Is Not Fit Directly","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"y1y_1 antibody level time pathogen cleared: y1=y(t1)b(t1)=0 y_1 = y(t_1) \\quad \\text{} b(t_1) = 0 μy\\mu_y, y0y_0, b0b_0, μb\\mu_b, γ\\gamma via solution ODEs find t1t_1 compute y(t1)y(t_1) words: y1y_1 derived output, fit parameter.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"how-y_1-is-computed","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"How y1y_1 Is Computed","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"y1y_1 computed solving ODE system: dydt=μyy(t),dbdt=μbb(t)−γy(t) \\frac{dy}{dt} = \\mu_y y(t), \\quad \\frac{db}{dt} = \\mu_b b(t) - \\gamma y(t) Evaluate y(t)y(t) t=t1t = t_1 using ODE solution: y1=y(t1;μy,y0,b0,μb,γ) y_1 = y(t_1; \\mu_y, y_0, b_0, \\mu_b, \\gamma)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"recap-what-we-estimate","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Recap: What We Estimate","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Seven model parameters (7-parameter model full dynamics): μb\\mu_b, μy\\mu_y, γ\\gamma, α\\alpha, ρ\\rho (biological process) y0y_0, b0b_0 (initial state) Derived quantity: y1=y(t1)y_1 = y(t_1) — directly estimated, computed 5-parameter subset curve visualization: y0y_0, y1y_1, t1t_1, α\\alpha, ρ\\rho","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"hierarchical-bayesian-structure-serodynamics","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Hierarchical Bayesian Structure (serodynamics)","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Individual parameters: θij=[log(y0,ij)log(y1,ij−y0,ij)log(t1,ij)log(αij)log(ρij−1)]∼𝒩(μj,ΣP,j) \\theta_{ij} = \\begin{bmatrix} \\log(y_{0,ij}) \\\\ \\log(y_{1,ij} - y_{0,ij}) \\\\ \\log(t_{1,ij}) \\\\ \\log(\\alpha_{ij}) \\\\ \\log(\\rho_{ij} - 1) \\end{bmatrix} \\sim \\mathcal{N}(\\mu_j,\\, \\Sigma_{P,j}) Hyperparameters: μj\\mu_j: population-level mean vector biomarker jj ΣP,j∈ℝP×P,P=5\\Sigma_{P,j} \\\\mathbb{R}^{P \\times P}, \\; P=5: covariance matrix across parameters biomarker jj","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"subject-level-parameters-theta_ij","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Subject-Level Parameters: θij\\theta_{ij}","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"θij∼𝒩(μj,ΣP,j),θij∈ℝ5 \\theta_{ij} \\sim \\mathcal{N}(\\mu_j,\\, \\Sigma_{P,j}), \\quad \\theta_{ij} \\\\mathbb{R}^5 : 𝛉ij=[log(y0,ij)log(y1,ij−y0,ij)log(t1,ij)log(αij)log(ρij−1)],ΣP,j∈ℝP×P,P=5 \\boldsymbol{\\theta}_{ij} = \\begin{bmatrix} \\log(y_{0,ij}) \\\\ \\log(y_{1,ij} - y_{0,ij}) \\\\ \\log(t_{1,ij}) \\\\ \\log(\\alpha_{ij}) \\\\ \\log(\\rho_{ij} - 1) \\end{bmatrix}, \\quad \\Sigma_{P,j} \\\\mathbb{R}^{P \\times P}, \\; P=5 subject ii unique 5-parameter vector per biomarker jj, capturing individual-level variation antibody dynamics.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"hyperparameters-priors-on-population-means","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Hyperparameters: Priors on Population Means","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Population-level means: 𝛍j∼𝒩(𝛍hyp,j,Ωhyp,j) \\boldsymbol{\\mu}_j \\sim \\mathcal{N}(\\boldsymbol{\\mu}_{\\mathrm{hyp},j}, \\Omega_{\\mathrm{hyp},j}) Interpretation: 𝛍j\\boldsymbol{\\mu}_j: average parameter vector biomarker jj 𝛍hyp,j\\boldsymbol{\\mu}_{\\mathrm{hyp},j}: prior guess (e.g., vector zeros) Ωhyp,j\\Omega_{\\mathrm{hyp},j}: covariance matrix encoding uncertainty Example: 𝛍hyp,j=0,Ωhyp,j=100⋅I5 \\boldsymbol{\\mu}_{\\mathrm{hyp},j} = 0, \\quad \\Omega_{\\mathrm{hyp},j} = 100 \\cdot I_5","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"hyperparameters-priors-on-covariance","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Hyperparameters: Priors on Covariance","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Covariance across parameters: ΣP,j−1∼𝒲(Ωj,νj) \\Sigma_{P,j}^{-1} \\sim \\mathcal{W}(\\Omega_j, \\nu_j) ΣP,j\\Sigma_{P,j}: 5×55 \\times 5 covariance matrix subject-level parameters biomarker jj Ωj\\Omega_j: prior scale matrix (dimension 5×55 \\times 5) νj\\nu_j: degrees freedom Example: Ωj=0.1⋅I5,νj=6 \\Omega_j = 0.1 \\cdot I_5, \\quad \\nu_j = 6","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"measurement-error-and-precision-priors","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Measurement Error and Precision Priors","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Observed antibody levels: log(yobs,ij)∼𝒩(log(ypred,ij),τj−1) \\log(y_{\\text{obs},ij}) \\sim \\mathcal{N}(\\log(y_{\\text{pred},ij}), \\tau_j^{-1}) Precision prior: τj∼Gamma(aj,bj) \\tau_j \\sim \\text{Gamma}(a_j, b_j) τj\\tau_j: shared measurement precision biomarker jj Gamma prior allows flexible noise modeling","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"matrix-algebra-computation","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Matrix Algebra Computation","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Let P=5P = 5 (parameters), BB biomarkers. : Θi=[θi1θi2⋯θiB]∈ℝP×B \\Theta_i = \\begin{bmatrix} \\theta_{i1} & \\theta_{i2} & \\cdots & \\theta_{iB} \\end{bmatrix} \\\\mathbb{R}^{P \\times B} Assume: vec(Θi)∼𝒩(vec(M),ΣP⊗IB) \\text{vec}(\\Theta_i) \\sim \\mathcal{N}(\\text{vec}(M), \\Sigma_P \\otimes I_B)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"matrix-algebra-simplified-structure","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Matrix Algebra – Simplified Structure","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Setup: Θi∈ℝP×B\\Theta_i \\\\mathbb{R}^{P \\times B} Model: vec(Θi)∼𝒩(vec(M),ΣP⊗IB) \\text{vec}(\\Theta_i) \\sim \\mathcal{N}(\\text{vec}(M), \\Sigma_P \\otimes I_B) ΣP\\Sigma_P: 5×5 covariance (across biomarkers) IBI_B: biomarkers assumed uncorrelated Block-diagonal covariance","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"understanding-textvectheta_i","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Understanding vec(Θi)\\text{vec}(\\Theta_i)","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"θij∈ℝ5\\theta_{ij} \\\\mathbb{R}^5: θij=[log(y0,ij)log(y1,ij−y0,ij)log(t1,ij)log(αij)log(ρij−1)] \\theta_{ij} = \\begin{bmatrix} \\log(y_{0,ij}) \\\\ \\log(y_{1,ij} - y_{0,ij}) \\\\ \\log(t_{1,ij}) \\\\ \\log(\\alpha_{ij}) \\\\ \\log(\\rho_{ij} - 1) \\end{bmatrix} Flattening: vec(Θi)∈ℝ5B×1 \\text{vec}(\\Theta_i) \\\\mathbb{R}^{5B \\times 1}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"understanding-textvecm","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Understanding vec(M)\\text{vec}(M)","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Let M=[μ1μ2⋯μB]∈ℝ5×BM = [\\mu_1\\, \\mu_2\\, \\cdots\\, \\mu_B] \\\\mathbb{R}^{5 \\times B} Example B=3B=3: M=[μ1,1μ1,2μ1,3μ2,1μ2,2μ2,3μ3,1μ3,2μ3,3μ4,1μ4,2μ4,3μ5,1μ5,2μ5,3] M = \\begin{bmatrix} \\mu_{1,1} & \\mu_{1,2} & \\mu_{1,3} \\\\ \\mu_{2,1} & \\mu_{2,2} & \\mu_{2,3} \\\\ \\mu_{3,1} & \\mu_{3,2} & \\mu_{3,3} \\\\ \\mu_{4,1} & \\mu_{4,2} & \\mu_{4,3} \\\\ \\mu_{5,1} & \\mu_{5,2} & \\mu_{5,3} \\end{bmatrix}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"covariance-structure-sigma_p-otimes-i_b","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Covariance Structure: ΣP⊗IB\\Sigma_P \\otimes I_B","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Cov(vec(Θi))=ΣP⊗IB \\text{Cov}(\\text{vec}(\\Theta_i)) = \\Sigma_P \\otimes I_B ΣP\\Sigma_P: parameter covariance matrix IBI_B: biomarker-wise independence Kronecker product yields block-diagonal matrix","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"example-kronecker-product-with-p-5-b-3","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Example: Kronecker Product with P=5P = 5, B=3B = 3","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Let: ΣP=[σy0,y0σy0,y1−y0σy0,t1σy0,ασy0,ρ−1σy1−y0,y0σy1−y0,y1−y0σy1−y0,t1σy1−y0,ασy1−y0,ρ−1σt1,y0σt1,y1−y0σt1,t1σt1,ασt1,ρ−1σα,y0σα,y1−y0σα,t1σα,ασα,ρ−1σρ−1,y0σρ−1,y1−y0σρ−1,t1σρ−1,ασρ−1,ρ−1],IB=[100010001] \\Sigma_P = \\begin{bmatrix} \\sigma_{y_0,y_0} & \\sigma_{y_0,y_1-y_0} & \\sigma_{y_0,t_1} & \\sigma_{y_0,\\alpha} & \\sigma_{y_0,\\rho-1} \\\\ \\sigma_{y_1-y_0,y_0} & \\sigma_{y_1-y_0,y_1-y_0} & \\sigma_{y_1-y_0,t_1} & \\sigma_{y_1-y_0,\\alpha} & \\sigma_{y_1-y_0,\\rho-1} \\\\ \\sigma_{t_1,y_0} & \\sigma_{t_1,y_1-y_0} & \\sigma_{t_1,t_1} & \\sigma_{t_1,\\alpha} & \\sigma_{t_1,\\rho-1} \\\\ \\sigma_{\\alpha,y_0} & \\sigma_{\\alpha,y_1-y_0} & \\sigma_{\\alpha,t_1} & \\sigma_{\\alpha,\\alpha} & \\sigma_{\\alpha,\\rho-1} \\\\ \\sigma_{\\rho-1,y_0} & \\sigma_{\\rho-1,y_1-y_0} & \\sigma_{\\rho-1,t_1} & \\sigma_{\\rho-1,\\alpha} & \\sigma_{\\rho-1,\\rho-1} \\end{bmatrix}, \\quad I_B = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} : ΣP⊗IB∈ℝ15×15 \\Sigma_P \\otimes I_B \\\\mathbb{R}^{15 \\times 15}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"expanded-matrix-sigma_p-otimes-i_b","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Expanded Matrix: ΣP⊗IB\\Sigma_P \\otimes I_B","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"ΣP⊗IB=[ΣP000ΣP000ΣP]∈ℝ15×15 \\Sigma_P \\otimes I_B = \\begin{bmatrix} \\Sigma_P & 0 & 0 \\\\ 0 & \\Sigma_P & 0 \\\\ 0 & 0 & \\Sigma_P \\end{bmatrix} \\\\mathbb{R}^{15 \\times 15} block ΣP\\Sigma_P 5×55 \\times 5 covariance across parameters: ΣP=[σy0,y0⋯σy0,ρ−1⋮⋱⋮σρ−1,y0⋯σρ−1,ρ−1] \\Sigma_P = \\begin{bmatrix} \\sigma_{y_0,y_0} & \\cdots & \\sigma_{y_0,\\rho-1} \\\\ \\vdots & \\ddots & \\vdots \\\\ \\sigma_{\\rho-1,y_0} & \\cdots & \\sigma_{\\rho-1,\\rho-1} \\end{bmatrix}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"next-steps-modeling-correlation-across-biomarkers","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Next Steps: Modeling Correlation Across Biomarkers","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Current Limitation: Biomarkers assumed independent: IBI_B Planned Extension: Use full covariance ΣB\\Sigma_B: Cov(vec(Θi))=ΣP⊗ΣB \\text{Cov}(\\text{vec}(\\Theta_i)) = \\Sigma_P \\otimes \\Sigma_B","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"extending-to-correlated-biomarkers","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Extending to Correlated Biomarkers","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Assume P=5P=5, B=3B=3 Define: ΣP=[σy0,y0σy0,y1−y0σy0,t1σy0,ασy0,ρ−1σy1−y0,y0σy1−y0,y1−y0σy1−y0,t1σy1−y0,ασy1−y0,ρ−1σt1,y0σt1,y1−y0σt1,t1σt1,ασt1,ρ−1σα,y0σα,y1−y0σα,t1σα,ασα,ρ−1σρ−1,y0σρ−1,y1−y0σρ−1,t1σρ−1,ασρ−1,ρ−1],ΣB=[τ11τ12τ13τ21τ22τ23τ31τ32τ33] \\Sigma_P = \\begin{bmatrix} \\sigma_{y_0,y_0} & \\sigma_{y_0,y_1-y_0} & \\sigma_{y_0,t_1} & \\sigma_{y_0,\\alpha} & \\sigma_{y_0,\\rho-1} \\\\ \\sigma_{y_1-y_0,y_0} & \\sigma_{y_1-y_0,y_1-y_0} & \\sigma_{y_1-y_0,t_1} & \\sigma_{y_1-y_0,\\alpha} & \\sigma_{y_1-y_0,\\rho-1} \\\\ \\sigma_{t_1,y_0} & \\sigma_{t_1,y_1-y_0} & \\sigma_{t_1,t_1} & \\sigma_{t_1,\\alpha} & \\sigma_{t_1,\\rho-1} \\\\ \\sigma_{\\alpha,y_0} & \\sigma_{\\alpha,y_1-y_0} & \\sigma_{\\alpha,t_1} & \\sigma_{\\alpha,\\alpha} & \\sigma_{\\alpha,\\rho-1} \\\\ \\sigma_{\\rho-1,y_0} & \\sigma_{\\rho-1,y_1-y_0} & \\sigma_{\\rho-1,t_1} & \\sigma_{\\rho-1,\\alpha} & \\sigma_{\\rho-1,\\rho-1} \\end{bmatrix}, \\quad \\Sigma_B = \\begin{bmatrix} \\tau_{11} & \\tau_{12} & \\tau_{13} \\\\ \\tau_{21} & \\tau_{22} & \\tau_{23} \\\\ \\tau_{31} & \\tau_{32} & \\tau_{33} \\end{bmatrix} : ΣP\\Sigma_P: covariance across 5 parameters (size 5×55 \\times 5) ΣB\\Sigma_B: covariance across BB biomarkers (size B×BB \\times B)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"kronecker-product-structure-sigma_p-otimes-sigma_b","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Kronecker Product Structure: ΣP⊗ΣB\\Sigma_P \\otimes \\Sigma_B","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Cov(vec(Θi))=ΣP⊗ΣB \\text{Cov}(\\text{vec}(\\Theta_i)) = \\Sigma_P \\otimes \\Sigma_B ΣP\\Sigma_P: 5×55 \\times 5 covariance across parameters ΣB\\Sigma_B: B×BB \\times B covariance across biomarkers Kronecker product expands (5B)×(5B)(5B) \\times (5B) covariance matrix block-diagonal — allows parameter correlations cross-biomarker correlations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/chapter2_correlated_biomarkers.html","id":"practical-to-do-list-for-chapter-2","dir":"Preview > Pr129 > Articles","previous_headings":"","what":"Practical To-Do List (for Chapter 2)","title":"Modeling Correlation in Antibody Kinetics: A Hierarchical Bayesian Approach","text":"Model Implementation: Define parameter covariance ΣP,j\\Sigma_{P,j} (within biomarker jj) Define biomarker covariance ΣB\\Sigma_B (across biomarkers) Full covariance structure: Cov(vec(θi))=ΣP⊗ΣB\\text{Cov}(\\text{vec}(\\theta_i)) = \\Sigma_P \\otimes \\Sigma_B Priors: ΣP,j−1∼𝒲(Ωj,νj)\\Sigma_{P,j}^{-1} \\sim \\mathcal{W}(\\Omega_j, \\nu_j), ΣB−1∼𝒲(ΩB,νB)\\Sigma_B^{-1} \\sim \\mathcal{W}(\\Omega_B, \\nu_B) Simulation Study (first step): Generate fake longitudinal data known ΣP\\Sigma_P ΣB\\Sigma_B Fit independence model (IBI_B) vs. correlated model (ΣB\\Sigma_B) Evaluate recovery true covariance structure Validation Real Data (next step): Apply Shigella longitudinal data Compare independence vs. correlated models (DIC, WAIC, posterior predictive checks) Summarize implications epidemiologic utility Deliverable: Simulation + model comparison documented vignette serodynamics package","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/articles/index.html","id":null,"dir":"Preview > Pr129 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Modeling Correlation Antibody Kinetics: Hierarchical Bayesian Approach  dobson  test-snippets","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/authors.html","id":null,"dir":"Preview > Pr129","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/authors.html","id":"citation","dir":"Preview > Pr129","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9041, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9041},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/index.html","id":"serodynamics","dir":"Preview > Pr129","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/index.html","id":"installation","dir":"Preview > Pr129","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr129 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/news/index.html","id":"new-features-development-version","dir":"Preview > Pr129 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Added Chapter 2 documentation correlated biomarker model (#129) Including fitted residual values data frame run_mod output. (#101) Added plot_predicted_curve() support faceting multiple IDs (#68) Replacing old data object new run_mod output (#102) Adding class assignment run_mod output (#76) Making prep_priors modifiable (#78) Taking include_subs input option, default include individuals Making single tbl output pieces attributes. jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr129 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr129 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"vectorized ab() function (#116) Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/news/index.html","id":"serodynamics-000","dir":"Preview > Pr129 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/as_case_data.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/as_case_data.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/calc_fit_mod.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"calc_fit_mod() takes antibody kinetic parameter estimates calculates fitted residual values. Fitted values correspond estimated assay value (ex. ELISA units etc.) time since infection (TSI). Residual values calculated difference fitted observed values.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/calc_fit_mod.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"","code":"calc_fit_mod(modeled_dat, original_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/calc_fit_mod.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"modeled_dat data.frame modeled antibody kinetic parameter values. original_data data.frame original input dataset.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/calc_fit_mod.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"data.frame attached attributes following values: Subject = ID number specifying individual Iso_type = modeled antigen_isotype t = Time since infection fitted = fitted value calculated using model output parameters given t residual = residual value calculated difference observed fitted values given t","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/index.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/index.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/index.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/index.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/index.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/index.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics plot_predicted_curve() Generate Predicted Antibody Response Curves (Median + 95% CI)","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/index.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/index.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/index.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/initsfunction.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/initsfunction.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/load_data.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/load_data.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/load_data.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/nepal_sees.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/nepal_sees.html","id":"source","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/nepal_sees_jags_output.html","id":"format","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Format","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"S3 object class sr_model: dplyr::tbl_df contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\"). Contains 40,000 rows, 7 columns, model attributes. Iteration Number sampling iterations: 500 iterations Chain Number MCMC chains run: 2 chains run Parameter Parameter estimated Iso_type Antibody/antigen type combination evaluated: HlyE_IgA HlyE_IgG Stratification variable used stratify jags model: typhi paratyphi Subject ID subject evaluated: newperson, sees_npl_1, sees_npl_2 value Estimated value parameter attributes list attributes summarize jags inputs, priors, optional jags_post mcmc object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_predicted_curve.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"Plots median antibody response curve 95% credible interval ribbon, using MCMC samples posterior distribution. Optionally overlays observed data, applies logarithmic spacing y- x-axes, shows individual sampled curves.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_predicted_curve.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"plot_predicted_curve(   model,   ids,   antigen_iso,   dataset = NULL,   legend_obs = \"Observed data\",   legend_median = \"Median prediction\",   show_quantiles = TRUE,   log_y = FALSE,   log_x = FALSE,   show_all_curves = FALSE,   alpha_samples = 0.3,   xlim = NULL,   ylab = NULL,   facet_by_id = length(ids) > 1,   ncol = NULL )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_predicted_curve.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"model sr_model object (returned run_mod()) containing samples posterior distribution model parameters. ids participant IDs plot; example, \"sees_npl_128\". antigen_iso antigen isotype plot; example, \"HlyE_IgA\" \"HlyE_IgG\". dataset (Optional) dplyr::tbl_df observed antibody response data. Must contain: timeindays value id antigen_iso legend_obs Label observed data legend. legend_median Label median prediction line. show_quantiles logical; TRUE (default), plots 2.5%, 50%, 97.5% quantiles. log_y logical; TRUE, applies log10 transformation y-axis. log_x logical; TRUE, applies log10 transformation x-axis. show_all_curves logical; TRUE, overlays individual sampled curves. alpha_samples Numeric; transparency level individual curves (default = 0.3). xlim (Optional) numeric vector length 2 providing custom x-axis limits. ylab (Optional) string y-axis label. NULL (default), label automatically set \"ELISA units\" \"ELISA units (log scale)\" based log_y argument. facet_by_id logical; TRUE, facets plot 'id'. Defaults TRUE multiple IDs provided. ncol integer; number columns faceting.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_predicted_curve.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"ggplot2::ggplot object displaying predicted antibody response curves median curve 95% credible interval band default.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_predicted_curve.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"sees_model <- serodynamics::nepal_sees_jags_output sees_data <- serodynamics::nepal_sees  # Plot (linear axes) with all individual curves + median ribbon p1 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p1)   # Plot (log10 y-axis) with all individual curves + median ribbon p2 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = TRUE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p2)   # Plot with custom x-axis limits (0-600 days) p3 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE,   xlim               = c(0, 600) ) print(p3)   # Multi-ID, faceted plot (single antigen): p4 <- plot_predicted_curve(   model           = sees_model,   dataset         = sees_data,   id              = c(\"sees_npl_128\", \"sees_npl_131\"),   antigen_iso     = \"HlyE_IgA\",   show_all_curves = TRUE,   facet_by_id     = TRUE ) print(p4)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/post_summ.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/post_summ.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/post_summ.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/post_summ.html","id":"author","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter Stratification       Mean       SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>     <chr>               <dbl>    <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha     paratyphi         0.00266  3.92e-3 1.56e-3 1.99e-4 7.47e-4 #>  2 HlyE_IgA alpha     typhi             0.00293  4.18e-3 1.51e-3 1.48e-4 6.88e-4 #>  3 HlyE_IgA shape     paratyphi         1.63     2.82e-1 1.56e+0 1.27e+0 1.44e+0 #>  4 HlyE_IgA shape     typhi             1.77     4.41e-1 1.67e+0 1.26e+0 1.49e+0 #>  5 HlyE_IgA t1        paratyphi         4.28     2.11e+0 3.90e+0 1.56e+0 2.73e+0 #>  6 HlyE_IgA t1        typhi             7.91     5.98e+0 6.36e+0 1.95e+0 4.39e+0 #>  7 HlyE_IgA y0        paratyphi         3.83     2.65e+0 2.85e+0 1.07e+0 1.88e+0 #>  8 HlyE_IgA y0        typhi             2.90     2.23e+0 2.34e+0 7.70e-1 1.69e+0 #>  9 HlyE_IgA y1        paratyphi      2781.       4.19e+4 1.92e+2 7.45e+0 5.61e+1 #> 10 HlyE_IgA y1        typhi          1275.       6.42e+3 2.58e+2 9.11e+0 8.44e+1 #> 11 HlyE_IgG alpha     paratyphi         0.00202  2.11e-3 1.43e-3 2.25e-4 7.07e-4 #> 12 HlyE_IgG alpha     typhi             0.00196  1.88e-3 1.39e-3 2.69e-4 7.57e-4 #> 13 HlyE_IgG shape     paratyphi         1.41     1.56e-1 1.39e+0 1.17e+0 1.29e+0 #> 14 HlyE_IgG shape     typhi             1.49     3.78e-1 1.39e+0 1.08e+0 1.23e+0 #> 15 HlyE_IgG t1        paratyphi         5.02     1.87e+0 4.73e+0 2.18e+0 3.75e+0 #> 16 HlyE_IgG t1        typhi             7.67     6.84e+0 6.02e+0 1.59e+0 3.82e+0 #> 17 HlyE_IgG y0        paratyphi         2.46     9.14e-1 2.33e+0 1.23e+0 1.87e+0 #> 18 HlyE_IgG y0        typhi             2.11     1.40e+0 1.79e+0 4.79e-1 1.22e+0 #> 19 HlyE_IgG y1        paratyphi       929.       4.52e+3 2.73e+2 2.09e+1 1.08e+2 #> 20 HlyE_IgG y1        typhi           512.       9.65e+2 2.44e+2 2.77e+1 1.11e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Mon Aug 18 18:12:44 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_data.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_data.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_data.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_priors.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Takes multiple vector inputs allow modifiable priors. Priors can specified option run_mod.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(   max_antigens,   mu_hyp_param = c(1, 7, 1, -4, -1),   prec_hyp_param = c(1, 1e-05, 1, 0.001, 1),   omega_param = c(1, 50, 1, 10, 1),   wishdf_param = 20,   prec_logy_hyp_param = c(4, 1) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_priors.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"\"curve_params_priors\" object (subclass list inputs prep_priors() attached attributes entry named \"used_priors\"), containing following elements: \"n_params\": Corresponds 5 parameters estimated. \"mu.hyp\": matrix hyperpriors dimensions max_antigens x 5 (# parameters), representing mean hyperprior distribution five seroresponse parameters: y0, y1, t1, r, alpha). \"prec.hyp\": three-dimensional numeric array dimensions max_antigens x 5 (# parameters), containing precision matrices hyperprior distributions mu.hyp, biomarker. \"omega\" : three-dimensional numeric array 5 matrix,dimensions max_antigens x 5 (# parameters), representing precision matrix Wishart hyper-priors prec.hyp. \"wishdf\": vector 2 values specifying degrees freedom Wishart distribution used subject-level precision prior. \"prec.logy.hyp\": matrix hyper-parameters precision (inverse variance) individual variation measuring max_antigens x 2, log-scale. used_priors = inputs prep_priors() attached attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2,             mu_hyp_param = c(1.0, 7.0, 1.0, -4.0, -1.0),             prec_hyp_param = c(1.0, 0.00001, 1.0, 0.001, 1.0),             omega_param = c(1.0, 50.0, 1.0, 10.0, 1.0),             wishdf_param = 20,             prec_logy_hyp_param = c(4.0, 1.0)) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>   prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/reexports.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/run_mod.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable MCMC inputs runjags::run.jags() MCMC Bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak shape = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod = serodynamics_example(\"model.jags\"),   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/run_mod.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number MCMC chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. ... Arguments passed prep_priors max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/run_mod.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"sr_model class object: subclass dplyr::tbl_df contains MCMC samples joint posterior distribution model parameters, conditional provided input data, including following: iteration = Number sampling iterations chain = Number MCMC chains run; 1 4 Parameter = Parameter estimated. Includes following: y0 = Posterior estimate baseline antibody concentration y1 = Posterior estimate peak antibody concentration t1 = Posterior estimate time peak shape = Posterior estimate shape parameter alpha = Posterior estimate decay rate Iso_type = Antibody/antigen type combination evaluated Stratification = variable used stratify jags model Subject = ID subject evaluated value = Estimated value parameter following attributes included output: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc). priors: list summarizes input priors, including: mu_hyp_param prec_hyp_param omega_param wishdf prec_logy_hyp_param fitted_residuals: data.frame containing fitted residual values observations. optional \"jags.post\" attribute, included argument with_post = TRUE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/run_mod.html","id":"author","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Mon Aug 18 18:12:50 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Mon Aug 18 18:13:38 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee ksjlee@ucdavis.edu [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_case_data.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_case_data.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 4 3 2 2 2 2 3 2 4 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/use_att_names.html","id":null,"dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"use_att_names takes prepared longitudinal data antibody kinetic modeling names columns using attribute values allow merging modeled run_mod() output dplyr::tbl_df. column names include Subject, Iso_type, t, result.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/use_att_names.html","id":"ref-usage","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Usage","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"","code":"use_att_names(data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/use_att_names.html","id":"arguments","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Arguments","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"data data.frame raw longitudinal data prepared antibody kinetic modeling using as_case_data().","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr129/reference/use_att_names.html","id":"value","dir":"Preview > Pr129 > Reference","previous_headings":"","what":"Value","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"input data.frame columns named attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/CONTRIBUTING.html","id":null,"dir":"Preview > Pr133","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr133","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr133","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr133","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr133","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr133","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/LICENSE.html","id":null,"dir":"Preview > Pr133","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"current-model-what-we-already-fit","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"Current Model (what we already fit)","title":"Chapter 2 — Fake Data First, Then Fit","text":"Chapter 1 model fits subject-level parameters biomarker (y0,t1,y1,α,ρ)(y_0, t_1, y_1, \\alpha, \\rho). Within biomarker: variation captured covariance (ΣP)(\\Sigma_P). Across biomarkers: independence (block-diagonal), .e. Cov(vec(Θi))=ΣP⊗IB \\mathrm{Cov}\\!\\big(\\mathrm{vec}(\\Theta_i)\\big) = \\Sigma_P \\otimes I_B","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"step-a-set-up","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"Step A — Set up","title":"Chapter 2 — Fake Data First, Then Fit","text":"","code":"set.seed(123) library(tidyverse) library(mvtnorm)   # rmvnorm library(Matrix)    # kronecker library(serodynamics)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"step-c-choose-a-truth-and-simulate-fake-data","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"Step C — Choose a “truth” and simulate fake data","title":"Chapter 2 — Fake Data First, Then Fit","text":"","code":"# Choose B biomarkers and visit schedule n_blocks  <- 2 time_grid <- c(0, 7, 14, 30)  # True ΣP (5×5): mild positive correlation among the five latent parameters sd_p <- c(0.35, 0.45, 0.25, 0.30, 0.25) R_p  <- matrix(0.25, 5, 5) diag(R_p) <- 1 sigma_p <- diag(sd_p) %*% R_p %*% diag(sd_p)  # True ΣB (B×B): cross-biomarker correlation R_b <- matrix(c(1, 0.5,                 0.5, 1), n_blocks, n_blocks, byrow = TRUE) sd_b <- rep(0.6, n_blocks) sigma_b <- diag(sd_b) %*% R_b %*% diag(sd_b)   # Run simulator sim <- simulate_multi_b_long(   n_id      = 5,   n_blocks  = n_blocks,   time_grid = time_grid,   sigma_p   = sigma_p,   sigma_b   = sigma_b )  # This long table already matches prep_data() expectations:  sim$data |> dplyr::slice_head(n = 8)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"step-d-fit-the-independence-model","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"Step D — Fit the independence model","title":"Chapter 2 — Fake Data First, Then Fit","text":"","code":"# If our package is loaded, this is all we need:  sim_tbl <- serodynamics::as_case_data(   sim$data,   id_var        = \"Subject\",   biomarker_var = \"antigen_iso\",   value_var     = \"value\",   time_in_days  = \"time_days\" )  prepped <- prep_data(sim_tbl) priors  <- prep_priors(max_antigens = prepped$n_antigen_isos) fit_v0  <- run_mod(  data     = sim_tbl,  file_mod = serodynamics_example(\"model.jags\"),  # our current model  nchain = 4, nadapt = 1000, nburn = 500, nmc = 500, niter = 5000,  strat = NA, with_post = TRUE  )  fit_v0"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"step-e-prepare-for-correlated-model","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"Step E — Prepare for Correlated Model","title":"Chapter 2 — Fake Data First, Then Fit","text":"Step D fit “independence” model: biomarker covariance 5 parameters, biomarkers assumed independent. Now allow correlations across biomarkers well within biomarkers. Mathematically, replace block-diagonal assumption Kronecker structure: Cov(vec(Θi))=ΣP⊗ΣB \\mathrm{Cov}\\!\\big(\\mathrm{vec}(\\Theta_i)\\big)    = \\Sigma_P \\otimes \\Sigma_B ΣP\\Sigma_P = covariance 5 parameters (y0,y1,t1,α,ρ)(y_0, y_1, t_1, \\alpha, \\rho) within biomarker. ΣB\\Sigma_B = covariance across biomarkers. Kronecker product ⊗\\otimes builds 5B×5B5B \\times 5B covariance. Define priors ΣP\\Sigma_P ΣB\\Sigma_B separately (via Wishart distributions). Build Kronecker precision matrix T=TB⊗TP\\text{T} = \\text{T}_B \\otimes \\text{T}_P inside JAGS. Draw subject’s stacked parameter vector multivariate prior. Likelihood observed antibody data unchanged — prior covariance differs. define helper function prep_priors_multiB() sets priors ΣP\\Sigma_P (within-biomarker) ΣB\\Sigma_B (across-biomarkers). TP∼Wishart(ΩP,νP)\\text{T}_P \\sim \\text{Wishart}(\\Omega_P, \\nu_P) TB∼Wishart(ΩB,νB)\\text{T}_B \\sim \\text{Wishart}(\\Omega_B, \\nu_B) Kronecker precision: T=TB⊗TP\\text{T} = \\text{T}_B \\otimes \\text{T}_P model.jags one conceptual change: instead independent par[subj,b,]∼𝒩(μ.par[b,],prec.par[b,,]) par[\\text{subj},\\text{b},] \\sim \\mathcal{N}( \\mu.par[\\text{b},], \\ \\text{prec.par}[\\text{b},,] )  b cur_antigen_iso draw biomarkers subject Kronecker precision: vec(parsubj,⋅,⋅)∼𝒩(vec(μpar),TB⊗TP). \\mathrm{vec}(par_{\\text{subj},\\cdot,\\cdot}) \\sim \\mathcal{N}\\!\\big( \\mathrm{vec}(\\mu_{par}), \\ \\text{T}_B \\otimes \\text{T}_P \\big). Everything else (transforms, likelihood, measurement precisions) stays . keep hyperpriors mu.par (per-biomarker means), plugs right current prep_priors(). new model.jags rename model_ch2_kron.jags Removed per-biomarker prec.par[cur_antigen_iso,,] ~ dwish(...) par[subj,cur_antigen_iso,] ~ dmnorm(mu.par[cur_antigen_iso,], prec.par[cur_antigen_iso,,]). Replaced one prior per subject stacked vector using T=TB⊗TP\\text{T} = \\text{T}_B \\otimes \\text{T}_P Kept mu.par prior likelihood exactly .","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"e-1-priors-for-the-correlated-model","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"E.1 Priors for the Correlated Model","title":"Chapter 2 — Fake Data First, Then Fit","text":"define helper function prep_priors_multiB() sets priors ΣP\\Sigma_P (within-biomarker) ΣB\\Sigma_B (across-biomarkers). TP∼Wishart(ΩP,νP)\\text{T}_P \\sim \\text{Wishart}(\\Omega_P, \\nu_P) TB∼Wishart(ΩB,νB)\\text{T}_B \\sim \\text{Wishart}(\\Omega_B, \\nu_B) Kronecker precision: T=TB⊗TP\\text{T} = \\text{T}_B \\otimes \\text{T}_P","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"e-2-write-the-new-jags-model-file-kronecker-precision","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"E.2 Write the new JAGS model file (Kronecker precision)","title":"Chapter 2 — Fake Data First, Then Fit","text":"model.jags one conceptual change: instead independent par[subj,b,]∼𝒩(μ.par[b,],prec.par[b,,]) par[\\text{subj},\\text{b},] \\sim \\mathcal{N}( \\mu.par[\\text{b},], \\ \\text{prec.par}[\\text{b},,] )  b cur_antigen_iso draw biomarkers subject Kronecker precision: vec(parsubj,⋅,⋅)∼𝒩(vec(μpar),TB⊗TP). \\mathrm{vec}(par_{\\text{subj},\\cdot,\\cdot}) \\sim \\mathcal{N}\\!\\big( \\mathrm{vec}(\\mu_{par}), \\ \\text{T}_B \\otimes \\text{T}_P \\big). Everything else (transforms, likelihood, measurement precisions) stays . keep hyperpriors mu.par (per-biomarker means), plugs right current prep_priors(). new model.jags rename model_ch2_kron.jags Removed per-biomarker prec.par[cur_antigen_iso,,] ~ dwish(...) par[subj,cur_antigen_iso,] ~ dmnorm(mu.par[cur_antigen_iso,], prec.par[cur_antigen_iso,,]). Replaced one prior per subject stacked vector using T=TB⊗TP\\text{T} = \\text{T}_B \\otimes \\text{T}_P Kept mu.par prior likelihood exactly .","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"what-changed-vs--our-current-model-jags","dir":"Preview > Pr133 > Articles","previous_headings":"6 Step E — Prepare for Correlated Model","what":"What changed vs. our current model.jags","title":"Chapter 2 — Fake Data First, Then Fit","text":"Removed per-biomarker prec.par[cur_antigen_iso,,] ~ dwish(...) par[subj,cur_antigen_iso,] ~ dmnorm(mu.par[cur_antigen_iso,], prec.par[cur_antigen_iso,,]). Replaced one prior per subject stacked vector using T=TB⊗TP\\text{T} = \\text{T}_B \\otimes \\text{T}_P Kept mu.par prior likelihood exactly .","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"what-are-omegap-nup-omegab-nub-and-why-these-defaults","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"What are OmegaP, nuP, OmegaB, nuB — and why these defaults?","title":"Chapter 2 — Fake Data First, Then Fit","text":"Wishart hyperparameters precision matrices (inverse covariances) used Kronecker prior: TP∼Wishart(ΩP,νP)\\text{T}_P \\sim \\text{Wishart}(\\Omega_P, \\nu_P) – within-biomarker parameter precision (5×5). TB∼Wishart(ΩB,νB)\\text{T}_B \\sim \\text{Wishart}(\\Omega_B, \\nu_B) – across-biomarker precision (B×B). Generally speaking (JAGS Wishart): 𝔼[T]≈ν⋅Ω−1\\mathop{\\mathbb{E}}[\\text{T}]\\approx \\nu \\cdot \\Omega^{-1} ν\\nu tiny. smaller diagonal entries Ω\\Omega imply larger expected precision (.e., smaller covariance), vice versa. nuP = 6 just dimension (5): proper tight. OmegaP = 0.1 * I_5 diffuse. small nuP, prior wide; data dominate. nuB = B + 1 minimally-informative choice B×B Wishart. OmegaB = I_B centers TauB near identity letting data learn cross-biomarker correlation. starting values. Validate prior predictive checks (simulate parameters → curves → sanity check ranges).","code":"OmegaP_scale = rep(0.1, 5);  nuP = 6 OmegaB_scale = rep(1.0, B);  nuB = B + 1"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"chosen-weakly-informative-defaults","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"Chosen weakly-informative defaults","title":"Chapter 2 — Fake Data First, Then Fit","text":"nuP = 6 just dimension (5): proper tight. OmegaP = 0.1 * I_5 diffuse. small nuP, prior wide; data dominate. nuB = B + 1 minimally-informative choice B×B Wishart. OmegaB = I_B centers TauB near identity letting data learn cross-biomarker correlation. starting values. Validate prior predictive checks (simulate parameters → curves → sanity check ranges).","code":"OmegaP_scale = rep(0.1, 5);  nuP = 6 OmegaB_scale = rep(1.0, B);  nuB = B + 1"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/Chapter2.html","id":"putting-it-together","dir":"Preview > Pr133 > Articles","previous_headings":"","what":"Putting it together","title":"Chapter 2 — Fake Data First, Then Fit","text":"Independence model (baseline): changes. Correlated model: supply usual priors new Kronecker priors:","code":"# Step 1: simulate fake data (or load real Shigella data) sim_tbl   # Step 2: write the new Kronecker model file (once per session/project) write_model_ch2_kron()  # Step 3: run the new wrapper with combined priors fit_kron <- run_mod_kron(   data     = sim_tbl,   file_mod = \"model_ch2_kron.jags\",   nchain   = 4, nadapt = 1000, nburn = 500,   nmc      = 500, niter = 5000,   strat    = NA,   mu_hyp_param = c(1.0, 7.0, 1.0, -4.0, -1.0)  # optional override )  # Step 4: inspect results (same as with run_mod) fit_kron"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/articles/index.html","id":null,"dir":"Preview > Pr133 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Chapter 2 — Fake Data First, Fit  dobson  test-snippets","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/authors.html","id":null,"dir":"Preview > Pr133","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/authors.html","id":"citation","dir":"Preview > Pr133","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9042, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9042},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/index.html","id":"serodynamics","dir":"Preview > Pr133","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/index.html","id":"installation","dir":"Preview > Pr133","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr133 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/news/index.html","id":"new-features-development-version","dir":"Preview > Pr133 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Added Chapter 2 fake-data simulation correlated Kronecker model (#133) Including fitted residual values data frame run_mod output. (#101) Added plot_predicted_curve() support faceting multiple IDs (#68) Replacing old data object new run_mod output (#102) Adding class assignment run_mod output (#76) Making prep_priors modifiable (#78) Taking include_subs input option, default include individuals Making single tbl output pieces attributes. jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr133 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr133 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"vectorized ab() function (#116) Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/news/index.html","id":"serodynamics-000","dir":"Preview > Pr133 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/as_case_data.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/as_case_data.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/calc_fit_mod.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"calc_fit_mod() takes antibody kinetic parameter estimates calculates fitted residual values. Fitted values correspond estimated assay value (ex. ELISA units etc.) time since infection (TSI). Residual values calculated difference fitted observed values.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/calc_fit_mod.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"","code":"calc_fit_mod(modeled_dat, original_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/calc_fit_mod.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"modeled_dat data.frame modeled antibody kinetic parameter values. original_data data.frame original input dataset.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/calc_fit_mod.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"data.frame attached attributes following values: Subject = ID number specifying individual Iso_type = modeled antigen_isotype t = Time since infection fitted = fitted value calculated using model output parameters given t residual = residual value calculated difference observed fitted values given t","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/clean_priors.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Drop legacy/unused prior fields — clean_priors","title":"Drop legacy/unused prior fields — clean_priors","text":"clean_priors() removes elements priors list used Kronecker model. helps avoid passing unused conflicting parameters (like omega, wishdf, prec.par) JAGS.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/clean_priors.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Drop legacy/unused prior fields — clean_priors","text":"","code":"clean_priors(x)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/clean_priors.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Drop legacy/unused prior fields — clean_priors","text":"x base::list() priors (e.g., prep_priors()).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/clean_priors.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Drop legacy/unused prior fields — clean_priors","text":"base::list() legacy fields removed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/clean_priors.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Drop legacy/unused prior fields — clean_priors","text":"Kwan Ho Lee","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/clean_priors.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Drop legacy/unused prior fields — clean_priors","text":"","code":"# Example: remove unused fields priors <- list(   omega = 1,   wishdf = 10,   mu.hyp = matrix(0, 1, 1),   prec.par = 5 )  cleaned <- clean_priors(priors) print(names(cleaned)) #> [1] \"mu.hyp\""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"clean_priors() Drop legacy/unused prior fields inits_kron() Safe inits Kronecker model prep_priors_multi_b() Priors Kronecker (multi-biomarker) model run_mod_kron() Run Kronecker (correlated biomarkers) model simulate_multi_b_long() Simulate longitudinal data (serodynamics trajectory) write_model_ch2_kron() Write Chapter 2 Kronecker JAGS model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics plot_predicted_curve() Generate Predicted Antibody Response Curves (Median + 95% CI)","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/index.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/inits_kron.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Safe inits for the Kronecker model — inits_kron","title":"Safe inits for the Kronecker model — inits_kron","text":"inits_kron() wraps base initializer (provided) makes sure legacy pieces (prec.par) Kronecker precision terms (TauB, TauP) preset. avoids conflicts running multi-biomarker Kronecker model.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/inits_kron.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Safe inits for the Kronecker model — inits_kron","text":"","code":"inits_kron(chain, base_inits = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/inits_kron.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Safe inits for the Kronecker model — inits_kron","text":"chain Integer chain index passed base inits function. base_inits function signature function(chain) returns named list initial values. Defaults simple RNG seed initializer.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/inits_kron.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Safe inits for the Kronecker model — inits_kron","text":"base::list() inits suitable runjags.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/inits_kron.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Safe inits for the Kronecker model — inits_kron","text":"Kwan Ho Lee","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/inits_kron.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Safe inits for the Kronecker model — inits_kron","text":"","code":"# Basic usage with default RNG initializer inits_kron(1) #> $.RNG.name #> [1] \"base::Mersenne-Twister\" #>  #> $.RNG.seed #> [1] 124 #>   # Using a custom base initializer custom_inits <- function(chain) {   list(.RNG.name = \"base::Wichmann-Hill\",        .RNG.seed = 100 + chain,        extra = \"foo\") } inits_kron(2, base_inits = custom_inits) #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>  #> $.RNG.seed #> [1] 102 #>  #> $extra #> [1] \"foo\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/initsfunction.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/initsfunction.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/load_data.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/load_data.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/load_data.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/nepal_sees.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/nepal_sees.html","id":"source","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/nepal_sees_jags_output.html","id":"format","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Format","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"S3 object class sr_model: dplyr::tbl_df contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\"). Contains 40,000 rows, 7 columns, model attributes. Iteration Number sampling iterations: 500 iterations Chain Number MCMC chains run: 2 chains run Parameter Parameter estimated Iso_type Antibody/antigen type combination evaluated: HlyE_IgA HlyE_IgG Stratification variable used stratify jags model: typhi paratyphi Subject ID subject evaluated: newperson, sees_npl_1, sees_npl_2 value Estimated value parameter attributes list attributes summarize jags inputs, priors, optional jags_post mcmc object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_predicted_curve.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"Plots median antibody response curve 95% credible interval ribbon, using MCMC samples posterior distribution. Optionally overlays observed data, applies logarithmic spacing y- x-axes, shows individual sampled curves.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_predicted_curve.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"plot_predicted_curve(   model,   ids,   antigen_iso,   dataset = NULL,   legend_obs = \"Observed data\",   legend_median = \"Median prediction\",   show_quantiles = TRUE,   log_y = FALSE,   log_x = FALSE,   show_all_curves = FALSE,   alpha_samples = 0.3,   xlim = NULL,   ylab = NULL,   facet_by_id = length(ids) > 1,   ncol = NULL )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_predicted_curve.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"model sr_model object (returned run_mod()) containing samples posterior distribution model parameters. ids participant IDs plot; example, \"sees_npl_128\". antigen_iso antigen isotype plot; example, \"HlyE_IgA\" \"HlyE_IgG\". dataset (Optional) dplyr::tbl_df observed antibody response data. Must contain: timeindays value id antigen_iso legend_obs Label observed data legend. legend_median Label median prediction line. show_quantiles logical; TRUE (default), plots 2.5%, 50%, 97.5% quantiles. log_y logical; TRUE, applies log10 transformation y-axis. log_x logical; TRUE, applies log10 transformation x-axis. show_all_curves logical; TRUE, overlays individual sampled curves. alpha_samples Numeric; transparency level individual curves (default = 0.3). xlim (Optional) numeric vector length 2 providing custom x-axis limits. ylab (Optional) string y-axis label. NULL (default), label automatically set \"ELISA units\" \"ELISA units (log scale)\" based log_y argument. facet_by_id logical; TRUE, facets plot 'id'. Defaults TRUE multiple IDs provided. ncol integer; number columns faceting.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_predicted_curve.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"ggplot2::ggplot object displaying predicted antibody response curves median curve 95% credible interval band default.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_predicted_curve.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"sees_model <- serodynamics::nepal_sees_jags_output sees_data <- serodynamics::nepal_sees  # Plot (linear axes) with all individual curves + median ribbon p1 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p1)   # Plot (log10 y-axis) with all individual curves + median ribbon p2 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = TRUE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p2)   # Plot with custom x-axis limits (0-600 days) p3 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE,   xlim               = c(0, 600) ) print(p3)   # Multi-ID, faceted plot (single antigen): p4 <- plot_predicted_curve(   model           = sees_model,   dataset         = sees_data,   id              = c(\"sees_npl_128\", \"sees_npl_131\"),   antigen_iso     = \"HlyE_IgA\",   show_all_curves = TRUE,   facet_by_id     = TRUE ) print(p4)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/post_summ.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/post_summ.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/post_summ.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/post_summ.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter Stratification       Mean       SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>     <chr>               <dbl>    <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha     paratyphi         0.00266  3.92e-3 1.56e-3 1.99e-4 7.47e-4 #>  2 HlyE_IgA alpha     typhi             0.00293  4.18e-3 1.51e-3 1.48e-4 6.88e-4 #>  3 HlyE_IgA shape     paratyphi         1.63     2.82e-1 1.56e+0 1.27e+0 1.44e+0 #>  4 HlyE_IgA shape     typhi             1.77     4.41e-1 1.67e+0 1.26e+0 1.49e+0 #>  5 HlyE_IgA t1        paratyphi         4.28     2.11e+0 3.90e+0 1.56e+0 2.73e+0 #>  6 HlyE_IgA t1        typhi             7.91     5.98e+0 6.36e+0 1.95e+0 4.39e+0 #>  7 HlyE_IgA y0        paratyphi         3.83     2.65e+0 2.85e+0 1.07e+0 1.88e+0 #>  8 HlyE_IgA y0        typhi             2.90     2.23e+0 2.34e+0 7.70e-1 1.69e+0 #>  9 HlyE_IgA y1        paratyphi      2781.       4.19e+4 1.92e+2 7.45e+0 5.61e+1 #> 10 HlyE_IgA y1        typhi          1275.       6.42e+3 2.58e+2 9.11e+0 8.44e+1 #> 11 HlyE_IgG alpha     paratyphi         0.00202  2.11e-3 1.43e-3 2.25e-4 7.07e-4 #> 12 HlyE_IgG alpha     typhi             0.00196  1.88e-3 1.39e-3 2.69e-4 7.57e-4 #> 13 HlyE_IgG shape     paratyphi         1.41     1.56e-1 1.39e+0 1.17e+0 1.29e+0 #> 14 HlyE_IgG shape     typhi             1.49     3.78e-1 1.39e+0 1.08e+0 1.23e+0 #> 15 HlyE_IgG t1        paratyphi         5.02     1.87e+0 4.73e+0 2.18e+0 3.75e+0 #> 16 HlyE_IgG t1        typhi             7.67     6.84e+0 6.02e+0 1.59e+0 3.82e+0 #> 17 HlyE_IgG y0        paratyphi         2.46     9.14e-1 2.33e+0 1.23e+0 1.87e+0 #> 18 HlyE_IgG y0        typhi             2.11     1.40e+0 1.79e+0 4.79e-1 1.22e+0 #> 19 HlyE_IgG y1        paratyphi       929.       4.52e+3 2.73e+2 2.09e+1 1.08e+2 #> 20 HlyE_IgG y1        typhi           512.       9.65e+2 2.44e+2 2.77e+1 1.11e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 26 02:18:02 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_data.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_data.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_data.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Takes multiple vector inputs allow modifiable priors. Priors can specified option run_mod.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(   max_antigens,   mu_hyp_param = c(1, 7, 1, -4, -1),   prec_hyp_param = c(1, 1e-05, 1, 0.001, 1),   omega_param = c(1, 50, 1, 10, 1),   wishdf_param = 20,   prec_logy_hyp_param = c(4, 1) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"\"curve_params_priors\" object (subclass list inputs prep_priors() attached attributes entry named \"used_priors\"), containing following elements: \"n_params\": Corresponds 5 parameters estimated. \"mu.hyp\": matrix hyperpriors dimensions max_antigens x 5 (# parameters), representing mean hyperprior distribution five seroresponse parameters: y0, y1, t1, r, alpha). \"prec.hyp\": three-dimensional numeric array dimensions max_antigens x 5 (# parameters), containing precision matrices hyperprior distributions mu.hyp, biomarker. \"omega\" : three-dimensional numeric array 5 matrix,dimensions max_antigens x 5 (# parameters), representing precision matrix Wishart hyper-priors prec.hyp. \"wishdf\": vector 2 values specifying degrees freedom Wishart distribution used subject-level precision prior. \"prec.logy.hyp\": matrix hyper-parameters precision (inverse variance) individual variation measuring max_antigens x 2, log-scale. used_priors = inputs prep_priors() attached attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2,             mu_hyp_param = c(1.0, 7.0, 1.0, -4.0, -1.0),             prec_hyp_param = c(1.0, 0.00001, 1.0, 0.001, 1.0),             omega_param = c(1.0, 50.0, 1.0, 10.0, 1.0),             wishdf_param = 20,             prec_logy_hyp_param = c(4.0, 1.0)) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>   prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors_multi_b.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Priors for the Kronecker (multi-biomarker) model — prep_priors_multi_b","title":"Priors for the Kronecker (multi-biomarker) model — prep_priors_multi_b","text":"prep_priors_multi_b() builds Wishart hyperparameters within-biomarker precision matrix T_P across-biomarker precision matrix T_B used Kronecker prior T = T_B %x% T_P.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors_multi_b.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Priors for the Kronecker (multi-biomarker) model — prep_priors_multi_b","text":"","code":"prep_priors_multi_b(   n_blocks,   omega_p_scale = rep(0.1, 5),   nu_p = 6,   omega_b_scale = rep(1, n_blocks),   nu_b = n_blocks + 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors_multi_b.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Priors for the Kronecker (multi-biomarker) model — prep_priors_multi_b","text":"n_blocks Integer scalar (B): number biomarkers. omega_p_scale Numeric length-5 vector diagonal Omega_P (parameter scale). nu_p Numeric scalar: degrees freedom T_P ~ Wishart(Omega_P, nu_p). omega_b_scale Numeric length-n_blocks vector diagonal Omega_B (biomarker scale). nu_b Numeric scalar: degrees freedom T_B ~ Wishart(Omega_B, nu_b).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors_multi_b.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Priors for the Kronecker (multi-biomarker) model — prep_priors_multi_b","text":"list elements OmegaP, nuP, OmegaB, nuB.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors_multi_b.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Priors for the Kronecker (multi-biomarker) model — prep_priors_multi_b","text":"Kwan Ho Lee","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/prep_priors_multi_b.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Priors for the Kronecker (multi-biomarker) model — prep_priors_multi_b","text":"","code":"# Basic usage: 3 biomarkers, weakly-informative defaults pri <- prep_priors_multi_b(n_blocks = 3) str(pri) #> List of 4 #>  $ OmegaP: num [1:5, 1:5] 0.1 0 0 0 0 0 0.1 0 0 0 ... #>  $ nuP   : num 6 #>  $ OmegaB: num [1:3, 1:3] 1 0 0 0 1 0 0 0 1 #>  $ nuB   : num 4  # Custom scales (and degrees of freedom) pri_custom <- prep_priors_multi_b(   n_blocks      = 4,   omega_p_scale = c(0.2, 0.2, 0.3, 0.3, 0.4),   nu_p          = 7,   omega_b_scale = rep(1.5, 4),   nu_b          = 6 ) str(pri_custom) #> List of 4 #>  $ OmegaP: num [1:5, 1:5] 0.2 0 0 0 0 0 0.2 0 0 0 ... #>  $ nuP   : num 7 #>  $ OmegaB: num [1:4, 1:4] 1.5 0 0 0 0 1.5 0 0 0 0 ... #>  $ nuB   : num 6"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/reexports.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable MCMC inputs runjags::run.jags() MCMC Bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak shape = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod = serodynamics_example(\"model.jags\"),   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number MCMC chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. ... Arguments passed prep_priors max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"sr_model class object: subclass dplyr::tbl_df contains MCMC samples joint posterior distribution model parameters, conditional provided input data, including following: iteration = Number sampling iterations chain = Number MCMC chains run; 1 4 Parameter = Parameter estimated. Includes following: y0 = Posterior estimate baseline antibody concentration y1 = Posterior estimate peak antibody concentration t1 = Posterior estimate time peak shape = Posterior estimate shape parameter alpha = Posterior estimate decay rate Iso_type = Antibody/antigen type combination evaluated Stratification = variable used stratify jags model Subject = ID subject evaluated value = Estimated value parameter following attributes included output: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc). priors: list summarizes input priors, including: mu_hyp_param prec_hyp_param omega_param wishdf prec_logy_hyp_param fitted_residuals: data.frame containing fitted residual values observations. optional \"jags.post\" attribute, included argument with_post = TRUE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 26 02:18:15 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 26 02:19:03 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod_kron.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Run the Kronecker (correlated biomarkers) model — run_mod_kron","title":"Run the Kronecker (correlated biomarkers) model — run_mod_kron","text":"run_mod_kron() convenience wrapper fit Chapter 2 Kronecker model keeping output shape run_mod(). prepares data, combines base priors Kronecker priors, calls runjags. Required helpers available package environment: prep_data(), prep_priors(), calc_fit_mod().","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod_kron.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Run the Kronecker (correlated biomarkers) model — run_mod_kron","text":"","code":"run_mod_kron(   data,   file_mod = \"model_ch2_kron.jags\",   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   monitor = c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\", \"TauB\", \"TauP\"),   ... )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod_kron.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Run the Kronecker (correlated biomarkers) model — run_mod_kron","text":"data long table (like as_case_data()), consumed prep_data(). file_mod Path JAGS model file. Use write_model_ch2_kron() generate . nchain, nadapt, nburn, nmc, niter MCMC settings (semantics run_mod()). strat Optional column name stratify (behavior run_mod()). with_post Logical; TRUE, attaches raw jags.post output attributes. monitor Character vector nodes monitor. Defaults core parameters plus TauB TauP. ... Additional arguments passed prep_priors() (e.g. mu_hyp_param).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod_kron.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Run the Kronecker (correlated biomarkers) model — run_mod_kron","text":"tibble general structure run_mod() output, attributes carrying priors used, MCMC metadata, fitted values, optionally jags.post.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod_kron.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Run the Kronecker (correlated biomarkers) model — run_mod_kron","text":"Kwan Ho Lee","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/run_mod_kron.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Run the Kronecker (correlated biomarkers) model — run_mod_kron","text":"","code":"# Minimal end-to-end example (small settings for speed)  # 1) Write the Kronecker model once model_path <- write_model_ch2_kron(file.path(tempdir(), \"model_ch2_kron.jags\"))  # 2) Simulate a tiny dataset set.seed(926) n_blocks  <- 2 time_grid <- c(0, 7, 14, 30)  sd_p <- c(0.35, 0.45, 0.25, 0.30, 0.25) R_p  <- matrix(0.25, 5, 5) diag(R_p) <- 1 sigma_p <- diag(sd_p) %*% R_p %*% diag(sd_p)  R_b <- matrix(c(1, 0.5,                 0.5, 1), n_blocks, n_blocks, byrow = TRUE) sd_b <- rep(0.6, n_blocks) sigma_b <- diag(sd_b) %*% R_b %*% diag(sd_b)  sim <- simulate_multi_b_long(   n_id      = 5,   n_blocks  = n_blocks,   time_grid = time_grid,   sigma_p   = sigma_p,   sigma_b   = sigma_b )  # 3) Convert to case_data expected by prep_data/run_mod long_tbl <- serodynamics::as_case_data(   sim$data,   id_var        = \"Subject\",   biomarker_var = \"antigen_iso\",   value_var     = \"value\",   time_in_days  = \"time_days\" )  # 4) Fit the Kronecker model (very small MCMC for demonstration) if (interactive()) {   out <- run_mod_kron(     data     = long_tbl,     file_mod = model_path,     nchain   = 2, nadapt = 200, nburn = 200,     nmc      = 200, niter = 2000,     strat    = NA   ) }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee ksjlee@ucdavis.edu [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_case_data.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_case_data.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 4 3 2 2 2 2 3 2 4 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/simulate_multi_b_long.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Simulate longitudinal data (serodynamics trajectory) — simulate_multi_b_long","title":"Simulate longitudinal data (serodynamics trajectory) — simulate_multi_b_long","text":"simulate_multi_b_long() simulates subject-level latent parameters Kronecker covariance \\(\\Sigma_B \\otimes \\Sigma_P\\) (5 parameters per biomarker), generates noisy observations time grid. expected trajectory computed directly using serodynamics::ab().","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/simulate_multi_b_long.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal data (serodynamics trajectory) — simulate_multi_b_long","text":"","code":"simulate_multi_b_long(   n_id,   n_blocks,   time_grid,   sigma_p,   sigma_b,   mu_latent_base = c(log(1), log(5), log(30), log(0.02), log(1.5)),   meas_sd = rep(0.22, n_blocks) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/simulate_multi_b_long.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal data (serodynamics trajectory) — simulate_multi_b_long","text":"n_id Integer. Number individuals simulate. n_blocks Integer. Number biomarkers (blocks). time_grid Numeric vector observation times (days). sigma_p 5×5 covariance matrix within-biomarker parameters. sigma_b n_blocks×n_blocks covariance across biomarkers. mu_latent_base Numeric length-5 vector means latent parameters (log scale) per biomarker, order (log y0, log(y1 - y0), log t1, log alpha, log(shape-1)). meas_sd Numeric. Measurement error SD(s) log scale; either single value recycled biomarkers length-n_blocks vector.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/simulate_multi_b_long.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal data (serodynamics trajectory) — simulate_multi_b_long","text":"list : data: tibble columns Subject, visit_num, antigen_iso, time_days, value. truth: list m_true, sigma_p, sigma_b, sigma_total, meas_sd, theta_latent.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/simulate_multi_b_long.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Simulate longitudinal data (serodynamics trajectory) — simulate_multi_b_long","text":"Kwan Ho Lee","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/simulate_multi_b_long.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal data (serodynamics trajectory) — simulate_multi_b_long","text":"","code":"set.seed(925)  # Define dimensions and covariances n_blocks  <- 2 time_grid <- c(0, 7, 14, 30)  sd_p <- c(0.35, 0.45, 0.25, 0.30, 0.25) R_p  <- matrix(0.25, 5, 5) diag(R_p) <- 1 sigma_p <- diag(sd_p) %*% R_p %*% diag(sd_p)  R_b <- matrix(c(1, 0.5,                 0.5, 1), n_blocks, n_blocks, byrow = TRUE) sd_b   <- rep(0.6, n_blocks) sigma_b <- diag(sd_b) %*% R_b %*% diag(sd_b)  # Use default serodynamics trajectory  sim <- simulate_multi_b_long(   n_id      = 5,   n_blocks  = n_blocks,   time_grid = time_grid,   sigma_p   = sigma_p,   sigma_b   = sigma_b )  head(sim$data) #> # A tibble: 6 × 5 #>   Subject visit_num antigen_iso time_days value #>   <chr>       <int> <chr>           <dbl> <dbl> #> 1 1               1 bm1                 0 0.850 #> 2 1               1 bm1                 7 1.37  #> 3 1               1 bm1                14 1.50  #> 4 1               1 bm1                30 3.10  #> 5 1               2 bm1                 0 0.784 #> 6 1               2 bm1                 7 1.39"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/use_att_names.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"use_att_names takes prepared longitudinal data antibody kinetic modeling names columns using attribute values allow merging modeled run_mod() output dplyr::tbl_df. column names include Subject, Iso_type, t, result.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/use_att_names.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"","code":"use_att_names(data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/use_att_names.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"data data.frame raw longitudinal data prepared antibody kinetic modeling using as_case_data().","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/use_att_names.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"input data.frame columns named attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/write_model_ch2_kron.html","id":null,"dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Write the Chapter 2 Kronecker JAGS model — write_model_ch2_kron","title":"Write the Chapter 2 Kronecker JAGS model — write_model_ch2_kron","text":"write_model_ch2_kron() emits JAGS model file places Kronecker precision \\(T = T_B \\otimes T_P\\) stacked per-biomarker parameters (5 per biomarker). Expected data JAGS environment includes: scalar: n_blocks, nsubj, n_params (5) hypermeans: mu.hyp[b, ], hyper-precisions: prec.hyp[b, , ] Wishart pieces: OmegaP[5,5], nuP, OmegaB[n_blocks,n_blocks], nuB measurement: smpl.t, nsmpl, prec.logy.hyp","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/write_model_ch2_kron.html","id":"ref-usage","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Usage","title":"Write the Chapter 2 Kronecker JAGS model — write_model_ch2_kron","text":"","code":"write_model_ch2_kron(path = \"model_ch2_kron.jags\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/write_model_ch2_kron.html","id":"arguments","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Arguments","title":"Write the Chapter 2 Kronecker JAGS model — write_model_ch2_kron","text":"path File path write (default \"model_ch2_kron.jags\").","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/write_model_ch2_kron.html","id":"value","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Value","title":"Write the Chapter 2 Kronecker JAGS model — write_model_ch2_kron","text":"Invisibly returns path.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/write_model_ch2_kron.html","id":"author","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Author","title":"Write the Chapter 2 Kronecker JAGS model — write_model_ch2_kron","text":"Kwan Ho Lee","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr133/reference/write_model_ch2_kron.html","id":"ref-examples","dir":"Preview > Pr133 > Reference","previous_headings":"","what":"Examples","title":"Write the Chapter 2 Kronecker JAGS model — write_model_ch2_kron","text":"","code":"# Write the model to a temp file and confirm it exists p <- write_model_ch2_kron(file.path(tempdir(), \"model_ch2_kron.jags\")) print(file.exists(p)) #> [1] TRUE"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/CONTRIBUTING.html","id":null,"dir":"Preview > Pr40","previous_headings":"","what":"Contributing to serocalculator","title":"Contributing to serocalculator","text":"outlines propose change serocalculator. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr40","previous_headings":"","what":"Fixing typos","title":"Contributing to serocalculator","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr40","previous_headings":"","what":"Bigger changes","title":"Contributing to serocalculator","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr40","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to serocalculator","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serocalculator\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/CONTRIBUTING.html","id":"code-style","dir":"Preview > Pr40","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to serocalculator","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr40","previous_headings":"","what":"Code of Conduct","title":"Contributing to serocalculator","text":"Please note serocalculator project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/LICENSE.html","id":null,"dir":"Preview > Pr40","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/articles/index.html","id":null,"dir":"Preview > Pr40 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"dobson","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/authors.html","id":null,"dir":"Preview > Pr40","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/authors.html","id":"citation","dir":"Preview > Pr40","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9015, https://ucd-serg.github.io/serodynamics/, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9015, https://ucd-serg.github.io/serodynamics/},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/index.html","id":"serodynamics","dir":"Preview > Pr40","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/index.html","id":"installation","dir":"Preview > Pr40","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr40 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/news/index.html","id":"new-features-development-version","dir":"Preview > Pr40 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr40 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr40 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/as_case_data.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/as_case_data.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"index_id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    index_id visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>        <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1                1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1                1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1                1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1                1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1                1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1                2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1                2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1                2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1                2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1                2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14) |>   autoplot(alpha = .5)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/index.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"as_case_data() Convert data case_data autoplot(<case_data>) Plot case data initsfunction() JAGS chain initialization function load_data() load format data postprocess_jags_output() Postprocess JAGS output prep_data() prepare data JAGs prep_priors() Prepare priors run_mod() Run Jags Model sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/initsfunction.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/initsfunction.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/load_data.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/load_data.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/load_data.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- fs::path_package(\"serodynamics\", \"extdata/model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Sat Feb 15 01:59:29 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_data.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(dataframe)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_data.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ...","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_data.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_priors.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Prepare priors","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer: many antigen-isotypes modeled","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_priors.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"list elements: \"n_params\": many parameters?? \"mu.hyp\": ?? \"prec.hyp\": ?? \"omega\" : ?? \"wishdf\": Wishart distribution degrees freedom \"prec.logy.hyp\": array hyper-parameters precision (inverse variance) biomarkers, log-scale","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/reexports.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/run_mod.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable mcmc inputs runjags::run.jags() mcmc bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod,   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/run_mod.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number mcmc chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains niter integer specifying number iterations. strat string specifying stratification variable, entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/run_mod.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"jags.post list() object multiple jags.post list() stratified. Returned list() class runjags::runjags base::data.frame() titled curve_params contains posterior distribution exported following attributes: iteration = number sampling iterations. chain = number mcmc chains run; 1 4. indexid = \"newperson\", indicating posterior distribution. antigen_iso = antibody/antigen type combination evaluated alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration stratified variable = variable jags stratified list attributes summarize jags inputs, including: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/run_mod.html","id":"author","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = fs::path_package(\"serodynamics\", \"extdata/model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Sat Feb 15 01:59:41 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Sat Feb 15 02:00:26 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: First Last first.last@example.com (ORCID)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_case_data.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_case_data.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    index_id visit_num timeindays  iter antigen_iso    y0     y1    t1     alpha #>  * <chr>        <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>     <dbl> #>  1 1                1          0    83 HlyE_IgA    1.33   50.8   2.60 0.00268   #>  2 1                1          0    83 HlyE_IgG    3.49  265.    6.08 0.00153   #>  3 1                1          0    83 LPS_IgA     0.878   4.69  3.06 0.000984  #>  4 1                1          0    83 LPS_IgG     1.64  300.    2.35 0.000728  #>  5 1                1          0    83 Vi_IgG      1.30  264.    8.02 0.0000546 #>  6 1                2          7    83 HlyE_IgA    1.33   50.8   2.60 0.00268   #>  7 1                2          7    83 HlyE_IgG    3.49  265.    6.08 0.00153   #>  8 1                2          7    83 LPS_IgA     0.878   4.69  3.06 0.000984  #>  9 1                2          7    83 LPS_IgG     1.64  300.    2.35 0.000728  #> 10 1                2          7    83 Vi_IgG      1.30  264.    8.02 0.0000546 #> # ℹ 3,010 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr40/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr40 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 1 5 4 3 2 2 2 2 3 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/CONTRIBUTING.html","id":null,"dir":"Preview > Pr50","previous_headings":"","what":"Contributing to serocalculator","title":"Contributing to serocalculator","text":"outlines propose change serocalculator. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr50","previous_headings":"","what":"Fixing typos","title":"Contributing to serocalculator","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr50","previous_headings":"","what":"Bigger changes","title":"Contributing to serocalculator","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr50","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to serocalculator","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serocalculator\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/CONTRIBUTING.html","id":"code-style","dir":"Preview > Pr50","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to serocalculator","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr50","previous_headings":"","what":"Code of Conduct","title":"Contributing to serocalculator","text":"Please note serocalculator project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/LICENSE.html","id":null,"dir":"Preview > Pr50","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/articles/index.html","id":null,"dir":"Preview > Pr50 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"dobson","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/authors.html","id":null,"dir":"Preview > Pr50","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/authors.html","id":"citation","dir":"Preview > Pr50","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9016, https://ucd-serg.github.io/serodynamics/, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9016, https://ucd-serg.github.io/serodynamics/},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/index.html","id":"serodynamics","dir":"Preview > Pr50","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/index.html","id":"installation","dir":"Preview > Pr50","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr50 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/news/index.html","id":"new-features-development-version","dir":"Preview > Pr50 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr50 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr50 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/as_case_data.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/as_case_data.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/index.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"as_case_data() Convert data case_data autoplot(<case_data>) Plot case data initsfunction() JAGS chain initialization function load_data() load format data postprocess_jags_output() Postprocess JAGS output prep_data() prepare data JAGs prep_priors() Prepare priors run_mod() Run Jags Model serodynamics_example() Get path example file sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/initsfunction.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/initsfunction.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/load_data.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/load_data.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/load_data.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Thu Feb 20 00:12:38 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_data.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_data.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_data.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_priors.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Prepare priors","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer: many antigen-isotypes modeled","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_priors.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"list elements: \"n_params\": many parameters?? \"mu.hyp\": ?? \"prec.hyp\": ?? \"omega\" : ?? \"wishdf\": Wishart distribution degrees freedom \"prec.logy.hyp\": array hyper-parameters precision (inverse variance) biomarkers, log-scale","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/reexports.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/run_mod.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable mcmc inputs runjags::run.jags() mcmc bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod,   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/run_mod.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number mcmc chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains niter integer specifying number iterations. strat string specifying stratification variable, entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/run_mod.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"jags.post list() object multiple jags.post list() stratified. Returned list() class runjags::runjags base::data.frame() titled curve_params contains posterior distribution exported following attributes: iteration = number sampling iterations. chain = number mcmc chains run; 1 4. indexid = \"newperson\", indicating posterior distribution. antigen_iso = antibody/antigen type combination evaluated alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration stratified variable = variable jags stratified list attributes summarize jags inputs, including: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/run_mod.html","id":"author","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Thu Feb 20 00:12:45 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Thu Feb 20 00:13:30 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: First Last first.last@example.com (ORCID)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_case_data.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_case_data.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr50/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr50 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 1 5 4 3 2 2 2 2 3 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/CONTRIBUTING.html","id":null,"dir":"Preview > Pr71","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr71","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr71","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr71","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr71","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr71","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/LICENSE.html","id":null,"dir":"Preview > Pr71","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/articles/index.html","id":null,"dir":"Preview > Pr71 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"dobson","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/authors.html","id":null,"dir":"Preview > Pr71","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/authors.html","id":"citation","dir":"Preview > Pr71","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9029, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9029},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/index.html","id":"serodynamics","dir":"Preview > Pr71","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/index.html","id":"installation","dir":"Preview > Pr71","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr71 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/news/index.html","id":"new-features-development-version","dir":"Preview > Pr71 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Updating density diagnostic function (#71) jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr71 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr71 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/news/index.html","id":"serodynamics-000","dir":"Preview > Pr71 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/as_case_data.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/as_case_data.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/index.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/index.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/index.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/index.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/index.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/index.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/index.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/index.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/index.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/initsfunction.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/initsfunction.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/load_data.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/load_data.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/load_data.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/nepal_sees.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/nepal_sees.html","id":"source","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/nepal_sees_jags_output.html","id":"nepal-sees-jags-output","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"list consisting following named elements: curve_params data.frame titled curve_params contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\") attributes list attributes summarize jags inputs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"list ggplot2::ggplot objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/post_summ.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/post_summ.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/post_summ.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/post_summ.html","id":"author","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter_sub Stratification    Mean      SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>         <chr>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha         paratyphi      2.29e-3 3.75e-3 1.27e-3 1.11e-4 5.79e-4 #>  2 HlyE_IgA alpha         typhi          3.78e-3 6.16e-3 2.17e-3 3.08e-4 1.12e-3 #>  3 HlyE_IgA shape         paratyphi      1.66e+0 2.74e-1 1.61e+0 1.29e+0 1.47e+0 #>  4 HlyE_IgA shape         typhi          1.65e+0 3.68e-1 1.57e+0 1.23e+0 1.42e+0 #>  5 HlyE_IgA t1            paratyphi      3.85e+0 1.34e+0 3.70e+0 1.86e+0 2.92e+0 #>  6 HlyE_IgA t1            typhi          7.62e+0 4.83e+0 6.67e+0 2.26e+0 4.61e+0 #>  7 HlyE_IgA y0            paratyphi      2.55e+0 9.07e-1 2.41e+0 1.23e+0 1.87e+0 #>  8 HlyE_IgA y0            typhi          2.90e+0 2.92e+0 2.25e+0 5.76e-1 1.52e+0 #>  9 HlyE_IgA y1            paratyphi      1.02e+3 6.84e+3 1.54e+2 8.85e+0 5.45e+1 #> 10 HlyE_IgA y1            typhi          1.73e+3 7.50e+3 2.69e+2 8.41e+0 9.10e+1 #> 11 HlyE_IgG alpha         paratyphi      2.57e-3 2.60e-3 1.74e-3 2.29e-4 8.76e-4 #> 12 HlyE_IgG alpha         typhi          1.75e-3 1.69e-3 1.22e-3 2.38e-4 7.06e-4 #> 13 HlyE_IgG shape         paratyphi      1.36e+0 2.03e-1 1.32e+0 1.10e+0 1.19e+0 #> 14 HlyE_IgG shape         typhi          1.52e+0 3.88e-1 1.42e+0 1.11e+0 1.27e+0 #> 15 HlyE_IgG t1            paratyphi      4.78e+0 2.09e+0 4.37e+0 1.93e+0 3.30e+0 #> 16 HlyE_IgG t1            typhi          9.76e+0 8.02e+0 7.67e+0 1.87e+0 4.59e+0 #> 17 HlyE_IgG y0            paratyphi      1.72e+0 7.66e-1 1.54e+0 7.09e-1 1.19e+0 #> 18 HlyE_IgG y0            typhi          2.29e+0 1.94e+0 1.82e+0 3.80e-1 1.09e+0 #> 19 HlyE_IgG y1            paratyphi      8.33e+2 2.13e+3 2.88e+2 1.82e+1 1.09e+2 #> 20 HlyE_IgG y1            typhi          4.02e+2 6.91e+2 2.21e+2 3.02e+1 1.07e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Apr 29 20:16:44 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_data.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_data.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_data.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_priors.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Prepare priors","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer: many antigen-isotypes modeled","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_priors.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"list elements: \"n_params\": many parameters?? \"mu.hyp\": ?? \"prec.hyp\": ?? \"omega\" : ?? \"wishdf\": Wishart distribution degrees freedom \"prec.logy.hyp\": array hyper-parameters precision (inverse variance) biomarkers, log-scale","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/reexports.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/run_mod.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable mcmc inputs runjags::run.jags() mcmc bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod,   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   include_subs = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/run_mod.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number mcmc chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. include_subs logical value specifying whether posterior distributions included subjects. value FALSE include predictive distribution.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/run_mod.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"list containing following elements: \"jags.post\": list containing one runjags::runjags objects (one per stratum). base::data.frame() titled curve_params contains posterior distribution exported following attributes: iteration = number sampling iterations chain = number mcmc chains run; 1 4 indexid = \"newperson\", indicating posterior distribution antigen_iso = antibody/antigen type combination evaluated alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration stratified variable = variable used stratify jags model list attributes summarize jags inputs, including: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/run_mod.html","id":"author","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Apr 29 20:16:56 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Apr 29 20:17:46 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_case_data.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_case_data.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr71/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr71 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 1 5 4 3 2 2 2 2 3 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/CONTRIBUTING.html","id":null,"dir":"Preview > Pr73","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr73","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr73","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr73","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr73","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr73","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/LICENSE.html","id":null,"dir":"Preview > Pr73","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/articles/index.html","id":null,"dir":"Preview > Pr73 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"dobson","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/authors.html","id":null,"dir":"Preview > Pr73","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/authors.html","id":"citation","dir":"Preview > Pr73","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9029, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9029},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/index.html","id":"serodynamics","dir":"Preview > Pr73","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/index.html","id":"installation","dir":"Preview > Pr73","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr73 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/news/index.html","id":"new-features-development-version","dir":"Preview > Pr73 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Made “newperson” optional prep_data() (#73) jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr73 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr73 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/news/index.html","id":"serodynamics-000","dir":"Preview > Pr73 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/as_case_data.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/as_case_data.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/index.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/index.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/index.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/index.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/index.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/index.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/index.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/index.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/index.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/initsfunction.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/initsfunction.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/load_data.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/load_data.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/load_data.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/nepal_sees.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/nepal_sees.html","id":"source","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/nepal_sees_jags_output.html","id":"nepal-sees-jags-output","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"list consisting following named elements: curve_params data.frame titled curve_params contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\") attributes list attributes summarize jags inputs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/post_summ.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/post_summ.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/post_summ.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/post_summ.html","id":"author","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter_sub Stratification    Mean      SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>         <chr>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha         paratyphi      2.29e-3 3.75e-3 1.27e-3 1.11e-4 5.79e-4 #>  2 HlyE_IgA alpha         typhi          3.78e-3 6.16e-3 2.17e-3 3.08e-4 1.12e-3 #>  3 HlyE_IgA shape         paratyphi      1.66e+0 2.74e-1 1.61e+0 1.29e+0 1.47e+0 #>  4 HlyE_IgA shape         typhi          1.65e+0 3.68e-1 1.57e+0 1.23e+0 1.42e+0 #>  5 HlyE_IgA t1            paratyphi      3.85e+0 1.34e+0 3.70e+0 1.86e+0 2.92e+0 #>  6 HlyE_IgA t1            typhi          7.62e+0 4.83e+0 6.67e+0 2.26e+0 4.61e+0 #>  7 HlyE_IgA y0            paratyphi      2.55e+0 9.07e-1 2.41e+0 1.23e+0 1.87e+0 #>  8 HlyE_IgA y0            typhi          2.90e+0 2.92e+0 2.25e+0 5.76e-1 1.52e+0 #>  9 HlyE_IgA y1            paratyphi      1.02e+3 6.84e+3 1.54e+2 8.85e+0 5.45e+1 #> 10 HlyE_IgA y1            typhi          1.73e+3 7.50e+3 2.69e+2 8.41e+0 9.10e+1 #> 11 HlyE_IgG alpha         paratyphi      2.57e-3 2.60e-3 1.74e-3 2.29e-4 8.76e-4 #> 12 HlyE_IgG alpha         typhi          1.75e-3 1.69e-3 1.22e-3 2.38e-4 7.06e-4 #> 13 HlyE_IgG shape         paratyphi      1.36e+0 2.03e-1 1.32e+0 1.10e+0 1.19e+0 #> 14 HlyE_IgG shape         typhi          1.52e+0 3.88e-1 1.42e+0 1.11e+0 1.27e+0 #> 15 HlyE_IgG t1            paratyphi      4.78e+0 2.09e+0 4.37e+0 1.93e+0 3.30e+0 #> 16 HlyE_IgG t1            typhi          9.76e+0 8.02e+0 7.67e+0 1.87e+0 4.59e+0 #> 17 HlyE_IgG y0            paratyphi      1.72e+0 7.66e-1 1.54e+0 7.09e-1 1.19e+0 #> 18 HlyE_IgG y0            typhi          2.29e+0 1.94e+0 1.82e+0 3.80e-1 1.09e+0 #> 19 HlyE_IgG y1            paratyphi      8.33e+2 2.13e+3 2.88e+2 1.82e+1 1.09e+2 #> 20 HlyE_IgG y1            typhi          4.02e+2 6.91e+2 2.21e+2 3.02e+1 1.07e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Apr 29 19:23:02 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_data.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE,   add_newperson = TRUE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_data.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging add_newperson whether add extra record missing data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_data.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_priors.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Prepare priors","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer: many antigen-isotypes modeled","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_priors.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"list elements: \"n_params\": many parameters?? \"mu.hyp\": ?? \"prec.hyp\": ?? \"omega\" : ?? \"wishdf\": Wishart distribution degrees freedom \"prec.logy.hyp\": array hyper-parameters precision (inverse variance) biomarkers, log-scale","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/reexports.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/run_mod.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable mcmc inputs runjags::run.jags() mcmc bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod,   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   include_subs = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/run_mod.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number mcmc chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. include_subs logical value specifying whether posterior distributions included subjects. value FALSE include predictive distribution.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/run_mod.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"list containing following elements: \"jags.post\": list containing one runjags::runjags objects (one per stratum). base::data.frame() titled curve_params contains posterior distribution exported following attributes: iteration = number sampling iterations chain = number mcmc chains run; 1 4 indexid = \"newperson\", indicating posterior distribution antigen_iso = antibody/antigen type combination evaluated alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration stratified variable = variable used stratify jags model list attributes summarize jags inputs, including: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/run_mod.html","id":"author","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Apr 29 19:23:10 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Apr 29 19:23:57 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_case_data.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_case_data.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr73/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr73 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 1 5 4 3 2 2 2 2 3 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/CONTRIBUTING.html","id":null,"dir":"Preview > Pr88","previous_headings":"","what":"Contributing to this project","title":"Contributing to this project","text":"document outlines propose change project. detailed discussion contributing packages, please see tidyverse’s development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr88","previous_headings":"","what":"Fixing typos","title":"Contributing to this project","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr88","previous_headings":"","what":"Bigger changes","title":"Contributing to this project","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr88","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to this project","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serodynamics\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. changes conform tidyverse code style guidelines design principles described . user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/CONTRIBUTING.html","id":"sec-code-style","dir":"Preview > Pr88","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to this project","text":"New code follow tidyverse style guide design principles. can use lintr package automatically check style design issues styler package automatically correct issues. Please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr88","previous_headings":"","what":"Code of Conduct","title":"Contributing to this project","text":"Please note serodynamics project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/LICENSE.html","id":null,"dir":"Preview > Pr88","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"overview","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Overview","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Incorporates feedback Dr. Morrison, Dr. Aiemjoy, lab discussion Focus exclusively (Teunis Eijkeren 2016) two-phase within-host model Clarifies full hierarchical Bayesian modeling structure Explicitly distinguishes priors, hyperpriors, transformations Reorders: Start observation model → build upward","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"big-picture-what-are-we-modeling","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Big Picture: What Are We Modeling?","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"modeling antibody levels change time response infection, using multiple individuals multiple biomarkers (antigen-isotype combinations, (j = 1, 2, …\\dots, 10)). Goals: Understand average pattern biomarker Allow individual-level variation Share information across individuals improve inference motivates using hierarchical Bayesian model.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"step-1-observation-model-data-level","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 1: Observation Model (Data Level)","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Observed (log-transformed) antibody levels: log(yobs,ij)∼𝒩(μlogy,ij,τj−1)(1) \\log(y_{\\text{obs},ij}) \\sim \\mathcal{N}(\\mu_{\\log y,ij}, \\tau_j^{-1})  \\qquad(1) : yobs,ijy_{\\text{obs},ij}: Observed antibody level subject ii biomarker jj μlogy,ij\\mu_{\\log y,ij} expected log antibody level, computed two-phase model using subject-level parameters θij\\theta_{ij}. θij\\theta_{ij}: Subject-level latent parameters (e.g., y0,α,ρy_0, \\alpha, \\rho) used define predicted antibody curve τj\\tau_j: Measurement precision (inverse variance) specific biomarker jj expression corresponds line 54 model.jags: Measurement precision prior: τj∼Gamma(aj,bj)(2) \\tau_j \\sim \\text{Gamma}(a_j, b_j)  \\qquad(2) : τj\\tau_j: Precision (inverse variance) measurement noise biomarker jj (aj,bj)(a_j, b_j): Shape rate hyperparameters Gamma prior precision, control expected value variability expression corresponds line 75 model.jags:","code":"logy[subj,obs,cur_antigen_iso] ~ dnorm(mu.logy[subj,obs,cur_antigen_iso], prec.logy[cur_antigen_iso]) prec.logy[cur_antigen_iso] ~ dgamma(prec.logy.hyp[cur_antigen_iso,1], prec.logy.hyp[cur_antigen_iso,2])"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"parameter-summary","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Parameter Summary","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Table 1: Parameter summary antibody kinetics model. Note: first 6 typically estimated. y1y_1 derived ODE solution t1t_1.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"step-2-within-host-ode-system-teunis2016","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 2: Within-Host ODE System (Teunis and Eijkeren 2016)","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"dydt={μyy(t),t≤t1−αy(t)ρ,t>t1anddbdt=μbb(t)−γy(t)(3) \\frac{dy}{dt} = \\begin{cases} \\mu_y y(t), & t \\leq t_1 \\\\ - \\alpha y(t)^\\rho, & t > t_1 \\end{cases} \\quad \\text{} \\quad \\frac{db}{dt} = \\mu_b b(t) - \\gamma y(t)  \\qquad(3) Initial conditions: y(0)=y0y(0) = y_0, b(0)=b0b(0) = b_0 Transition t1t_1: b(t1)=0b(t_1) = 0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"step-3-closed-form-solutions","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 3: Closed-Form Solutions","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Antibody concentration: t≤t1t \\leq t_1: y(t)=y0eμyt(4) y(t) = y_0 e^{\\mu_y t}  \\qquad(4) tt1t \\> t_1: y(t)=y1(1+(ρ−1)αy1ρ−1(t−t1))−1ρ−1(5) y(t) = y_1 \\left(1 + (\\rho-1)\\alpha y_1^{\\rho-1}(t-t_1)\\right)^{-\\frac{1}{\\rho-1}}  \\qquad(5) expression corresponds lines 18-50 model.jags: Pathogen load: t≤t1t \\leq t_1: b(t)=b0eμbt−γy0μy−μb(eμyt−eμbt)(6) b(t) = b_0 e^{\\mu_b t} - \\frac{\\gamma y_0}{\\mu_y - \\mu_b} \\left( e^{\\mu_y t} - e^{\\mu_b t} \\right)  \\qquad(6) tt1t \\> t_1: b(t)=0 b(t) = 0","code":"mu.logy[subj, obs, cur_antigen_iso] <- ifelse(                  # `step(x)` returns 1 if x >= 0;         # here we are determining which phase of infection we are in;          # active or recovery;         # `smpl.t` is the time when the blood sample was collected,          # relative to estimated start of infection;         # so we are determining whether the current observation is after `t1`          # the time when the active infection ended.         step(t1[subj,cur_antigen_iso] - smpl.t[subj,obs]),                   ## active infection period:         # this is equation 15, case t <= t_1, but on a logarithmic scale         log(y0[subj,cur_antigen_iso]) + (beta[subj,cur_antigen_iso] * smpl.t[subj,obs]),                  ## recovery period:         # this is equation 15, case t > t_1         1 / (1 - shape[subj,cur_antigen_iso]) *            log(               # this is `log{y_1^(1-r)}`;                # the exponent cancels out with the factor outside the log               y1[subj, cur_antigen_iso]^(1 - shape[subj, cur_antigen_iso]) -                                   # this is (1-r); not sure why switched from paper                 (1 - shape[subj,cur_antigen_iso]) *                                    # (there's no missing y1^(r-1) term here; the math checks out)                                    # alpha is `nu` in Teunis 2016; the \"decay rate\" parameter                 alpha[subj,cur_antigen_iso] *                                    # this is `t - t_1`                  (smpl.t[subj,obs] - t1[subj,cur_antigen_iso])))"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"step-4-derived-quantities","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 4: Derived Quantities","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Clearance Time t1t_1: t1=1μy−μblog(1+(μy−μb)b0γy0)(7) t_1 = \\frac{1}{\\mu_y - \\mu_b} \\log\\left(1 + \\frac{(\\mu_y - \\mu_b) b_0}{\\gamma y_0}\\right)  \\qquad(7) expression indirectly represented lines 8-12 model.jags: Peak Antibody Level y1y_1: y1=y0eμyt1(8) y_1 = y_0 e^{\\mu_y t_1}  \\qquad(8) expression corresponds line 59 model.jags: Important: t1t_1 y1y_1 derived, fit parameters.","code":"beta[subj, cur_antigen_iso] <-         log(          y1[subj,cur_antigen_iso] / y0[subj,cur_antigen_iso]          ) /         t1[subj,cur_antigen_iso] y1[subj,cur_antigen_iso]    <- y0[subj,cur_antigen_iso] + exp(par[subj,cur_antigen_iso,2]) # par[,,2] must be log(y1-y0)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"full-parameter-model-7-parameters","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Full Parameter Model (7 Parameters)","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Subject-level parameters subjectii biomarker jj: θij∼𝒩(μj,Σj),θij=[y0,ijb0,ijμb,ijμy,ijγijαijρij](9) \\theta_{ij} \\sim \\mathcal{N}(\\mu_j,\\, \\Sigma_j), \\quad \\theta_{ij} = \\begin{bmatrix} y_{0,ij} \\\\ b_{0,ij} \\\\ \\mu_{b,ij} \\\\ \\mu_{y,ij} \\\\ \\gamma_{ij} \\\\ \\alpha_{ij} \\\\ \\rho_{ij} \\end{bmatrix}  \\qquad(9) 7 parameters represent full biological model (antibody + pathogen dynamics)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"from-full-7-parameters-to-5-latent-parameters","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"From Full 7 Parameters to 5 Latent Parameters","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Although model estimates 7 parameters, modeling antibody kinetics y(t)y(t), focus 5-parameter subset: y0,t1(derived),y1(derived),α,ρy_0,\\ \\ t_1 (\\text{derived}),\\ \\  y_1 (\\text{derived}),\\ \\  \\alpha,\\ \\  \\rho 5 parameters log-transformed latent parameters θ_ij\\theta\\_{ij} used modeling.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"core-parameters-used-for-curve-drawing","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Core Parameters Used for Curve Drawing","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Although full model estimates 7 parameters, 5 key parameters required draw antibody curves: y0y_0: initial antibody level t1t_1: time peak antibody response (derived) y1y_1: peak antibody level (derived) α\\alpha: decay rate ρ\\rho: shape decay Note: t1t_1 y1y_1 derived full model - 5 sufficient prediction plotting","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"step-5-subject-level-parameters-latent-version","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 5: Subject-Level Parameters (Latent Version)","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"subject ii biomarker jj latent parameters: θij=[log(y0,ij)log(y1,ij−y0,ij)log(t1,ij)log(αij)log(ρij−1)](10) \\theta_{ij} = \\begin{bmatrix} \\log(y_{0,ij}) \\\\ \\log(y_{1,ij} - y_{0,ij}) \\\\ \\log(t_{1,ij}) \\\\ \\log(\\alpha_{ij}) \\\\ \\log(\\rho_{ij} - 1) \\end{bmatrix}  \\qquad(10) Distribution: θij∼𝒩(μj,Σj) \\theta_{ij} \\sim \\mathcal{N}(\\mu_j, \\Sigma_j) expression reflects prior distribution specified line 66 model.jags:","code":"par[subj, cur_antigen_iso, 1:n_params] ~ dmnorm(mu.par[cur_antigen_iso,], prec.par[cur_antigen_iso,,])"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"step-6-parameter-transformations-log-scale-priors","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 6: Parameter Transformations (log scale priors)","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"JAGS implements latent parameters (par) : Table 2: Log-Scale Transformations Antibody Model Parameters JAGS. table corresponds lines 58-62 model.jags: priors thus applied log scale (log-minus-one ρ\\rho).","code":"y0[subj,cur_antigen_iso]    <- exp(par[subj,cur_antigen_iso,1])    y1[subj,cur_antigen_iso]    <- y0[subj,cur_antigen_iso] + exp(par[subj,cur_antigen_iso,2]) # par[,,2] must be log(y1-y0)    t1[subj,cur_antigen_iso]    <- exp(par[subj,cur_antigen_iso,3])    alpha[subj,cur_antigen_iso] <- exp(par[subj,cur_antigen_iso,4]) # `nu` in the paper    shape[subj,cur_antigen_iso] <- exp(par[subj,cur_antigen_iso,5]) + 1 # `r` in the paper"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"step-7-population-level-parameters-priors","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 7: Population-Level Parameters (Priors)","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"biomarker-specific mean vector μj\\mu_j hyperprior : μj∼𝒩(μhyp,j,Ωhyp,j)(11) \\mu_j \\sim \\mathcal{N}(\\mu_{\\text{hyp},j}, \\Omega_{\\text{hyp},j})  \\qquad(11) : μhyp,j\\mu_{\\text{hyp},j} : prior mean population-level parameters Ωhyp,j\\Omega_{\\text{hyp},j} : prior covariance encoding uncertainty μj\\mu_j (e.g., 100⋅I7100 \\cdot I_7 weakly informative prior) expression corresponds line 73 model.jags: Clarification: μhyp,j\\mu_{\\text{hyp},j} defines center distribution, single point guess. Bayesian modeling, priors hyperpriors distributions unknown quantities, capturing full uncertainty.","code":"mu.par[cur_antigen_iso, 1:n_params] ~ dmnorm(mu.hyp[cur_antigen_iso,], prec.hyp[cur_antigen_iso,,])"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"step-8-prior-on-covariance-matrices","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 8: Prior on Covariance Matrices","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"also don’t know much individual parameters vary. assign Wishart prior inverse covariance matrix: Σj−1∼𝒲(Ωj,νj)(12) \\Sigma_j^{-1} \\sim \\mathcal{W}(\\Omega_j, \\nu_j)  \\qquad(12) Ωj\\Omega_j : prior scale matrix (small variance across parameters, often 0.1⋅I70.1 \\cdot I_7) νj\\nu_j : degrees freedom expression corresponds line 74 model.jags: Higher νj\\nu_j→\\rightarrow informative prior (stronger prior). Lower νj\\nu_j→\\rightarrow weakly informative (broader prior weaker prior). tells model much expect individuals vary average biomarker jj.","code":"prec.par[cur_antigen_iso, 1:n_params, 1:n_params] ~ dwish(omega[cur_antigen_iso,,], wishdf[cur_antigen_iso])"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"putting-it-all-together","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Putting It All Together","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"model built hierarchically across five conceptual levels: Observed data: noisy log antibody concentrations serum samples Latent individual parameters: hidden antibody dynamics θij\\theta_{ij} subject-biomarker pair Population-level means: average antibody parameters biomarker Hyperpriors means: belief likely range biomarker-specific population means Priors variability: belief much individual parameters vary around population mean structure allows us account uncertainty every level, borrowing strength across subjects biomarkers.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"summary-of-the-hierarchy","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Summary of the Hierarchy","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Top Level: μj∼𝒩(μhyp,j,Ωhyp,j)\\mu_j \\sim \\mathcal{N}(\\mu_{\\text{hyp},j}, \\Omega_{\\text{hyp},j}) Middle Level: θij∼𝒩(μj,Σj)\\theta_{ij} \\sim \\mathcal{N}(\\mu_j, \\Sigma_j) Bottom Level: log(yobs,ij)∼𝒩(μlogy,ij,τj−1)\\log(y_{\\text{obs},ij}) \\sim \\mathcal{N}(\\mu_{\\log y,ij}, \\tau_j^{-1}) : μlogy,ij\\mu_{\\log y,ij} expected log antibody level, computed two-phase model using subject-level parameters θij\\theta_{ij}. Predictions use θij\\theta_{ij} compute μlogy,ij\\mu_{\\log y,ij}, compared observed log antibody data.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"clarification-how-bottom-level-depends-on-middle-level","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Clarification: How Bottom Level Depends on Middle Level","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"know following facts: θij\\theta_{ij} subject-level latent parameters (like y0,b0,μ_b,μ_y,γ,α,ρy_0, b_0, \\mu\\_b, \\mu\\_y, \\gamma, \\alpha, \\rho). θij\\theta_{ij}, calculate expected log antibody level μlogy,ij\\mu_{\\log y,ij} using ODE-based two-phase model. observed log-antibody log(yobs,ij)\\log(y_{\\text{obs},ij}) modeled noisy version μlogy,ij\\mu_{\\log y,ij}. τj\\tau_j precision (measurement noise precision biomarker jj). Thus, Bottom Level, model: log(yobs,ij)∼𝒩(μlogy,ij,τj−1) \\log(y_{\\text{obs},ij}) \\sim \\mathcal{N}(\\mu_{\\log y,ij}, \\tau_j^{-1}) : mean μlogy,ij\\mu_{\\log y,ij} — derived ODE solution using θij\\theta_{ij}. variance τj−1\\tau_j^{-1} — shared across individuals given biomarker. Summary: Observations depend indirectly latent parameters θij\\theta_{ij} via predicted log antibody levels μlogy,ij\\mu_{\\log y,ij}.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Antibody_Kinetics.html","id":"model-comparison-teunis2016-vs--our-presentation","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Model Comparison (Teunis and Eijkeren 2016) vs. Our Presentation","title":"Hierarchical Bayesian Modeling of Antibody Kinetics: Extensions and Refinements","text":"Table 3: Comparison Teunis (2016) model presentation’s model assumptions.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"overview","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Overview","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Incorporates feedback Dr. Morrison Dr.Aiemjoy Focus exclusively (Teunis Eijkeren 2016) model Clarifies model dynamics: growth, clearance, decay Uses updated parameter notation: μy\\mu_y, μb\\mu_b, γ\\gamma, α\\alpha, ρ\\rho Assumes block-diagonal covariance structure across biomarkers","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"within-host-ode-system-teunis2016","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Within-Host ODE System (Teunis and Eijkeren 2016)","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Two-phase within-host antibody kinetics: dydt={μyy(t),t≤t1−αy(t)ρ,t>t1with dbdt=μbb(t)−γy(t)(1) \\frac{dy}{dt} = \\begin{cases} \\mu_y y(t), & t \\le t_1 \\\\ - \\alpha y(t)^\\rho, & t > t_1 \\end{cases} \\quad \\text{} \\frac{db}{dt} = \\mu_b b(t) - \\gamma y(t)  \\qquad(1) Initial conditions: y(0)=y0y(0) = y_0, b(0)=b0b(0) = b_0Key transition: t1t_1 time b(t1)=0b(t_1) = 0Derived quantity: y1=y(t1)y_1 = y(t_1)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"closed-form-solutions","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Closed-Form Solutions","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Antibody concentration y(t)y(t) t≤t1t \\le t_1:y(t)=y0eμyt y(t) = y_0 e^{\\mu_y t} t>t1t > t_1:y(t)=y1(1+(ρ−1)αy1ρ−1(t−t1))−1ρ−1 y(t) = y_1 \\left(1 + (\\rho - 1)\\alpha y_1^{\\rho - 1}(t - t_1)\\right)^{- \\frac{1}{\\rho - 1}} Pathogen load b(t)b(t) t≤t1t \\le t_1:b(t)=b0eμbt−γy0μy−μb(eμyt−eμbt) b(t) = b_0 e^{\\mu_b t} - \\frac{\\gamma y_0}{\\mu_y - \\mu_b} \\left(e^{\\mu_y t} - e^{\\mu_b t} \\right) t>t1t > t_1:b(t)=0 b(t) = 0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"time-of-peak-response","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Time of Peak Response","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Peak Time t1t_1 t1=1μy−μblog(1+(μy−μb)b0γy0)(2) t_1 = \\frac{1}{\\mu_y - \\mu_b} \\log \\left( 1 + \\frac{(\\mu_y - \\mu_b) b_0}{\\gamma y_0} \\right)  \\qquad(2) Peak Antibody Level y1y_1 y1=y0eμyt1(3) y_1 = y_0 e^{\\mu_y t_1}  \\qquad(3)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"parameter-summary","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Parameter Summary","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Table 1: Parameter summary antibody kinetics model. Note: first 6 typically estimated. y1y_1 derived ODE solution t1t_1.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"model-comparison-teunis2016-vs-this-presentation","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Model Comparison: (Teunis and Eijkeren 2016) vs This Presentation","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Table 2: Comparison Teunis (2016) model presentation’s model assumptions. Note: (Teunis Eijkeren 2016) uses linear clearance: cy(t)c y(t), bilinear Antibody production driven pathogen b(t)b(t) model simplifies assuming self-expanding antibody dynamics","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"full-parameter-model-7-parameters","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Full Parameter Model (7 Parameters)","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Subject-level parameters: θij∼𝒩(μj,Σj),θij=[y0,ijb0,ijμb,ijμy,ijγijαijρij] \\theta_{ij} \\sim \\mathcal{N}(\\mu_j,\\, \\Sigma_j), \\quad \\theta_{ij} = \\begin{bmatrix} y_{0,ij} \\\\ b_{0,ij} \\\\ \\mu_{b,ij} \\\\ \\mu_{y,ij} \\\\ \\gamma_{ij} \\\\ \\alpha_{ij} \\\\ \\rho_{ij} \\end{bmatrix} Hyperparameters – Means: μj\\mu_j: population-level mean vector biomarker jj Prior μj\\mu_j: μj∼𝒩(μhyp,j,Ωhyp,j) \\mu_j \\sim \\mathcal{N}(\\mu_{\\text{hyp},j},\\, \\Omega_{\\text{hyp},j})","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"core-parameters-used-for-curve-drawing","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Core Parameters Used for Curve Drawing","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"presentation, focus 5 key parameters required draw antibody curves: y0y_0: initial antibody level t1t_1: time peak antibody response y1y_1: peak antibody level α\\alpha: decay rate ρ\\rho: shape decay Note: t1t_1 y1y_1 derived full model - 5 sufficient prediction plotting","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"classifying-model-parameters-teunis2016-structure","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Classifying Model Parameters ((Teunis and Eijkeren 2016) Structure)","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Estimated Parameters (7 total): Core model parameters (5): μb\\mu_b, μy\\mu_y, γ\\gamma, α\\alpha, ρ\\rho Initial conditions (2): y0y_0, b0b_0 Derived Quantity (estimated): y1y_1: peak antibody level computed y(t1)y(t_1)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"time-of-pathogen-clearance-t_1","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Time of Pathogen Clearance t1t_1","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Definition: t1t_1 time pathogen cleared, .e., b(t1)=0b(t_1) = 0 Analytic expression: t1=1μy−μblog(1+(μy−μb)b0γy0) t_1 = \\frac{1}{\\mu_y - \\mu_b} \\log\\left(1 + \\frac{(\\mu_y - \\mu_b)b_0}{\\gamma y_0}\\right) Key observations: t1t_1 depends μb\\mu_b, μy\\mu_y, b0b_0, y0y_0, y1=y(t1)y_1 = y(t_1) computed based time point","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"why-its-a-seven-parameter-model","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Why It’s a Seven-Parameter Model","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"5 biological parameters: μb\\mu_b, μy\\mu_y, γ\\gamma, α\\alpha, ρ\\rho 2 initial conditions: y0y_0, b0b_0 often refer 8th quantity: y1y_1 isn’t y1y_1 parameter? Answer: y1y_1 computed value, directly estimated.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"why-y_1-is-not-fit-directly","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Why y1y_1 Is Not Fit Directly","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"y1y_1 antibody level time pathogen cleared: y1=y(t1)b(t1)=0 y_1 = y(t_1) \\quad \\text{} b(t_1) = 0 μy\\mu_y, y0y_0, b0b_0, μb\\mu_b, γ\\gamma via solution ODEs find t1t_1 compute y(t1)y(t_1) words: y1y_1 derived output, fit parameter.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"how-y_1-is-computed","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"How y1y_1 Is Computed","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"y1y_1 computed solving ODE system: dydt=μyy(t),dbdt=μbb(t)−γy(t) \\frac{dy}{dt} = \\mu_y y(t), \\quad \\frac{db}{dt} = \\mu_b b(t) - \\gamma y(t) Evaluate y(t)y(t) t=t1t = t_1 using ODE solution: y1=y(t1;μy,y0,b0,μb,γ) y_1 = y(t_1; \\mu_y, y_0, b_0, \\mu_b, \\gamma)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"recap-what-we-estimate","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Recap: What We Estimate","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Seven model parameters (7-parameter model full dynamics): μb\\mu_b, μy\\mu_y, γ\\gamma, α\\alpha, ρ\\rho (biological process) y0y_0, b0b_0 (initial state) Derived quantity: y1=y(t1)y_1 = y(t_1) — directly estimated, computed 5-parameter subset curve visualization: y0y_0, y1y_1, t1t_1, α\\alpha, ρ\\rho","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"hierarchical-bayesian-structure","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Hierarchical Bayesian Structure","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Individual parameters: θij=[y0,ijb0,ijμb,ijμy,ijγijαijρij]∼𝒩(μj,Σj) \\theta_{ij} = \\begin{bmatrix}   y_{0,ij} \\\\   b_{0,ij} \\\\   \\mu_{b,ij} \\\\   \\mu_{y,ij} \\\\   \\gamma_{ij} \\\\   \\alpha_{ij} \\\\   \\rho_{ij} \\end{bmatrix} \\sim \\mathcal{N}(\\mu_j,\\, \\Sigma_j) Hyperparameters: μj\\mu_j: population-level means (per biomarker jj) Σj\\Sigma_j: 7×77 \\times 7 covariance matrix parameters","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"subject-level-parameters-theta_ij","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Subject-Level Parameters: θij\\theta_{ij}","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"θij∼𝒩(μj,Σj),θij∈ℝ7 \\theta_{ij} \\sim \\mathcal{N}(\\mu_j,\\, \\Sigma_j), \\quad \\theta_{ij} \\\\mathbb{R}^7 : 𝛉ij=[y0,ijb0,ijμb,ijμy,ijγijαijρij],Σj∈ℝ7×7 \\boldsymbol{\\theta}_{ij} = \\begin{bmatrix} y_{0,ij} \\\\ b_{0,ij} \\\\ \\mu_{b,ij} \\\\ \\mu_{y,ij} \\\\ \\gamma_{ij} \\\\ \\alpha_{ij} \\\\ \\rho_{ij} \\end{bmatrix}, \\quad \\Sigma_j \\\\mathbb{R}^{7 \\times 7} subject ii unique 7-parameter vector per biomarker jj, capturing individual-level variation antibody dynamics.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"hyperparameters-priors-on-population-means","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Hyperparameters: Priors on Population Means","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Population-level means: 𝛍j∼𝒩(𝛍hyp,j,Ωhyp,j) \\boldsymbol{\\mu}_j \\sim \\mathcal{N}(\\boldsymbol{\\mu}_{\\mathrm{hyp},j}, \\Omega_{\\mathrm{hyp},j}) Interpretation: 𝛍j\\boldsymbol{\\mu}_j: average parameter vector biomarker jj 𝛍hyp,j\\boldsymbol{\\mu}_{\\mathrm{hyp},j}: prior guess (e.g., vector zeros) Ωhyp,j\\Omega_{\\mathrm{hyp},j}: covariance matrix encoding uncertainty Example: 𝛍hyp,j=0,Ωhyp,j=100⋅I7 \\boldsymbol{\\mu}_{\\mathrm{hyp},j} = 0, \\quad \\Omega_{\\mathrm{hyp},j} = 100 \\cdot I_7","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"hyperparameters-priors-on-covariance","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Hyperparameters: Priors on Covariance","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Covariance across parameters: Σj−1∼𝒲(Ωj,νj) \\Sigma_j^{-1} \\sim \\mathcal{W}(\\Omega_j, \\nu_j) Σj\\Sigma_j: variability/covariance subject-level parameters Ωj\\Omega_j: prior scale matrix νj\\nu_j: degrees freedom Example: Ωj=0.1⋅I7,νj=8 \\Omega_j = 0.1 \\cdot I_7, \\quad \\nu_j = 8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"measurement-error-and-precision-priors","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Measurement Error and Precision Priors","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Observed antibody levels: log(yobs,ij)∼𝒩(log(ypred,ij),τj−1) \\log(y_{\\text{obs},ij}) \\sim \\mathcal{N}(\\log(y_{\\text{pred},ij}), \\tau_j^{-1}) Precision prior: τj∼Gamma(aj,bj) \\tau_j \\sim \\text{Gamma}(a_j, b_j) τj\\tau_j: shared measurement precision biomarker jj Gamma prior allows flexible noise modeling","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"matrix-algebra-computation","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Matrix Algebra Computation","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Let K=7K = 7 (parameters), JJ biomarkers. : Θi=[θi1θi2⋯θiJ]∈ℝK×J \\Theta_i = \\begin{bmatrix} \\theta_{i1} & \\theta_{i2} & \\cdots & \\theta_{iJ} \\end{bmatrix} \\\\mathbb{R}^{K \\times J} Assume: vec(Θi)∼𝒩(vec(M),ΣK⊗IJ) \\text{vec}(\\Theta_i) \\sim \\mathcal{N}(\\text{vec}(M), \\Sigma_K \\otimes I_J)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"matrix-algebra-simplified-structure","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Matrix Algebra – Simplified Structure","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Setup: Θi∈ℝ7×J\\Theta_i \\\\mathbb{R}^{7 \\times J} Model: vec(Θi)∼𝒩(vec(M),ΣK⊗IJ) \\text{vec}(\\Theta_i) \\sim \\mathcal{N}(\\text{vec}(M), \\Sigma_K \\otimes I_J) ΣK\\Sigma_K: 7×7 covariance (across biomarkers) IJI_J: biomarkers assumed uncorrelated Block-diagonal covariance","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"understanding-textvectheta_i","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Understanding vec(Θi)\\text{vec}(\\Theta_i)","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"θij∈ℝ7\\theta_{ij} \\\\mathbb{R}^7: θij=[y0b0μ0μ1cαr] \\theta_{ij} = \\begin{bmatrix} y_0 \\\\ b_0 \\\\ \\mu_0 \\\\ \\mu_1 \\\\ c \\\\ \\alpha \\\\ r \\end{bmatrix} Flattening: vec(Θi)∈ℝ7J×1 \\text{vec}(\\Theta_i) \\\\mathbb{R}^{7J \\times 1}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"understanding-textvecm","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Understanding vec(M)\\text{vec}(M)","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Let M=[μ1μ2⋯μJ]∈ℝ7×JM = [\\mu_1\\, \\mu_2\\, \\cdots\\, \\mu_J] \\\\mathbb{R}^{7 \\times J} Example J=3J=3: M=[μ1,1μ1,2μ1,3μ2,1μ2,2μ2,3μ3,1μ3,2μ3,3μ4,1μ4,2μ4,3μ5,1μ5,2μ5,3μ6,1μ6,2μ6,3μ7,1μ7,2μ7,3] M = \\begin{bmatrix} \\mu_{1,1} & \\mu_{1,2} & \\mu_{1,3} \\\\ \\mu_{2,1} & \\mu_{2,2} & \\mu_{2,3} \\\\ \\mu_{3,1} & \\mu_{3,2} & \\mu_{3,3} \\\\ \\mu_{4,1} & \\mu_{4,2} & \\mu_{4,3} \\\\ \\mu_{5,1} & \\mu_{5,2} & \\mu_{5,3} \\\\ \\mu_{6,1} & \\mu_{6,2} & \\mu_{6,3} \\\\ \\mu_{7,1} & \\mu_{7,2} & \\mu_{7,3} \\end{bmatrix}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"covariance-structure-sigma_k-otimes-i_j","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Covariance Structure: ΣK⊗IJ\\Sigma_K \\otimes I_J","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Cov(vec(Θi))=ΣK⊗IJ \\text{Cov}(\\text{vec}(\\Theta_i)) = \\Sigma_K \\otimes I_J ΣK\\Sigma_K: parameter covariance matrix IJI_J: biomarker-wise independence Kronecker product yields block-diagonal matrix","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"example-kronecker-product-with-k2-j3","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Example: Kronecker Product with K=2K=2, J=3J=3","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Let: ΣK=[σ11σ12σ21σ22],I3=[100010001] \\Sigma_K = \\begin{bmatrix} \\sigma_{11} & \\sigma_{12} \\\\ \\sigma_{21} & \\sigma_{22} \\end{bmatrix},\\quad I_3 = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} : ΣK⊗I3∈ℝ6×6 \\Sigma_K \\otimes I_3 \\\\mathbb{R}^{6 \\times 6}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"expanded-matrix-sigma_k-otimes-i_3","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Expanded Matrix: ΣK⊗I3\\Sigma_K \\otimes I_3","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"ΣK⊗I3=[σ1100σ12000σ1100σ12000σ1100σ12σ2100σ22000σ2100σ22000σ2100σ22] \\Sigma_K \\otimes I_3 = \\begin{bmatrix} \\sigma_{11} & 0 & 0 & \\sigma_{12} & 0 & 0 \\\\ 0 & \\sigma_{11} & 0 & 0 & \\sigma_{12} & 0 \\\\ 0 & 0 & \\sigma_{11} & 0 & 0 & \\sigma_{12} \\\\ \\sigma_{21} & 0 & 0 & \\sigma_{22} & 0 & 0 \\\\ 0 & \\sigma_{21} & 0 & 0 & \\sigma_{22} & 0 \\\\ 0 & 0 & \\sigma_{21} & 0 & 0 & \\sigma_{22} \\end{bmatrix}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"next-steps-modeling-correlation-across-biomarkers","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Next Steps: Modeling Correlation Across Biomarkers","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Current Limitation: Biomarkers assumed independent: IJI_J Planned Extension: Use full covariance ΣJ\\Sigma_J: Cov(vec(Θi))=ΣK⊗ΣJ \\text{Cov}(\\text{vec}(\\Theta_i)) = \\Sigma_K \\otimes \\Sigma_J","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"extending-to-correlated-biomarkers","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Extending to Correlated Biomarkers","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Assume K=3K=3, J=3J=3 Define: ΣK=[σ11σ12σ13σ21σ22σ23σ31σ32σ33],ΣJ=[τ11τ12τ13τ21τ22τ23τ31τ32τ33] \\Sigma_K = \\begin{bmatrix} \\sigma_{11} & \\sigma_{12} & \\sigma_{13} \\\\ \\sigma_{21} & \\sigma_{22} & \\sigma_{23} \\\\ \\sigma_{31} & \\sigma_{32} & \\sigma_{33} \\end{bmatrix},\\quad \\Sigma_J = \\begin{bmatrix} \\tau_{11} & \\tau_{12} & \\tau_{13} \\\\ \\tau_{21} & \\tau_{22} & \\tau_{23} \\\\ \\tau_{31} & \\tau_{32} & \\tau_{33} \\end{bmatrix}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"kronecker-product-structure-sigma_k-otimes-sigma_j","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Kronecker Product Structure: ΣK⊗ΣJ\\Sigma_K \\otimes \\Sigma_J","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"ΣK⊗ΣJ=[σ11ΣJσ12ΣJσ13ΣJσ21ΣJσ22ΣJσ23ΣJσ31ΣJσ32ΣJσ33ΣJ] \\Sigma_K \\otimes \\Sigma_J = \\begin{bmatrix} \\sigma_{11}\\Sigma_J & \\sigma_{12}\\Sigma_J & \\sigma_{13}\\Sigma_J \\\\ \\sigma_{21}\\Sigma_J & \\sigma_{22}\\Sigma_J & \\sigma_{23}\\Sigma_J \\\\ \\sigma_{31}\\Sigma_J & \\sigma_{32}\\Sigma_J & \\sigma_{33}\\Sigma_J \\end{bmatrix} Now biomarkers parameters can correlated.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"expanded-form-sigma_k-otimes-sigma_j-3x3","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Expanded Form: ΣK⊗ΣJ\\Sigma_K \\otimes \\Sigma_J (3x3)","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"9×99 \\times 9 matrix contains combinations σabτcd\\sigma_{ab}\\tau_{cd} block-diagonal — includes cross-biomarker correlation","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Beamer_Antibody_Kinetics.html","id":"practical-to-do-list-for-chapter-2","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Practical To-Do List (for Chapter 2)","title":"Extending the Hierarchical Model for Antibody Kinetics","text":"Model Implementation: Define full ΣJ\\Sigma_J prior: ΣJ−1∼𝒲(Ψ,ν)\\Sigma_J^{-1} \\sim \\mathcal{W}(\\Psi, \\nu) Implement ΣK⊗ΣJ\\Sigma_K \\otimes \\Sigma_J JAGS Simulation + Validation: Simulate individuals correlated biomarkers Fit block-diagonal full-covariance models Compare fit: DIC, WAIC, predictive checks","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"big-picture-what-are-we-modeling","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Big Picture: What Are We Modeling?","title":"Hierarchical Bayesian Model","text":"modeling antibody levels change time response infection, using data multiple individuals multiple biomarkers (10 antigen-isotype combinations, ( j = 1, 2, …, 10 )). want : Understand average pattern biomarker Allow person’s response vary Share information across individuals improve estimates perfect use case hierarchical Bayesian model.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"step-1-individual-level-parameters-subject-level","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 1: Individual-Level Parameters (Subject-Level)","title":"Hierarchical Bayesian Model","text":"person (ii), biomarker (jj), unique set parameters: θij=[y0,ijb0,ijμb,ijμy,ijγijαijρij] \\theta_{ij} = \\begin{bmatrix} y_{0,ij} \\\\ b_{0,ij} \\\\ \\mu_{b,ij} \\\\ \\mu_{y,ij} \\\\ \\gamma_{ij} \\\\ \\alpha_{ij} \\\\ \\rho_{ij} \\end{bmatrix} describe antibody curve person ( ii ) biomarker ( jj ): starting level, fast rises, peaks, decays.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"step-2-population-level-parameters-per-biomarker-j","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 2: Population-Level Parameters (Per Biomarker jj)","title":"Hierarchical Bayesian Model","text":"Now summarize people typically behave biomarker: μj=population mean vector biomarker j \\mu_j = \\text{population mean vector biomarker } j means: biomarker ( jj ), believe true average antibody trajectory governed parameters ( μj\\mu_j ). don’t know ( μj\\mu_j ) — estimate using data across individuals.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"step-3-hierarchical-modeling-structure","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 3: Hierarchical Modeling Structure","title":"Hierarchical Bayesian Model","text":"assume individual’s parameter vector θij\\theta_{ij} drawn multivariate normal distribution: θij∼𝒩(μj,Σj) \\theta_{ij} \\sim \\mathcal{N}(\\mu_j, \\Sigma_j) μj\\mu_j : population-level mean biomarker ( jj ) Σj\\Sigma_j : j×jj×j covariance matrix describing parameters co-vary “borrowing strength” happens. Even someone sparse data, can still make good inferences using group-level pattern.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"step-4-priors-on-population-means-hyperpriors","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 4: Priors on Population Means — “Hyperpriors”","title":"Hierarchical Bayesian Model","text":"wait — since Bayesian, also need prior belief μj\\mu_j : μj∼𝒩(μhyp,j,Ωhyp,j) \\mu_j \\sim \\mathcal{N}(\\mu_{\\text{hyp},j}, \\Omega_{\\text{hyp},j}) : μhyp,j\\mu_{\\text{hyp},j} : prior guess population mean (e.g., vector zeros )) Ωhyp,j\\Omega_{\\text{hyp},j} : uncertainty guess (e.g., 100⋅I7100 \\cdot I_7 weakly informative prior) hyperprior, ’s prior prior-level parameter.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"step-5-priors-on-covariance-priors-on-variability","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 5: Priors on Covariance — “Priors on Variability”","title":"Hierarchical Bayesian Model","text":"also don’t know much individual parameters vary. assign Wishart prior inverse covariance matrix: Σj−1∼𝒲(Ωj,νj) \\Sigma_j^{-1} \\sim \\mathcal{W}(\\Omega_j, \\nu_j) Ωj\\Omega_j : prior scale matrix (small variance across parameters, often 0.1⋅I70.1 \\cdot I_7) νj\\nu_j : degrees freedom tells model much expect individuals vary average biomarker jj.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"step-6-measurement-error-model","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 6: Measurement Error Model","title":"Hierarchical Bayesian Model","text":"observations noisy! model observed log-antibody levels log(yobs,ij)log(y_{obs,ij}) like : log(yobs,ij)∼𝒩(log(ypred,ij),τj−1) \\log(y_{\\text{obs},ij}) \\sim \\mathcal{N}(\\log(y_{\\text{pred},ij}), \\tau_j^{-1}) τj∼Gamma(aj,bj)\\tau_j \\sim \\text{Gamma}(a_j, b_j) prior measurement precision biomarker jj.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"step-7-putting-it-all-together","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 7: Putting It All Together","title":"Hierarchical Bayesian Model","text":"model built hierarchically across five conceptual levels: Observed data: log antibody concentrations serum samples Individual-level parameters: specific antibody dynamics subject-biomarker pair Population-level means: average antibody parameters biomarker Hyperpriors means: belief likely range population means Priors variability: belief individual variation around means structure lets us account uncertainty every level, borrowing strength across subjects biomarkers.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"summary-of-the-hierarchy","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Summary of the Hierarchy","title":"Hierarchical Bayesian Model","text":"Let’s stack top-: Top Level: biomarker jj, true mean antibody trajectory parameters μj\\mu_j come prior 𝒩(μhyp,j,Ωhyp,j)\\mathcal{N}(\\mu_{\\text{hyp},j}, \\Omega_{\\text{hyp},j}) Middle Level: person ii, parameters θij∼𝒩(μj,Σj)\\theta_{ij} \\sim \\mathcal{N}(\\mu_j, \\Sigma_j) Bottom Level: actual observed antibody levels noisy measurements predictions θij\\theta_{ij}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"recap-where-we-are","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"RECAP: Where We Are","title":"Hierarchical Bayesian Model","text":"Step 3: Modeling Individuals say: θij∼𝒩(μj,Σj) \\theta_{ij} \\sim \\mathcal{N}(\\mu_j, \\Sigma_j) means: biomarker jj, subject ii parameter vector θij\\theta_{ij} vectors come Normal distribution centered μj\\mu_j (population mean biomarker) Σj\\Sigma_j covariance matrix capturing variation across individuals biomarker ’s catch: don’t know μj\\mu_j Σj\\Sigma_j yet.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"so-how-do-we-handle-the-unknowns","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"So How Do We Handle the Unknowns?","title":"Hierarchical Bayesian Model","text":"Bayesian modeling, treat unknowns random variables . instead fixing μj\\mu_j Σj\\Sigma_j, say: “Let’s estimate , ’ll put prior belief guide learning.” brings us :","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"step-4-priors-on-mu_j","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 4: Priors on μj\\mu_j","title":"Hierarchical Bayesian Model","text":"μj∼𝒩(μhyp,j,Ωhyp,j) \\mu_j \\sim \\mathcal{N}(\\mu_{\\text{hyp},j}, \\Omega_{\\text{hyp},j}) Explanation: μj\\mu_j: unknown population-level mean parameters biomarker jj say: “believe μj\\mu_j comes another normal distribution” Centered μhyp,j\\mu_{\\text{hyp},j} — guess mean might spread Ωhyp,j\\Omega_{\\text{hyp},j} — confident guess want flexible, make prior weakly informative: Set μhyp,j=0\\mu_{\\text{hyp},j} = 0 Set Ωhyp,j=100⋅I7\\Omega_{\\text{hyp},j} = 100 \\cdot I_7, I7I_7 identity matrix (saying uncertain) prior population-level parameter — “hyperprior”.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"step-5-priors-on-sigma_j","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Step 5: Priors on Σj\\Sigma_j","title":"Hierarchical Bayesian Model","text":"also don’t know much individual parameters vary, say: Σj−1∼𝒲(Ωj,νj) \\Sigma_j^{-1} \\sim \\mathcal{W}(\\Omega_j, \\nu_j) Wishart prior precision matrix (inverse covariance). ? multivariate stats, ’s common use Wishart distribution prior covariance matrices Ωj\\Omega_j: scale (like average covariance expect) νj\\nu_j: degrees freedom (confident ) want uninformative, might say: Ωj=0.1⋅I7\\Omega_j = 0.1 \\cdot I_7 νj=8\\nu_j = 8 allows wide range possible covariance matrices.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/Hierarchical_Bayesian_Model.html","id":"summary-of-why-priors-show-up","dir":"Preview > Pr88 > Articles","previous_headings":"","what":"Summary of Why Priors Show Up","title":"Hierarchical Bayesian Model","text":"Priors appear step 4 5 now modeling parameters . Bayesian statistics: Every unknown quantity treated random variable Every random variable must probability distribution ’s priors let us encode beliefs, importantly, let us regularize model doesn’t overfit sparse noisy data.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/articles/index.html","id":null,"dir":"Preview > Pr88 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Hierarchical Bayesian Modeling Antibody Kinetics: Extensions Refinements  Extending Hierarchical Model Antibody Kinetics  dobson  Hierarchical Bayesian Model  test-snippets","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/authors.html","id":null,"dir":"Preview > Pr88","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/authors.html","id":"citation","dir":"Preview > Pr88","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9032, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9032},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/index.html","id":"serodynamics","dir":"Preview > Pr88","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/index.html","id":"installation","dir":"Preview > Pr88","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr88 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/news/index.html","id":"new-features-development-version","dir":"Preview > Pr88 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Added Beamer presentation files (Beamer_Antibody_Kinetics.qmd, .pdf) (#88) Taking include_subs input option, default include individuals Making single tbl output pieces attributes. jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr88 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr88 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/news/index.html","id":"serodynamics-000","dir":"Preview > Pr88 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/as_case_data.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/as_case_data.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/index.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/index.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/index.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/index.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/index.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/index.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/index.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/index.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/index.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_output SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/initsfunction.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/initsfunction.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/load_data.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/load_data.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/load_data.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/nepal_sees.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/nepal_sees.html","id":"source","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/nepal_sees_jags_output.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/nepal_sees_jags_output.html","id":"nepal-sees-jags-output","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"list consisting following named elements: curve_params data.frame titled curve_params contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\") attributes list attributes summarize jags inputs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/nepal_sees_jags_output.html","id":"source","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_title_fun.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_title_fun.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/plot_title_fun.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/post_summ.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/post_summ.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/post_summ.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/post_summ.html","id":"author","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter_sub Stratification    Mean      SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>         <chr>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha         paratyphi      2.29e-3 3.75e-3 1.27e-3 1.11e-4 5.79e-4 #>  2 HlyE_IgA alpha         typhi          3.78e-3 6.16e-3 2.17e-3 3.08e-4 1.12e-3 #>  3 HlyE_IgA shape         paratyphi      1.66e+0 2.74e-1 1.61e+0 1.29e+0 1.47e+0 #>  4 HlyE_IgA shape         typhi          1.65e+0 3.68e-1 1.57e+0 1.23e+0 1.42e+0 #>  5 HlyE_IgA t1            paratyphi      3.85e+0 1.34e+0 3.70e+0 1.86e+0 2.92e+0 #>  6 HlyE_IgA t1            typhi          7.62e+0 4.83e+0 6.67e+0 2.26e+0 4.61e+0 #>  7 HlyE_IgA y0            paratyphi      2.55e+0 9.07e-1 2.41e+0 1.23e+0 1.87e+0 #>  8 HlyE_IgA y0            typhi          2.90e+0 2.92e+0 2.25e+0 5.76e-1 1.52e+0 #>  9 HlyE_IgA y1            paratyphi      1.02e+3 6.84e+3 1.54e+2 8.85e+0 5.45e+1 #> 10 HlyE_IgA y1            typhi          1.73e+3 7.50e+3 2.69e+2 8.41e+0 9.10e+1 #> 11 HlyE_IgG alpha         paratyphi      2.57e-3 2.60e-3 1.74e-3 2.29e-4 8.76e-4 #> 12 HlyE_IgG alpha         typhi          1.75e-3 1.69e-3 1.22e-3 2.38e-4 7.06e-4 #> 13 HlyE_IgG shape         paratyphi      1.36e+0 2.03e-1 1.32e+0 1.10e+0 1.19e+0 #> 14 HlyE_IgG shape         typhi          1.52e+0 3.88e-1 1.42e+0 1.11e+0 1.27e+0 #> 15 HlyE_IgG t1            paratyphi      4.78e+0 2.09e+0 4.37e+0 1.93e+0 3.30e+0 #> 16 HlyE_IgG t1            typhi          9.76e+0 8.02e+0 7.67e+0 1.87e+0 4.59e+0 #> 17 HlyE_IgG y0            paratyphi      1.72e+0 7.66e-1 1.54e+0 7.09e-1 1.19e+0 #> 18 HlyE_IgG y0            typhi          2.29e+0 1.94e+0 1.82e+0 3.80e-1 1.09e+0 #> 19 HlyE_IgG y1            paratyphi      8.33e+2 2.13e+3 2.88e+2 1.82e+1 1.09e+2 #> 20 HlyE_IgG y1            typhi          4.02e+2 6.91e+2 2.21e+2 3.02e+1 1.07e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Thu May 22 23:17:38 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_data.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_data.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_data.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_priors.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Prepare priors","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer: many antigen-isotypes modeled","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_priors.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"list elements: \"n_params\": many parameters?? \"mu.hyp\": ?? \"prec.hyp\": ?? \"omega\" : ?? \"wishdf\": Wishart distribution degrees freedom \"prec.logy.hyp\": array hyper-parameters precision (inverse variance) biomarkers, log-scale","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/reexports.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/run_mod.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable MCMC inputs runjags::run.jags() MCMC Bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak shape = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod,   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/run_mod.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number MCMC chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/run_mod.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"dplyr::tbl_df contains posterior distribution exported following variables: iteration = Number sampling iterations chain = Number MCMC chains run; 1 4 Parameter = Parameter estimated. Includes following: y0 = Posterior estimate baseline antibody concentration y1 = Posterior estimate peak antibody concentration t1 = Posterior estimate time peak shape = Posterior estimate shape parameter alpha = Posterior estimate decay rate Iso_type = Antibody/antigen type combination evaluated Stratification = variable used stratify jags model Subject = ID subject evaluated value = Estimated value parameter following attributes included output: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc). optional \"jags.post\" attribute, included argument with_post = TRUE. Includes list containing one runjags::runjags objects (one per stratum).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/run_mod.html","id":"author","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Thu May 22 23:17:44 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Thu May 22 23:18:31 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_case_data.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_case_data.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr88/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr88 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 1 5 4 3 2 2 2 2 3 2"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/CONTRIBUTING.html","id":null,"dir":"Preview > Pr91","previous_headings":"","what":"Contributing to serocalculator","title":"Contributing to serocalculator","text":"outlines propose change serocalculator. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/CONTRIBUTING.html","id":"fixing-typos","dir":"Preview > Pr91","previous_headings":"","what":"Fixing typos","title":"Contributing to serocalculator","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/CONTRIBUTING.html","id":"bigger-changes","dir":"Preview > Pr91","previous_headings":"","what":"Bigger changes","title":"Contributing to serocalculator","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/CONTRIBUTING.html","id":"pull-request-process","dir":"Preview > Pr91","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to serocalculator","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UCD-SERG/serocalculator\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html. GitHub automatically check PR see package still functional Mac OS, Windows, Linux; , receive email describing problems. help decoding errors, try resource: https://github.com/r-lib/actions?tab=readme-ov-file#--find-help.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/CONTRIBUTING.html","id":"code-style","dir":"Preview > Pr91","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to serocalculator","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/CONTRIBUTING.html","id":"code-of-conduct","dir":"Preview > Pr91","previous_headings":"","what":"Code of Conduct","title":"Contributing to serocalculator","text":"Please note serocalculator project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/LICENSE.html","id":null,"dir":"Preview > Pr91","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 project authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"overview","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Overview","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Incorporates feedback Dr. Morrison Aligns Teunis et al. (2016, 2023) formulations Clarifies model parameter roles interpretation Assumes block-diagonal covariance structure across biomarkers","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"full-model-structure","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Full Model Structure","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Two-phase within-host antibody kinetics: dydt={μ1b(t),t<t1−αy(t)r,t≥t1with dbdt=μ0b(t)−cy(t)b(t) \\frac{dy}{dt} = \\begin{cases} \\mu_1 b(t), & t < t_1 \\\\ - \\alpha y(t)^r, & t \\ge t_1 \\end{cases} \\quad \\text{} \\frac{db}{dt} = \\mu_0 b(t) - c y(t) b(t) Initial conditions: y(0)=y0y(0) = y_0, b(0)=b0b(0) = b_0Key transition: t1t_1 time b(t1)=0b(t_1) = 0Derived quantity: y1=y(t1)y_1 = y(t_1)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"definition-of-model-quantities","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Definition of Model Quantities","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Parameters used dynamic model: μ0\\mu_0: Pathogen growth rate μ1\\mu_1: Antibody production rate (driven pathogen) cc: Clearance rate — effectively antibodies eliminate pathogen α\\alpha: Antibody decay rate (governs speed waning) rr: Shape antibody decay (nonlinear power) y0y_0: Initial antibody concentration t=0t = 0 b0b_0: Initial pathogen concentration t=0t = 0 y1=y(t1)y_1 = y(t_1): Peak antibody level — computed time pathogen clearance Note: first 7 estimated. y1y_1 derived ODE solution.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"model-comparison-2016-vs-our-formulation","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Model Comparison: 2016 vs Our Formulation","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Note: Antibody production depends pathogen presence (b(t)b(t)), constant exponential growth Pathogen clearance proportional antibody pathogen levels (cy(t)b(t)c\\,y(t)\\,b(t))","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"hierarchical-priors-subject-level-and-means","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Hierarchical Priors – Subject-Level and Means","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Subject-level parameters: 𝛉ij∼𝒩(𝛍j,Σj),𝛉ij=[y0,ijb0,ijμ0,ijμ1,ijcijαijrij] \\boldsymbol{\\theta}_{ij} \\sim \\mathcal{N}(\\boldsymbol{\\mu}_j,\\,\\Sigma_j),\\quad \\boldsymbol{\\theta}_{ij} = \\begin{bmatrix} y_{0,ij} \\\\ b_{0,ij} \\\\ \\mu_{0,ij} \\\\ \\mu_{1,ij} \\\\ c_{ij} \\\\ \\alpha_{ij} \\\\ r_{ij} \\end{bmatrix} Hyperparameters – Means: 𝛍j\\boldsymbol{\\mu}_j: population-level mean vector biomarker jj Prior 𝛍j\\boldsymbol{\\mu}_j: 𝛍j∼𝒩(𝛍hyp,j,Ωhyp,j) \\boldsymbol{\\mu}_j \\sim \\mathcal{N}(\\boldsymbol{\\mu}_{\\mathrm{hyp},j},\\,\\Omega_{\\mathrm{hyp},j}) 𝛍hyp,j\\boldsymbol{\\mu}_{\\mathrm{hyp},j} Ωhyp,j\\Omega_{\\mathrm{hyp},j} fixed weakly informative","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"clarifying-parameter-roles","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Clarifying Parameter Roles","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"confusion number parameters? dynamic model contains 8 named parameters: μ0,μ1,c,α,r,y0,b0,y1 \\mu_0, \\mu_1, c, \\alpha, r, y_0, b_0, y_1 7 estimated — 8th (y1y_1) computed. Let’s break carefully.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"classification-of-parameters","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Classification of Parameters","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Estimated Parameters (7 total): Core model parameters (5): μ0,μ1,c,α,r \\mu_0,\\ \\mu_1,\\ c,\\ \\alpha,\\ r Initial conditions (2): y0,b0 y_0,\\ b_0 Derived Quantity (estimated): y1y_1: peak antibody level computed y(t1)y(t_1)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"time-of-pathogen-clearance-t_1","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Time of Pathogen Clearance: t1t_1","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Definition: t1t_1 time pathogen cleared, .e., b(t1)=0b(t_1) = 0 Analytic expression (Teunis et al., 2016): t1=1μ1−μ0log(1+(μ1−μ0)b0cy0) t_1 = \\frac{1}{\\mu_1 - \\mu_0} \\log\\left(1 + \\frac{(\\mu_1 - \\mu_0)\\,b_0}{c\\,y_0} \\right) Key observations: t1t_1 depends μ0\\mu_0, μ1\\mu_1, b0b_0, y0y_0, cc Used determine y1=y(t1)y_1 = y(t_1) solving antibody ODE point treated estimated parameter — computed model inputs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"why-its-a-seven-parameter-model","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Why It’s a Seven-Parameter Model","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"5 core biological parameters: μ0,μ1,c,α,r\\mu_0,\\ \\mu_1,\\ c,\\ \\alpha,\\ r 2 initial conditions: y0,b0y_0,\\ b_0 often talk eighth quantity, y1y_1, highest level antibody. isn’t y1y_1 counted parameter?","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"why-y_1-is-not-fit-directly","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Why y1y_1 Is Not Fit Directly","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"y1y_1 antibody level time pathogen cleared: y1=y(t1)b(t1)=0 y_1 = y(t_1) \\quad \\text{} b(t_1) = 0 “input” model — don’t estimate MCMC. estimate parameters like μ1\\mu_1, y0y_0, b0b_0… solve ODEs find t1t_1 compute y(t1)y(t_1) words: y1y_1 derived output, parameter fit.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"how-y_1-is-computed","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"How y1y_1 Is Computed","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"y1y_1 computed solving coupled ODE system: dydt=μ1b(t),dbdt=μ0b(t)−cy(t)b(t) \\frac{dy}{dt} = \\mu_1 b(t), \\quad \\frac{db}{dt} = \\mu_0 b(t) - c y(t) b(t) solution evaluated t=t1t = t_1 (pathogen clearance point). Therefore: y1=y(t1;μ1,y0,b0,μ0,c) y_1 = y(t_1;\\ \\mu_1,\\ y_0,\\ b_0,\\ \\mu_0,\\ c)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"recap-what-we-estimate","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Recap: What We Estimate","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Seven model parameters: μ0,μ1,c,α,r\\mu_0,\\ \\mu_1,\\ c,\\ \\alpha,\\ r (biological process) y0,b0y_0,\\ b_0 (initial state) Derived quantity: y1=y(t1)y_1 = y(t_1), directly estimated","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"hierarchical-bayesian-structure","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Hierarchical Bayesian Structure","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Individual parameters: θij=[y0,ijb0,ijμ0,ijμ1,ijcijαijrij]∼𝒩(μj,Σj) \\theta_{ij} = \\begin{bmatrix} y_{0,ij} \\\\ b_{0,ij} \\\\ \\mu_{0,ij} \\\\ \\mu_{1,ij} \\\\ c_{ij} \\\\ \\alpha_{ij} \\\\ r_{ij} \\end{bmatrix} \\sim \\mathcal{N}(\\mu_j, \\Sigma_j) Hyperparameters: μj\\mu_j: population-level means (per biomarker jj) Σj\\Sigma_j: 7×77 \\times 7 covariance matrix parameters","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"subject-level-parameters-boldsymboltheta_ij","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Subject-Level Parameters: 𝛉ij\\boldsymbol{\\theta}_{ij}","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"𝛉ij∼𝒩(𝛍j,Σj),𝛉ij∈ℝ7 \\boldsymbol{\\theta}_{ij} \\sim \\mathcal{N}(\\boldsymbol{\\mu}_j,\\,\\Sigma_j), \\quad \\boldsymbol{\\theta}_{ij} \\\\mathbb{R}^7 : 𝛉ij=[y0,ijb0,ijμ0,ijμ1,ijcijαijrij],Σj∈ℝ7×7 \\boldsymbol{\\theta}_{ij} = \\begin{bmatrix} y_{0,ij} \\\\ b_{0,ij} \\\\ \\mu_{0,ij} \\\\ \\mu_{1,ij} \\\\ c_{ij} \\\\ \\alpha_{ij} \\\\ r_{ij} \\end{bmatrix}, \\quad \\Sigma_j \\\\mathbb{R}^{7 \\times 7} subject ii unique 7-parameter vector per biomarker jj, capturing individual-level variation dynamics.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"hyperparameters-priors-on-population-means","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Hyperparameters: Priors on Population Means","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Population-level means: 𝛍j∼𝒩(𝛍hyp,j,Ωhyp,j) \\boldsymbol{\\mu}_j \\sim \\mathcal{N}(\\boldsymbol{\\mu}_{\\mathrm{hyp},j}, \\Omega_{\\mathrm{hyp},j}) Interpretation: 𝛍j\\boldsymbol{\\mu}_j: average parameter vector biomarker jj 𝛍hyp,j\\boldsymbol{\\mu}_{\\mathrm{hyp},j}: prior guess (e.g., vector zeros) Ωhyp,j\\Omega_{\\mathrm{hyp},j}: covariance matrix encoding uncertainty Example: 𝛍hyp,j=0,Ωhyp,j=100⋅I7 \\boldsymbol{\\mu}_{\\mathrm{hyp},j} = 0, \\quad \\Omega_{\\mathrm{hyp},j} = 100 \\cdot I_7","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"hyperparameters-priors-on-covariance","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Hyperparameters: Priors on Covariance","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Covariance across parameters: Σj−1∼𝒲(Ωj,νj) \\Sigma_j^{-1} \\sim \\mathcal{W}(\\Omega_j, \\nu_j) Σj\\Sigma_j: variability/covariance subject-level parameters Ωj\\Omega_j: prior scale matrix νj\\nu_j: degrees freedom Example: Ωj=0.1⋅I7,νj=8 \\Omega_j = 0.1 \\cdot I_7, \\quad \\nu_j = 8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"measurement-error-and-precision-priors","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Measurement Error and Precision Priors","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Observed antibody levels: log(yobs,ij)∼𝒩(log(ypred,ij),τj−1) \\log(y_{\\text{obs},ij}) \\sim \\mathcal{N}(\\log(y_{\\text{pred},ij}), \\tau_j^{-1}) Precision prior: τj∼Gamma(aj,bj) \\tau_j \\sim \\text{Gamma}(a_j, b_j) τj\\tau_j: shared measurement precision biomarker jj Gamma prior allows flexible noise modeling","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"matrix-algebra-computation","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Matrix Algebra Computation","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Let K=7K = 7 (parameters), JJ biomarkers. : Θi=[θi1θi2⋯θiJ]∈ℝK×J \\Theta_i = \\begin{bmatrix} \\theta_{i1} & \\theta_{i2} & \\cdots & \\theta_{iJ} \\end{bmatrix} \\\\mathbb{R}^{K \\times J} Assume: vec(Θi)∼𝒩(vec(M),ΣK⊗IJ) \\text{vec}(\\Theta_i) \\sim \\mathcal{N}(\\text{vec}(M), \\Sigma_K \\otimes I_J)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"matrix-algebra-simplified-structure","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Matrix Algebra – Simplified Structure","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Setup: Θi∈ℝ7×J\\Theta_i \\\\mathbb{R}^{7 \\times J} Model: vec(Θi)∼𝒩(vec(M),ΣK⊗IJ) \\text{vec}(\\Theta_i) \\sim \\mathcal{N}(\\text{vec}(M), \\Sigma_K \\otimes I_J) ΣK\\Sigma_K: 7×7 covariance (across biomarkers) IJI_J: biomarkers assumed uncorrelated Block-diagonal covariance","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"understanding-textvectheta_i","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Understanding vec(Θi)\\text{vec}(\\Theta_i)","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"θij∈ℝ7\\theta_{ij} \\\\mathbb{R}^7: θij=[y0b0μ0μ1cαr] \\theta_{ij} = \\begin{bmatrix} y_0 \\\\ b_0 \\\\ \\mu_0 \\\\ \\mu_1 \\\\ c \\\\ \\alpha \\\\ r \\end{bmatrix} Flattening: vec(Θi)∈ℝ7J×1 \\text{vec}(\\Theta_i) \\\\mathbb{R}^{7J \\times 1}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"understanding-textvecm","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Understanding vec(M)\\text{vec}(M)","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Let M=[μ1μ2⋯μJ]∈ℝ7×JM = [\\mu_1\\, \\mu_2\\, \\cdots\\, \\mu_J] \\\\mathbb{R}^{7 \\times J} Example J=3J=3: M=[μ1,1μ1,2μ1,3μ2,1μ2,2μ2,3μ3,1μ3,2μ3,3μ4,1μ4,2μ4,3μ5,1μ5,2μ5,3μ6,1μ6,2μ6,3μ7,1μ7,2μ7,3] M = \\begin{bmatrix} \\mu_{1,1} & \\mu_{1,2} & \\mu_{1,3} \\\\ \\mu_{2,1} & \\mu_{2,2} & \\mu_{2,3} \\\\ \\mu_{3,1} & \\mu_{3,2} & \\mu_{3,3} \\\\ \\mu_{4,1} & \\mu_{4,2} & \\mu_{4,3} \\\\ \\mu_{5,1} & \\mu_{5,2} & \\mu_{5,3} \\\\ \\mu_{6,1} & \\mu_{6,2} & \\mu_{6,3} \\\\ \\mu_{7,1} & \\mu_{7,2} & \\mu_{7,3} \\end{bmatrix}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"covariance-structure-sigma_k-otimes-i_j","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Covariance Structure: ΣK⊗IJ\\Sigma_K \\otimes I_J","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Cov(vec(Θi))=ΣK⊗IJ \\text{Cov}(\\text{vec}(\\Theta_i)) = \\Sigma_K \\otimes I_J ΣK\\Sigma_K: parameter covariance matrix IJI_J: biomarker-wise independence Kronecker product yields block-diagonal matrix","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"example-kronecker-product-with-k2-j3","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Example: Kronecker Product with K=2K=2, J=3J=3","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Let: ΣK=[σ11σ12σ21σ22],I3=[100010001] \\Sigma_K = \\begin{bmatrix} \\sigma_{11} & \\sigma_{12} \\\\ \\sigma_{21} & \\sigma_{22} \\end{bmatrix},\\quad I_3 = \\begin{bmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{bmatrix} : ΣK⊗I3∈ℝ6×6 \\Sigma_K \\otimes I_3 \\\\mathbb{R}^{6 \\times 6}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"expanded-matrix-sigma_k-otimes-i_3","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Expanded Matrix: ΣK⊗I3\\Sigma_K \\otimes I_3","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"ΣK⊗I3=[σ1100σ12000σ1100σ12000σ1100σ12σ2100σ22000σ2100σ22000σ2100σ22] \\Sigma_K \\otimes I_3 = \\begin{bmatrix} \\sigma_{11} & 0 & 0 & \\sigma_{12} & 0 & 0 \\\\ 0 & \\sigma_{11} & 0 & 0 & \\sigma_{12} & 0 \\\\ 0 & 0 & \\sigma_{11} & 0 & 0 & \\sigma_{12} \\\\ \\sigma_{21} & 0 & 0 & \\sigma_{22} & 0 & 0 \\\\ 0 & \\sigma_{21} & 0 & 0 & \\sigma_{22} & 0 \\\\ 0 & 0 & \\sigma_{21} & 0 & 0 & \\sigma_{22} \\end{bmatrix}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"next-steps-modeling-correlation-across-biomarkers","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Next Steps: Modeling Correlation Across Biomarkers","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Current Limitation: Biomarkers assumed independent: IJI_J Planned Extension: Use full covariance ΣJ\\Sigma_J: Cov(vec(Θi))=ΣK⊗ΣJ \\text{Cov}(\\text{vec}(\\Theta_i)) = \\Sigma_K \\otimes \\Sigma_J","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"extending-to-correlated-biomarkers","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Extending to Correlated Biomarkers","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Assume K=3K=3, J=3J=3 Define: ΣK=[σ11σ12σ13σ21σ22σ23σ31σ32σ33],ΣJ=[τ11τ12τ13τ21τ22τ23τ31τ32τ33] \\Sigma_K = \\begin{bmatrix} \\sigma_{11} & \\sigma_{12} & \\sigma_{13} \\\\ \\sigma_{21} & \\sigma_{22} & \\sigma_{23} \\\\ \\sigma_{31} & \\sigma_{32} & \\sigma_{33} \\end{bmatrix},\\quad \\Sigma_J = \\begin{bmatrix} \\tau_{11} & \\tau_{12} & \\tau_{13} \\\\ \\tau_{21} & \\tau_{22} & \\tau_{23} \\\\ \\tau_{31} & \\tau_{32} & \\tau_{33} \\end{bmatrix}","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"kronecker-product-structure-sigma_k-otimes-sigma_j","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Kronecker Product Structure: ΣK⊗ΣJ\\Sigma_K \\otimes \\Sigma_J","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"ΣK⊗ΣJ=[σ11ΣJσ12ΣJσ13ΣJσ21ΣJσ22ΣJσ23ΣJσ31ΣJσ32ΣJσ33ΣJ] \\Sigma_K \\otimes \\Sigma_J = \\begin{bmatrix} \\sigma_{11}\\Sigma_J & \\sigma_{12}\\Sigma_J & \\sigma_{13}\\Sigma_J \\\\ \\sigma_{21}\\Sigma_J & \\sigma_{22}\\Sigma_J & \\sigma_{23}\\Sigma_J \\\\ \\sigma_{31}\\Sigma_J & \\sigma_{32}\\Sigma_J & \\sigma_{33}\\Sigma_J \\end{bmatrix} Now biomarkers parameters can correlated.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"expanded-form-sigma_k-otimes-sigma_j-3x3","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Expanded Form: ΣK⊗ΣJ\\Sigma_K \\otimes \\Sigma_J (3x3)","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"9×99 \\times 9 matrix contains combinations σabτcd\\sigma_{ab}\\tau_{cd} block-diagonal — includes cross-biomarker correlation","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/Beamer_Antibody_Kinetics.html","id":"practical-to-do-list-for-chapter-2","dir":"Preview > Pr91 > Articles","previous_headings":"","what":"Practical To-Do List (for Chapter 2)","title":"Hierarchical Model for Antibody Kinetics: Revisions Based on Advisor Feedback","text":"Model Implementation: Define full ΣJ\\Sigma_J prior: ΣJ−1∼𝒲(Ψ,ν)\\Sigma_J^{-1} \\sim \\mathcal{W}(\\Psi, \\nu) Implement ΣK⊗ΣJ\\Sigma_K \\otimes \\Sigma_J JAGS Simulation + Validation: Simulate individuals correlated biomarkers Fit block-diagonal full-covariance models Compare fit: DIC, WAIC, predictive checks","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/articles/index.html","id":null,"dir":"Preview > Pr91 > Articles","previous_headings":"","what":"All vignettes","title":"Articles","text":"Hierarchical Model Antibody Kinetics: Revisions Based Advisor Feedback  dobson","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/authors.html","id":null,"dir":"Preview > Pr91","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Teunis. Author, copyright holder.           Author method original code. Samuel Schildhauer. Author, maintainer. Kwan Ho Lee. Contributor. Kristen Aiemjoy. Author. Douglas Ezra Morrison. Author.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/authors.html","id":"citation","dir":"Preview > Pr91","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teunis P, Schildhauer S, Aiemjoy K, Morrison D (2025). serodynamics: Package (One Line, Title Case). R package version 0.0.0.9028, https://github.com/UCD-SERG/serodynamics.","code":"@Manual{,   title = {serodynamics: What the Package Does (One Line, Title Case)},   author = {Peter Teunis and Samuel Schildhauer and Kristen Aiemjoy and Douglas Ezra Morrison},   year = {2025},   note = {R package version 0.0.0.9028},   url = {https://github.com/UCD-SERG/serodynamics}, }"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/index.html","id":"serodynamics","dir":"Preview > Pr91","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal serodynamics implement methods modeling longitudinal antibody responses infection.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/index.html","id":"installation","dir":"Preview > Pr91","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version serodynamics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"UCD-SERG/serodynamics\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/news/index.html","id":"serodynamics-development-version","dir":"Preview > Pr91 > News","previous_headings":"","what":"serodynamics (development version)","title":"Changelog","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/news/index.html","id":"new-features-development-version","dir":"Preview > Pr91 > News","previous_headings":"serodynamics (development version)","what":"New features","title":"Changelog","text":"Added Beamer presentation files (Beamer_Antibody_Kinetics.qmd, .pdf) (#88) Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/news/index.html","id":"bug-fixes-development-version","dir":"Preview > Pr91 > News","previous_headings":"serodynamics (development version)","what":"Bug fixes","title":"Changelog","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/news/index.html","id":"developer-facing-changes-development-version","dir":"Preview > Pr91 > News","previous_headings":"serodynamics (development version)","what":"Developer-facing changes","title":"Changelog","text":"Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/news/index.html","id":"serodynamics-000","dir":"Preview > Pr91 > News","previous_headings":"","what":"serodynamics 0.0.0","title":"Changelog","text":"Started development.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/as_case_data.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/as_case_data.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/as_case_data.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/as_case_data.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/as_case_data.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/autoplot.case_data.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/autoplot.case_data.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/autoplot.case_data.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/autoplot.case_data.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/autoplot.case_data.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/index.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"sim_case_data() Simulate longitudinal case follow-data homogeneous population","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/index.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file load_data() load format data as_case_data() Convert data case_data prep_data() prepare data JAGs","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/index.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"autoplot(<case_data>) Plot case data","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/index.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"prep_priors() Prepare priors initsfunction() JAGS chain initialization function","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/index.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"run_mod() Run Jags Model","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/index.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"plot_jags_dens() Density Plot Diagnostics plot_jags_Rhat() Rhat Plot Diagnostics plot_jags_trace() Trace Plot Diagnostics plot_jags_effect() Plot Effective Sample Size Diagnostics","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/index.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"postprocess_jags_output() Postprocess JAGS output","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/index.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"post_summ() Summary Table Jags Posterior Estimates","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/index.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Package index","title":"Package index","text":"serodynamics_example() Get path example file nepal_sees SEES Typhoid data nepal_sees_jags_post SEES Typhoid run_mod jags output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/initsfunction.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/initsfunction.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/initsfunction.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/initsfunction.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/initsfunction.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/load_data.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/load_data.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/load_data.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/load_data.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/nepal_sees.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/nepal_sees.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/nepal_sees.html","id":"nepal-sees","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/nepal_sees.html","id":"source","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/nepal_sees_jags_post.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/nepal_sees_jags_post.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"","code":"nepal_sees_jags_post"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/nepal_sees_jags_post.html","id":"nepal-sees-jags-post","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"nepal_sees_jags_post","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"list consisting following named elements: curve_params data.frame titled curve_params contains posterior distribution attributes list attributes summarize jags inputs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/nepal_sees_jags_post.html","id":"source","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_Rhat.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_Rhat.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_Rhat.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_Rhat.html","id":"author","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_post  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_dens.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_dens.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_dens.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_dens.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_dens.html","id":"author","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_dens.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   library(ggmcmc)   library(dplyr)    data <- serodynamics::nepal_sees_jags_post  plot_jags_dens(     data = data, #A [serodynamics::run_mod()] [list] output.     iso = \"HlyE_IgA\", #A [character] string specifying     #nantigen/antibody of interest.     param = \"alpha\",  #A [character] string specifying parameter of     # interest.     strat = \"typhi\")  #A [character] string specifying     # stratification of interest.     } #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Loading required package: tidyr #>  #> Attaching package: ‘tidyr’ #> The following object is masked from ‘package:runjags’: #>  #>     extract #> Loading required package: ggplot2 #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_effect.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_effect.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_effect.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_effect.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_effect.html","id":"author","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_effect.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_post  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_trace.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_trace.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_trace.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_trace.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_trace.html","id":"author","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/plot_jags_trace.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_post  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/post_summ.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/post_summ.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$curve_params$Iso_type),   param = unique(data$curve_params$Parameter_sub),   strat = unique(data$curve_params$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/post_summ.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/post_summ.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/post_summ.html","id":"author","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/post_summ.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_post) #> # A tibble: 20 × 11 #>    Iso_type Parameter_sub Stratification    Mean      SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>         <chr>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha         paratyphi      2.29e-3 3.75e-3 1.27e-3 1.11e-4 5.79e-4 #>  2 HlyE_IgA alpha         typhi          3.78e-3 6.16e-3 2.17e-3 3.08e-4 1.12e-3 #>  3 HlyE_IgA shape         paratyphi      1.66e+0 2.74e-1 1.61e+0 1.29e+0 1.47e+0 #>  4 HlyE_IgA shape         typhi          1.65e+0 3.68e-1 1.57e+0 1.23e+0 1.42e+0 #>  5 HlyE_IgA t1            paratyphi      3.85e+0 1.34e+0 3.70e+0 1.86e+0 2.92e+0 #>  6 HlyE_IgA t1            typhi          7.62e+0 4.83e+0 6.67e+0 2.26e+0 4.61e+0 #>  7 HlyE_IgA y0            paratyphi      2.55e+0 9.07e-1 2.41e+0 1.23e+0 1.87e+0 #>  8 HlyE_IgA y0            typhi          2.90e+0 2.92e+0 2.25e+0 5.76e-1 1.52e+0 #>  9 HlyE_IgA y1            paratyphi      1.02e+3 6.84e+3 1.54e+2 8.85e+0 5.45e+1 #> 10 HlyE_IgA y1            typhi          1.73e+3 7.50e+3 2.69e+2 8.41e+0 9.10e+1 #> 11 HlyE_IgG alpha         paratyphi      2.57e-3 2.60e-3 1.74e-3 2.29e-4 8.76e-4 #> 12 HlyE_IgG alpha         typhi          1.75e-3 1.69e-3 1.22e-3 2.38e-4 7.06e-4 #> 13 HlyE_IgG shape         paratyphi      1.36e+0 2.03e-1 1.32e+0 1.10e+0 1.19e+0 #> 14 HlyE_IgG shape         typhi          1.52e+0 3.88e-1 1.42e+0 1.11e+0 1.27e+0 #> 15 HlyE_IgG t1            paratyphi      4.78e+0 2.09e+0 4.37e+0 1.93e+0 3.30e+0 #> 16 HlyE_IgG t1            typhi          9.76e+0 8.02e+0 7.67e+0 1.87e+0 4.59e+0 #> 17 HlyE_IgG y0            paratyphi      1.72e+0 7.66e-1 1.54e+0 7.09e-1 1.19e+0 #> 18 HlyE_IgG y0            typhi          2.29e+0 1.94e+0 1.82e+0 3.80e-1 1.09e+0 #> 19 HlyE_IgG y1            paratyphi      8.33e+2 2.13e+3 2.88e+2 1.82e+1 1.09e+2 #> 20 HlyE_IgG y1            typhi          4.02e+2 6.91e+2 2.21e+2 3.02e+1 1.07e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/postprocess_jags_output.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/postprocess_jags_output.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/postprocess_jags_output.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Apr 15 03:06:34 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_data.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_data.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_data.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_data.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_data.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_priors.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Prepare priors","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_priors.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_priors.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer: many antigen-isotypes modeled","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_priors.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"list elements: \"n_params\": many parameters?? \"mu.hyp\": ?? \"prec.hyp\": ?? \"omega\" : ?? \"wishdf\": Wishart distribution degrees freedom \"prec.logy.hyp\": array hyper-parameters precision (inverse variance) biomarkers, log-scale","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/prep_priors.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/reexports.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/run_mod.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable mcmc inputs runjags::run.jags() mcmc bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/run_mod.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod,   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/run_mod.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number mcmc chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/run_mod.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"jags.post list() object multiple jags.post list() stratified. Returned list() class runjags::runjags base::data.frame() titled curve_params contains posterior distribution exported following attributes: iteration = number sampling iterations. chain = number mcmc chains run; 1 4. indexid = \"newperson\", indicating posterior distribution. antigen_iso = antibody/antigen type combination evaluated alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration stratified variable = variable jags stratified list attributes summarize jags inputs, including: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/run_mod.html","id":"author","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/run_mod.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Apr 15 03:06:40 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Tue Apr 15 03:07:26 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/serodynamics-package.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/serodynamics-package.html","id":"author","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/serodynamics_example.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/serodynamics_example.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/serodynamics_example.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/serodynamics_example.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/serodynamics_example.html","id":"details","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/serodynamics_example.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_case_data.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_case_data.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_case_data.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_case_data.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_case_data.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_n_obs.html","id":null,"dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_n_obs.html","id":"ref-usage","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_n_obs.html","id":"arguments","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_n_obs.html","id":"value","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/preview/pr91/reference/sim_n_obs.html","id":"ref-examples","dir":"Preview > Pr91 > Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 1 5 4 3 2 2 2 2 3 2"},{"path":"https://ucd-serg.github.io/serodynamics/reference/as_case_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data into case_data — as_case_data","title":"Convert data into case_data — as_case_data","text":"Convert data case_data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/as_case_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data into case_data — as_case_data","text":"","code":"as_case_data(   data,   id_var = \"index_id\",   biomarker_var = \"antigen_iso\",   value_var = \"value\",   time_in_days = \"timeindays\" )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/as_case_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data into case_data — as_case_data","text":"data data.frame id_var character string naming column data denoting participant ID biomarker_var character string naming column data denoting biomarker reported value_var (e.g. \"antigen_iso\") value_var character string naming column data biomarker measurements time_in_days character string naming column data elapsed time since seroconversion","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/as_case_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data into case_data — as_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/as_case_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data into case_data — as_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) |>   as_case_data(     id_var = \"id\",     biomarker_var = \"antigen_iso\",     time_in_days = \"timeindays\",     value_var = \"value\"   ) #> # A tibble: 105 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1     t1     alpha #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl>  <dbl>     <dbl> #>  1 1             1          0    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  2 1             1          0    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  3 1             1          0    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  4 1             1          0    95 LPS_IgG     15.6   301.   0.472 0.0000352 #>  5 1             1          0    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #>  6 1             2          8    95 HlyE_IgA     1.98   21.9 10.5   0.000600  #>  7 1             2          8    95 HlyE_IgG     4.45   48.8 10.3   0.00135   #>  8 1             2          8    95 LPS_IgA      1.39   54.8  2.56  0.000591  #>  9 1             2          8    95 LPS_IgG     15.6   301.   0.472 0.0000352 #> 10 1             2          8    95 Vi_IgG       3.72 1075.   7.95  0.0000447 #> # ℹ 95 more rows #> # ℹ 2 more variables: r <dbl>, value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/reference/autoplot.case_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot case data — autoplot.case_data","title":"Plot case data — autoplot.case_data","text":"Plot case data","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/autoplot.case_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot case data — autoplot.case_data","text":"","code":"# S3 method for class 'case_data' autoplot(object, log_y = TRUE, log_x = FALSE, ...)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/autoplot.case_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot case data — autoplot.case_data","text":"object case_data object log_y whether log-transform y-axis log_x whether log-transform x-axis ... Arguments passed ggplot2::geom_point, ggplot2::geom_line mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders(). arrow Arrow specification, created grid::arrow(). arrow.fill fill colour use arrow head (closed). NULL means use colour aesthetic. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/autoplot.case_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot case data — autoplot.case_data","text":"ggplot2::ggplot","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/autoplot.case_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot case data — autoplot.case_data","text":"","code":"set.seed(1) sim_case_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5, max_n_obs = 20, followup_interval = 14)  sim_case_data |>   autoplot(alpha = .5)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/calc_fit_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"calc_fit_mod() takes antibody kinetic parameter estimates calculates fitted residual values. Fitted values correspond estimated assay value (ex. ELISA units etc.) time since infection (TSI). Residual values calculated difference fitted observed values.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/calc_fit_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"","code":"calc_fit_mod(modeled_dat, original_data)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/calc_fit_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"modeled_dat data.frame modeled antibody kinetic parameter values. original_data data.frame original input dataset.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/calc_fit_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates fitted and residual values for modeled outputs — calc_fit_mod","text":"data.frame attached attributes following values: Subject = ID number specifying individual Iso_type = modeled antigen_isotype t = Time since infection fitted = fitted value calculated using model output parameters given t residual = residual value calculated difference observed fitted values given t","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/expect_snapshot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Snapshot testing for data.frames — expect_snapshot_data","title":"Snapshot testing for data.frames — expect_snapshot_data","text":"copied https://github.com/bcgov/ssdtools permission (https://github.com/bcgov/ssdtools/issues/379)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/expect_snapshot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snapshot testing for data.frames — expect_snapshot_data","text":"","code":"expect_snapshot_data(x, name, digits = 6)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/expect_snapshot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Snapshot testing for data.frames — expect_snapshot_data","text":"x data.frame snapshot name character snapshot name digits integer passed signif() numeric variables","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/expect_snapshot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Snapshot testing for data.frames — expect_snapshot_data","text":"NULL (testthat::expect_snapshot_file())","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/expect_snapshot_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Snapshot testing for data.frames — expect_snapshot_data","text":"","code":"expect_snapshot_data(iris, name = iris) #> Error in edition_require(3, \"expect_snapshot_file()\"): `expect_snapshot_file()` requires the 3rd edition."},{"path":"https://ucd-serg.github.io/serodynamics/reference/initsfunction.html","id":null,"dir":"Reference","previous_headings":"","what":"JAGS chain initialization function — initsfunction","title":"JAGS chain initialization function — initsfunction","text":"JAGS chain initialization function","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/initsfunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(chain)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/initsfunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JAGS chain initialization function — initsfunction","text":"chain integer specifying chain initialize","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/initsfunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"JAGS chain initialization function — initsfunction","text":"list RNG seeds names","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/initsfunction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"JAGS chain initialization function — initsfunction","text":"","code":"initsfunction(1) #> $.RNG.seed #> [1] 1 #>  #> $.RNG.name #> [1] \"base::Wichmann-Hill\" #>"},{"path":"https://ucd-serg.github.io/serodynamics/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"load and format data — load_data","title":"load and format data — load_data","text":"add","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load and format data — load_data","text":"","code":"load_data(   datapath = \"inst/extdata/\",   datafile = \"TypoidCaseData_github_09.30.21.csv\" )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load and format data — load_data","text":"datapath path data folder datafile data file name","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load and format data — load_data","text":"list following elements: smpl.t = time since symptom/fever onset participant, max 7 visits logy = log antibody response time-point (max 7) 7 biomarkers participant ntest max number biomarkers nsmpl = max number samples per participant nsubj = number study participants ndim = number parameters model(y0, y1, t1, alpha, shape) .hyp, prec.hyp, omega wishdf parameters describe shape priors (y0, y1, t1, alpha, shape)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees.html","id":null,"dir":"Reference","previous_headings":"","what":"SEES Typhoid data — nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"subset data SEES project highlighting Typhoid longitudinal data Nepal.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid data — nepal_sees","text":"","code":"nepal_sees"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees.html","id":"nepal-sees","dir":"Reference","previous_headings":"","what":"nepal_sees","title":"SEES Typhoid data — nepal_sees","text":"base::data.frame() 904 rows 8 columns: Country Country name person_id ID identifying study participant sample_id ID identifying sample taken bldculres Pathogen participant tested positive ; Typhoid paratyphoid antigen_iso antigen/antibody combination included assay studyvisit Categorical estimated time frame sample taken; 28 days, 3_months, 6_months, 12_months, baseline, 18_months dayssincefeveronset Continuous measurement showing exact days since symptom onset result Continuous variable describing ELISA result","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SEES Typhoid data — nepal_sees","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees_jags_output.html","id":null,"dir":"Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid). Keeping IDs \"newperson\", \"sees_npl_1\", \"sees_npl_2\".","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees_jags_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"","code":"nepal_sees_jags_output"},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees_jags_output.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"S3 object class sr_model: dplyr::tbl_df contains posterior predictive distribution person-specific parameters \"new person\" observed data (Subject = \"newperson\") posterior distributions person-specific parameters two arbitrarily-chosen subjects (\"sees_npl_1\" \"sees_npl_2\"). Contains 40,000 rows, 7 columns, model attributes. Iteration Number sampling iterations: 500 iterations Chain Number MCMC chains run: 2 chains run Parameter Parameter estimated Iso_type Antibody/antigen type combination evaluated: HlyE_IgA HlyE_IgG Stratification variable used stratify jags model: typhi paratyphi Subject ID subject evaluated: newperson, sees_npl_1, sees_npl_2 value Estimated value parameter attributes list attributes summarize jags inputs, priors, optional jags_post mcmc object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees_jags_output.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_output","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees_jags_post.html","id":null,"dir":"Reference","previous_headings":"","what":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"run_mod() output using nepal_sees example data set input stratifying column \"bldculres\", diagnosis type (typhoid paratyphoid).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees_jags_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"","code":"nepal_sees_jags_post"},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees_jags_post.html","id":"nepal-sees-jags-post","dir":"Reference","previous_headings":"","what":"nepal_sees_jags_post","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"list consisting following named elements: curve_params data.frame titled curve_params contains posterior distribution attributes list attributes summarize jags inputs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/nepal_sees_jags_post.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SEES Typhoid run_mod jags output — nepal_sees_jags_post","text":"reference study: https://doi.org/10.1016/S2666-5247(22)00114-8","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_Rhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Rhat Plot Diagnostics — plot_jags_Rhat","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"plot_jags_Rhat() takes list output run_mod() produce dotplots potential scale reduction factors (Rhat) chain run mcmc estimation. Rhat values analyze spread chains compared pooled values goal observing rhat < 1.10 convergence. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_Rhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"plot_jags_Rhat(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_Rhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_Rhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"list ggplot2::ggplot objects producing dotplots rhat values specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_Rhat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_Rhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rhat Plot Diagnostics — plot_jags_Rhat","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_Rhat(data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_dens.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Plot Diagnostics — plot_jags_dens","title":"Density Plot Diagnostics — plot_jags_dens","text":"plot_jags_dens() takes list output run_mod() create density plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_dens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"plot_jags_dens(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_dens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Plot Diagnostics — plot_jags_dens","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_dens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density Plot Diagnostics — plot_jags_dens","text":"base::list() ggplot2::ggplot() objects producing density plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_dens.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Density Plot Diagnostics — plot_jags_dens","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_dens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density Plot Diagnostics — plot_jags_dens","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype and stratification for traceplot. plot_jags_dens(                data = data,                iso = \"HlyE_IgA\",                strat = \"typhi\") #> $typhi #> $typhi$HlyE_IgA  #>  #>"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Effective Sample Size Diagnostics — plot_jags_effect","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"plot_jags_effect() takes list output run_mod() create summary diagnostics chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. least 2 chains required run function. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"plot_jags_effect(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration t1 = posterior estimate time peak r = posterior estimate shape parameter alpha = posterior estimate decay rate strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"list ggplot2::ggplot objects showing proportion effective samples taken/total samples taken parameter iso combinations. estimate highest proportion effective samples taken listed first.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_effect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Effective Sample Size Diagnostics — plot_jags_effect","text":"","code":"data <- serodynamics::nepal_sees_jags_output  plot_jags_effect(data = data,                  iso = \"HlyE_IgA\",                  strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Trace Plot Diagnostics — plot_jags_trace","title":"Trace Plot Diagnostics — plot_jags_trace","text":"plot_jags_trace() takes list output run_mod() create trace plots chain run mcmc estimation. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"plot_jags_trace(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trace Plot Diagnostics — plot_jags_trace","text":"data list outputted run_mod(). iso Specify character string produce plots specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce plots specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce plots specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trace Plot Diagnostics — plot_jags_trace","text":"list ggplot2::ggplot objects producing trace plots specified input.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_trace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trace Plot Diagnostics — plot_jags_trace","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_jags_trace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trace Plot Diagnostics — plot_jags_trace","text":"","code":"data <- serodynamics::nepal_sees_jags_output  # Specifying isotype, parameter, and stratification for traceplot. plot_jags_trace(                 data = data,                 iso = \"HlyE_IgA\",                 strat = \"typhi\")"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_predicted_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"Plots median antibody response curve 95% credible interval ribbon, using MCMC samples posterior distribution. Optionally overlays observed data, applies logarithmic spacing y- x-axes, shows individual sampled curves.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_predicted_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"plot_predicted_curve(   model,   ids,   antigen_iso,   dataset = NULL,   legend_obs = \"Observed data\",   legend_median = \"Median prediction\",   show_quantiles = TRUE,   log_y = FALSE,   log_x = FALSE,   show_all_curves = FALSE,   alpha_samples = 0.3,   xlim = NULL,   ylab = NULL,   facet_by_id = length(ids) > 1,   ncol = NULL )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_predicted_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"model sr_model object (returned run_mod()) containing samples posterior distribution model parameters. ids participant IDs plot; example, \"sees_npl_128\". antigen_iso antigen isotype plot; example, \"HlyE_IgA\" \"HlyE_IgG\". dataset (Optional) dplyr::tbl_df observed antibody response data. Must contain: timeindays value id antigen_iso legend_obs Label observed data legend. legend_median Label median prediction line. show_quantiles logical; TRUE (default), plots 2.5%, 50%, 97.5% quantiles. log_y logical; TRUE, applies log10 transformation y-axis. log_x logical; TRUE, applies log10 transformation x-axis. show_all_curves logical; TRUE, overlays individual sampled curves. alpha_samples Numeric; transparency level individual curves (default = 0.3). xlim (Optional) numeric vector length 2 providing custom x-axis limits. ylab (Optional) string y-axis label. NULL (default), label automatically set \"ELISA units\" \"ELISA units (log scale)\" based log_y argument. facet_by_id logical; TRUE, facets plot 'id'. Defaults TRUE multiple IDs provided. ncol integer; number columns faceting.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_predicted_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"ggplot2::ggplot object displaying predicted antibody response curves median curve 95% credible interval band default.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_predicted_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Predicted Antibody Response Curves (Median + 95% CI) — plot_predicted_curve","text":"","code":"sees_model <- serodynamics::nepal_sees_jags_output sees_data <- serodynamics::nepal_sees  # Plot (linear axes) with all individual curves + median ribbon p1 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p1)   # Plot (log10 y-axis) with all individual curves + median ribbon p2 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = TRUE,   log_x              = FALSE,   show_all_curves    = TRUE ) print(p2)   # Plot with custom x-axis limits (0-600 days) p3 <- plot_predicted_curve(   model              = sees_model,   dataset            = sees_data,   id                 = \"sees_npl_128\",   antigen_iso        = \"HlyE_IgA\",   show_quantiles     = TRUE,   log_y              = FALSE,   log_x              = FALSE,   show_all_curves    = TRUE,   xlim               = c(0, 600) ) print(p3)   # Multi-ID, faceted plot (single antigen): p4 <- plot_predicted_curve(   model           = sees_model,   dataset         = sees_data,   id              = c(\"sees_npl_128\", \"sees_npl_131\"),   antigen_iso     = \"HlyE_IgA\",   show_all_curves = TRUE,   facet_by_id     = TRUE ) print(p4)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_title_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting title for diagnostic functions — plot_title_fun","title":"Plotting title for diagnostic functions — plot_title_fun","text":"Plotting title diagnostic functions","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_title_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting title for diagnostic functions — plot_title_fun","text":"","code":"plot_title_fun(i, j)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/plot_title_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting title for diagnostic functions — plot_title_fun","text":"input strata j input antigen/iso combination","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/post_summ.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Table of Jags Posterior Estimates — post_summ","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"post_summ() takes list output run_mod() summary table parameter, antigen/antibody, stratification combination. Defaults produce every combination antigen/antibody, parameters, stratifications, unless otherwise specified. Antigen/antibody combinations stratifications vary analysis. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak r = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/post_summ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(   data,   iso = unique(data$Iso_type),   param = unique(data$Parameter),   strat = unique(data$Stratification) )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/post_summ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data list outputted run_mod(). iso Specify character string produce tables specific antigen/antibody combination, entered quotes. Default outputs antigen/antibody combinations. param Specify character string produce tables specific parameter, entered quotes. Options include: alpha = posterior estimate decay rate r = posterior estimate shape parameter t1 = posterior estimate time peak y0 = posterior estimate baseline antibody concentration y1 = posterior estimate peak antibody concentration strat Specify character string produce tables specific stratification entered quotes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/post_summ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"data.frame summarizing estimate mean, standard deviation (SD), median, quantiles (2.5%, 25.0%, 50.0%, 75.0%, 97.5%).","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/post_summ.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/post_summ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Table of Jags Posterior Estimates — post_summ","text":"","code":"post_summ(data = serodynamics::nepal_sees_jags_output) #> # A tibble: 20 × 11 #>    Iso_type Parameter Stratification       Mean       SD  Median  `2.5%` `25.0%` #>    <chr>    <chr>     <chr>               <dbl>    <dbl>   <dbl>   <dbl>   <dbl> #>  1 HlyE_IgA alpha     paratyphi         0.00266  3.92e-3 1.56e-3 1.99e-4 7.47e-4 #>  2 HlyE_IgA alpha     typhi             0.00293  4.18e-3 1.51e-3 1.48e-4 6.88e-4 #>  3 HlyE_IgA shape     paratyphi         1.63     2.82e-1 1.56e+0 1.27e+0 1.44e+0 #>  4 HlyE_IgA shape     typhi             1.77     4.41e-1 1.67e+0 1.26e+0 1.49e+0 #>  5 HlyE_IgA t1        paratyphi         4.28     2.11e+0 3.90e+0 1.56e+0 2.73e+0 #>  6 HlyE_IgA t1        typhi             7.91     5.98e+0 6.36e+0 1.95e+0 4.39e+0 #>  7 HlyE_IgA y0        paratyphi         3.83     2.65e+0 2.85e+0 1.07e+0 1.88e+0 #>  8 HlyE_IgA y0        typhi             2.90     2.23e+0 2.34e+0 7.70e-1 1.69e+0 #>  9 HlyE_IgA y1        paratyphi      2781.       4.19e+4 1.92e+2 7.45e+0 5.61e+1 #> 10 HlyE_IgA y1        typhi          1275.       6.42e+3 2.58e+2 9.11e+0 8.44e+1 #> 11 HlyE_IgG alpha     paratyphi         0.00202  2.11e-3 1.43e-3 2.25e-4 7.07e-4 #> 12 HlyE_IgG alpha     typhi             0.00196  1.88e-3 1.39e-3 2.69e-4 7.57e-4 #> 13 HlyE_IgG shape     paratyphi         1.41     1.56e-1 1.39e+0 1.17e+0 1.29e+0 #> 14 HlyE_IgG shape     typhi             1.49     3.78e-1 1.39e+0 1.08e+0 1.23e+0 #> 15 HlyE_IgG t1        paratyphi         5.02     1.87e+0 4.73e+0 2.18e+0 3.75e+0 #> 16 HlyE_IgG t1        typhi             7.67     6.84e+0 6.02e+0 1.59e+0 3.82e+0 #> 17 HlyE_IgG y0        paratyphi         2.46     9.14e-1 2.33e+0 1.23e+0 1.87e+0 #> 18 HlyE_IgG y0        typhi             2.11     1.40e+0 1.79e+0 4.79e-1 1.22e+0 #> 19 HlyE_IgG y1        paratyphi       929.       4.52e+3 2.73e+2 2.09e+1 1.08e+2 #> 20 HlyE_IgG y1        typhi           512.       9.65e+2 2.44e+2 2.77e+1 1.11e+2 #> # ℹ 3 more variables: `50.0%` <dbl>, `75.0%` <dbl>, `97.5%` <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/reference/postprocess_jags_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Postprocess JAGS output — postprocess_jags_output","title":"Postprocess JAGS output — postprocess_jags_output","text":"Postprocess JAGS output","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/postprocess_jags_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"postprocess_jags_output(jags_output, ids, antigen_isos)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/postprocess_jags_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Postprocess JAGS output — postprocess_jags_output","text":"jags_output output runjags::run.jags() ids IDs individuals sampled (JAGS discards information, re-attached) antigen_isos names biomarkers modeled (JAGS discards information, re-attached)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/postprocess_jags_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Postprocess JAGS output — postprocess_jags_output","text":"tibble::tbl_df","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/postprocess_jags_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Postprocess JAGS output — postprocess_jags_output","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   dplyr::filter(     antigen_iso |> stringr::str_starts(pattern = \"HlyE\")   ) |>   sim_case_data(     n = 5,     antigen_isos = c(\"HlyE_IgA\", \"HlyE_IgG\")   ) prepped_data <- prep_data(raw_data) priors <- prep_priors(max_antigens = prepped_data$n_antigen_isos) nchains <- 2 # nr of MC chains to run simultaneously nadapt <- 1000 # nr of iterations for adaptation nburnin <- 100 # nr of iterations to use for burn-in nmc <- 100 # nr of samples in posterior chains niter <- 200 # nr of iterations for posterior sample nthin <- round(niter / nmc) # thinning needed to produce nmc from niter  tomonitor <- c(\"y0\", \"y1\", \"t1\", \"alpha\", \"shape\")  file_mod <- serodynamics_example(\"model.jags\")  set.seed(11325) jags_post <- runjags::run.jags(   model = file_mod,   data = c(prepped_data, priors),   inits = initsfunction,   method = \"parallel\",   adapt = nadapt,   burnin = nburnin,   thin = nthin,   sample = nmc,   n.chains = nchains,   monitor = tomonitor,   summarise = FALSE ) #> Calling 2 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 26 06:21:59 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 24 #>    Total graph size: 930 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 1000 #> -------------------------------------------------| 1000 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation successful #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 200 #> -------------------------------------------------| 200 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation  curve_params <- jags_post |> postprocess_jags_output(   ids = attr(prepped_data, \"ids\"),   antigen_isos = attr(prepped_data, \"antigens\") )  print(curve_params) #> # A tibble: 400 × 8 #>    antigen_iso  iter chain    y0     y1    t1    alpha     r #>    <fct>       <int> <int> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 HlyE_IgA        1     1 1.39   77.1  10.7  0.00202   1.50 #>  2 HlyE_IgA        2     1 0.772  23.3  10.4  0.000669  1.38 #>  3 HlyE_IgA        3     1 1.01   19.2   3.23 0.000132  1.52 #>  4 HlyE_IgA        4     1 1.13    1.39  7.88 0.000579  1.49 #>  5 HlyE_IgA        5     1 1.54   83.6   6.11 0.000722  1.51 #>  6 HlyE_IgA        6     1 1.19  420.    8.36 0.00330   1.32 #>  7 HlyE_IgA        7     1 1.03    5.44  7.98 0.000382  1.41 #>  8 HlyE_IgA        8     1 1.40    3.24 11.0  0.00104   1.69 #>  9 HlyE_IgA        9     1 1.01   12.4   7.19 0.000357  1.54 #> 10 HlyE_IgA       10     1 1.12    2.18  6.46 0.000973  1.51 #> # ℹ 390 more rows"},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_data.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare data for JAGs — prep_data","title":"prepare data for JAGs — prep_data","text":"prepare data JAGs","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare data for JAGs — prep_data","text":"","code":"prep_data(   dataframe,   biomarker_column = get_biomarker_names_var(dataframe),   verbose = FALSE )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare data for JAGs — prep_data","text":"dataframe data.frame containing ... biomarker_column character string indicating column contains antigen-isotype names verbose whether produce verbose messaging","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prepare data for JAGs — prep_data","text":"prepped_jags_data object (list extra attributes ...)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"prepare data for JAGs — prep_data","text":"","code":"set.seed(1) raw_data <-   serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 5) prepped_data <- prep_data(raw_data)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare priors — prep_priors","title":"Prepare priors — prep_priors","text":"Takes multiple vector inputs allow modifiable priors. Priors can specified option run_mod.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(   max_antigens,   mu_hyp_param = c(1, 7, 1, -4, -1),   prec_hyp_param = c(1, 1e-05, 1, 0.001, 1),   omega_param = c(1, 50, 1, 10, 1),   wishdf_param = 20,   prec_logy_hyp_param = c(4, 1) )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare priors — prep_priors","text":"max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare priors — prep_priors","text":"\"curve_params_priors\" object (subclass list inputs prep_priors() attached attributes entry named \"used_priors\"), containing following elements: \"n_params\": Corresponds 5 parameters estimated. \"mu.hyp\": matrix hyperpriors dimensions max_antigens x 5 (# parameters), representing mean hyperprior distribution five seroresponse parameters: y0, y1, t1, r, alpha). \"prec.hyp\": three-dimensional numeric array dimensions max_antigens x 5 (# parameters), containing precision matrices hyperprior distributions mu.hyp, biomarker. \"omega\" : three-dimensional numeric array 5 matrix,dimensions max_antigens x 5 (# parameters), representing precision matrix Wishart hyper-priors prec.hyp. \"wishdf\": vector 2 values specifying degrees freedom Wishart distribution used subject-level precision prior. \"prec.logy.hyp\": matrix hyper-parameters precision (inverse variance) individual variation measuring max_antigens x 2, log-scale. used_priors = inputs prep_priors() attached attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/prep_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare priors — prep_priors","text":"","code":"prep_priors(max_antigens = 2,             mu_hyp_param = c(1.0, 7.0, 1.0, -4.0, -1.0),             prec_hyp_param = c(1.0, 0.00001, 1.0, 0.001, 1.0),             omega_param = c(1.0, 50.0, 1.0, 10.0, 1.0),             wishdf_param = 20,             prec_logy_hyp_param = c(4.0, 1.0)) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>   prep_priors(max_antigens = 2) #> $n_params #> [1] 5 #>  #> $mu.hyp #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    7    1   -4   -1 #> [2,]    1    7    1   -4   -1 #>  #> $prec.hyp #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1]  [,2] [,3] [,4] [,5] #> [1,]    0 1e-05    0    0    0 #> [2,]    0 1e-05    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3]  [,4] [,5] #> [1,]    0    0    0 0.001    0 #> [2,]    0    0    0 0.001    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $omega #> , , 1 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    1    0    0    0    0 #>  #> , , 2 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   50    0    0    0 #> [2,]    0   50    0    0    0 #>  #> , , 3 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    1    0    0 #>  #> , , 4 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0   10    0 #> [2,]    0    0    0   10    0 #>  #> , , 5 #>  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    1 #> [2,]    0    0    0    0    1 #>  #>  #> $wishdf #> [1] 20 20 #>  #> $prec.logy.hyp #>      [,1] [,2] #> [1,]    4    1 #> [2,]    4    1 #>  #> attr(,\"class\") #> [1] \"curve_params_priors\" \"list\"                #> attr(,\"used_priors\") #> attr(,\"used_priors\")$mu_hyp_param #> [1]  1  7  1 -4 -1 #>  #> attr(,\"used_priors\")$prec_hyp_param #> [1] 1e+00 1e-05 1e+00 1e-03 1e+00 #>  #> attr(,\"used_priors\")$omega_param #> [1]  1 50  1 10  1 #>  #> attr(,\"used_priors\")$wishdf_param #> [1] 20 #>  #> attr(,\"used_priors\")$prec_logy_hyp_param #> [1] 4 1 #>"},{"path":"https://ucd-serg.github.io/serodynamics/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot serocalculator get_biomarker_levels, get_biomarker_names_var","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/run_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Jags Model — run_mod","title":"Run Jags Model — run_mod","text":"run_mod() takes data frame adjustable MCMC inputs runjags::run.jags() MCMC Bayesian model estimate antibody dynamic curve parameters. rjags::jags.model() models seroresponse dynamics infection. antibody dynamic curve includes following parameters: y0 = baseline antibody concentration y1 = peak antibody concentration t1 = time peak shape = shape parameter alpha = decay rate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/run_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Jags Model — run_mod","text":"","code":"run_mod(   data,   file_mod = serodynamics_example(\"model.jags\"),   nchain = 4,   nadapt = 0,   nburn = 0,   nmc = 100,   niter = 100,   strat = NA,   with_post = FALSE,   ... )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/run_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Jags Model — run_mod","text":"data base::data.frame() following columns. file_mod name file contains model structure. nchain integer 1 4 specifies number MCMC chains run per jags model. nadapt integer specifying number adaptations per chain. nburn integer specifying number burn ins sampling. nmc integer specifying number samples posterior chains. niter integer specifying number iterations. strat character string specifying stratification variable, entered quotes. with_post logical value specifying whether raw jags.post component included element list object returned run_mod() (see Value section details). Note: objects can large. ... Arguments passed prep_priors max_antigens integer specifying many antigen-isotypes (biomarkers) modeled. mu_hyp_param numeric vector 5 values representing prior mean population level parameters parameters (y0, y1, t1, r, alpha) biomarker. specified, must 5 values long, representing following parameters: y0 = baseline antibody concentration (default = 1.0) y1 = peak antibody concentration (default = 7.0) t1 = time peak (default = 1.0) r = shape parameter (default = -4.0) alpha = decay rate (default = -1.0) prec_hyp_param numeric vector 5 values corresponding hyperprior diagonal entries precision matrix (.e. inverse variance) representing prior covariance uncertainty around mu_hyp_param. specified, must 5 values long: defaults: y0 = 1.0, y1 = 0.00001, t1 = 1.0, r = 0.001, alpha = 1.0 omega_param numeric vector 5 values corresponding diagonal entries representing Wishart hyperprior distributions prec_hyp_param, describing much expect parameters vary individuals. specified, must 5 values long: defaults: y0 = 1.0, y1 = 50.0, t1 = 1.0, r = 10.0, alpha = 1.0 wishdf_param integer vector 1 value specifying degrees freedom Wishart hyperprior distribution prec_hyp_param. specified, must 1 value long. default = 20.0 value wishdf_param controls informative Wishart prior . Higher values lead tighter priors individual variation. Lower values (e.g., 5–10) make prior weakly informative, can help improve convergence model -regularized. prec_logy_hyp_param numeric vector 2 values corresponding hyperprior diagonal entries log-scale precision matrix (.e. inverse variance) representing prior beliefs individual variation. specified, must 2 values long: defaults = 4.0, 1.0","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/run_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Jags Model — run_mod","text":"sr_model class object: subclass dplyr::tbl_df contains MCMC samples joint posterior distribution model parameters, conditional provided input data, including following: iteration = Number sampling iterations chain = Number MCMC chains run; 1 4 Parameter = Parameter estimated. Includes following: y0 = Posterior estimate baseline antibody concentration y1 = Posterior estimate peak antibody concentration t1 = Posterior estimate time peak shape = Posterior estimate shape parameter alpha = Posterior estimate decay rate Iso_type = Antibody/antigen type combination evaluated Stratification = variable used stratify jags model Subject = ID subject evaluated value = Estimated value parameter following attributes included output: class: Class output object. nChain: Number chains run. nParameters: amount parameters estimated model. nIterations: Number iteration specified. nBurnin: Number burn ins. nThin: Thinning number (niter/nmc). priors: list summarizes input priors, including: mu_hyp_param prec_hyp_param omega_param wishdf prec_logy_hyp_param fitted_residuals: data.frame containing fitted residual values observations. optional \"jags.post\" attribute, included argument with_post = TRUE.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/run_mod.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Jags Model — run_mod","text":"Sam Schildhauer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/run_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Jags Model — run_mod","text":"","code":"if (!is.element(runjags::findjags(), c(\"\", NULL))) {   library(runjags)   set.seed(1)   library(dplyr)   strat1 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 2\")   strat2 <- serocalculator::typhoid_curves_nostrat_100 |>     sim_case_data(n = 100) |>     mutate(strat = \"stratum 1\")    dataset <- bind_rows(strat1, strat2)    fitted_model <- run_mod(     data = dataset, # The data set input     file_mod = serodynamics_example(\"model.jags\"),     nchain = 4, # Number of mcmc chains to run     nadapt = 100, # Number of adaptations to run     nburn = 100, # Number of unrecorded samples before sampling begins     nmc = 1000,     niter = 2000, # Number of iterations     strat = \"strat\"   ) # Variable to be stratified } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 26 06:22:06 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 3020 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 44517 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation #> Calling 4 simulations using the parallel method... #> Following the progress of chain 1 (the program will wait for all chains #> to finish before continuing): #> Welcome to JAGS 4.3.2 on Fri Sep 26 06:22:58 2025 #> JAGS is free software and comes with ABSOLUTELY NO WARRANTY #> Loading module: basemod: ok #> Loading module: bugs: ok #> . . Reading data file data.txt #> . Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2555 #>    Unobserved stochastic nodes: 535 #>    Total graph size: 39309 #> . Reading parameter file inits1.txt #> . Initializing model #> . Adapting 100 #> -------------------------------------------------| 100 #> ++++++++++++++++++++++++++++++++++++++++++++++++++ 100% #> Adaptation incomplete. #> . Updating 100 #> -------------------------------------------------| 100 #> ************************************************** 100% #> . . . . . . Updating 2000 #> -------------------------------------------------| 2000 #> ************************************************** 100% #> . . . . Updating 0 #> . Deleting model #> .  #> All chains have finished #> Warning: The adaptation phase of one or more models was not completed in 100 iterations, so the current samples may not be optimal - try increasing the number of iterations to the \"adapt\" argument #> Simulation complete.  Reading coda files... #> Coda files loaded successfully #> Finished running the simulation"},{"path":"https://ucd-serg.github.io/serodynamics/reference/serodynamics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Modeling longitudinal immune seroresponses pathogens.","code":""},{"path":[]},{"path":"https://ucd-serg.github.io/serodynamics/reference/serodynamics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"serodynamics: What the Package Does (One Line, Title Case) — serodynamics-package","text":"Maintainer: Samuel Schildhauer sschildhauer@ucdavis.edu Authors: Peter Teunis p.teunis@emory.edu (Author method original code.) [copyright holder] Kristen Aiemjoy kaiemjoy@ucdavis.edu Douglas Ezra Morrison demorrison@ucdavis.edu contributors: Kwan Ho Lee ksjlee@ucdavis.edu [contributor]","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/serodynamics_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to an example file — serodynamics_example","title":"Get path to an example file — serodynamics_example","text":"serodynamics package comes bundled number sample files inst/extdata directory. serodynamics_example() function make sample files easy access.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/serodynamics_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example(file = NULL)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/serodynamics_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to an example file — serodynamics_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/serodynamics_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to an example file — serodynamics_example","text":"character string providing path file specified file, vector available files file = NULL.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/serodynamics_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get path to an example file — serodynamics_example","text":"Adapted readr::readr_example() following guidance https://r-pkgs.org/data.html#sec-data-example-path-helper.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/serodynamics_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to an example file — serodynamics_example","text":"","code":"serodynamics_example() #> [1] \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\" #> [2] \"model.dobson.jags\"                              #> [3] \"model.jags\"                                     serodynamics_example(   \"SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv\") #> /home/runner/work/_temp/Library/serodynamics/extdata/SEES_Case_Nepal_ForSeroKinetics_02-13-2025.csv"},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_case_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"Simulate longitudinal case follow-data homogeneous population","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_case_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"sim_case_data(   n,   curve_params,   antigen_isos = get_biomarker_levels(curve_params),   max_n_obs = 10,   dist_n_obs = tibble::tibble(n_obs = 1:max_n_obs, prob = 1/max_n_obs),   followup_interval = 7,   followup_variance = 1 )"},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_case_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"n integer number cases simulate curve_params curve_params object serocalculator::as_curve_params, assumed unstratified antigen_isos character vector: antigen isotypes simulate max_n_obs maximum number observations dist_n_obs distribution number observations (tibble::tbl_df) followup_interval integer followup_variance integer","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_case_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"case_data object","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_case_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate longitudinal case follow-up data from a homogeneous population — sim_case_data","text":"","code":"set.seed(1) serocalculator::typhoid_curves_nostrat_100 |>   sim_case_data(n = 100) #> # A tibble: 3,020 × 11 #>    id    visit_num timeindays  iter antigen_iso    y0     y1    t1   alpha     r #>  * <chr>     <int>      <dbl> <int> <fct>       <dbl>  <dbl> <dbl>   <dbl> <dbl> #>  1 1             1          0    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  2 1             1          0    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  3 1             1          0    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  4 1             1          0    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #>  5 1             1          0    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #>  6 1             2          7    83 HlyE_IgA    1.33   50.8   2.60 2.68e-3  1.54 #>  7 1             2          7    83 HlyE_IgG    3.49  265.    6.08 1.53e-3  1.24 #>  8 1             2          7    83 LPS_IgA     0.878   4.69  3.06 9.84e-4  2.42 #>  9 1             2          7    83 LPS_IgG     1.64  300.    2.35 7.28e-4  1.60 #> 10 1             2          7    83 Vi_IgG      1.30  264.    8.02 5.46e-5  1.26 #> # ℹ 3,010 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_n_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate number of longitudinal observations — sim_n_obs","title":"Simulate number of longitudinal observations — sim_n_obs","text":"Simulate number longitudinal observations","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_n_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"sim_n_obs(dist_n_obs, n)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_n_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate number of longitudinal observations — sim_n_obs","text":"dist_n_obs distribution number longitudinal observations n number participants simulate","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_n_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate number of longitudinal observations — sim_n_obs","text":"integer vector","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/sim_n_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate number of longitudinal observations — sim_n_obs","text":"","code":"dist_n_obs = tibble::tibble(n_obs = 1:5, prob = 1/5)  dist_n_obs |> sim_n_obs(n = 10) #>  [1] 4 3 2 2 2 2 3 2 4 2"},{"path":"https://ucd-serg.github.io/serodynamics/reference/use_att_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"use_att_names takes prepared longitudinal data antibody kinetic modeling names columns using attribute values allow merging modeled run_mod() output dplyr::tbl_df. column names include Subject, Iso_type, t, result.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/use_att_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"","code":"use_att_names(data)"},{"path":"https://ucd-serg.github.io/serodynamics/reference/use_att_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"data data.frame raw longitudinal data prepared antibody kinetic modeling using as_case_data().","code":""},{"path":"https://ucd-serg.github.io/serodynamics/reference/use_att_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assigns column names to conform with calc_fit_mod() using attributes — use_att_names","text":"input data.frame columns named attributes.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/news/index.html","id":"serodynamics-development-version","dir":"Changelog","previous_headings":"","what":"serodynamics (development version)","title":"serodynamics (development version)","text":"Initial CRAN submission.","code":""},{"path":"https://ucd-serg.github.io/serodynamics/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"serodynamics (development version)","text":"Including fitted residual values data frame run_mod output. (#101) Added plot_predicted_curve() support faceting multiple IDs (#68) Replacing old data object new run_mod output (#102) Adding class assignment run_mod output (#76) Making prep_priors modifiable (#78) Taking include_subs input option, default include individuals Making single tbl output pieces attributes. jags.post now optionally included output, specified argument with_post subjects now optionally included curve_params output component, specified argument include_subs Diagnostic function produce R-hat dotplots stratification (#67) Added function summarizing estimates table (#74) Diagnostic trace plot function strat (#64) Diagnostic function produce effective sample size plots stratification (#66) Diagnostic function produce density plots stratification (#27) Added SEES data set data folder documentation (#41) Fixing SEES data added jags_post SEES (#63) as_case_data() now creates column visit_num (#47, #50) Added postprocess_jags_output() API (#33) Added initsfunction() API (#37) Added participant IDs names nsmpl element prep_data() output (#34) Added initsfunction() API (#37) Added as_case_data() API (#31) Added prep_priors() API (#30) Added autoplot() method case_data objects (#28) Added examples sim_pop_data(), autoplot.case_data() (#18) Added attributes return run_mod function (#24) exported run_mod() function (#22) Function runs jags option stratification included. (#14) Changed package name serodynamics. (#19, #20)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"serodynamics (development version)","text":"None yet","code":""},{"path":"https://ucd-serg.github.io/serodynamics/news/index.html","id":"developer-facing-changes-development-version","dir":"Changelog","previous_headings":"","what":"Developer-facing changes","title":"serodynamics (development version)","text":"vectorized ab() function (#116) Added lintr::undesirable_function_linter() .lintr.R (#81) Reformatted .lintr R file (following https://github.com/r-lib/lintr/issues/2844#issuecomment-2776725389) (#81) Set shortcut pipe base pipe (#80) Added snapshot test run_mod() Clarified prep_data() internals using dplyr (#34) Removed “.R” suffix jags model files prevent getting linted R files (#34) Added dobson.Rmd minimal vignette (#36) Overall cleaning get checks working (#28) Added units tests prep_data(), sim_case_data() (#18) Added various GitHub Actions (#10, #15, #18)","code":""},{"path":"https://ucd-serg.github.io/serodynamics/news/index.html","id":"serodynamics-000","dir":"Changelog","previous_headings":"","what":"serodynamics 0.0.0","title":"serodynamics 0.0.0","text":"Started development.","code":""}]
